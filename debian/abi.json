{"Filepath":"misc.go","Functions":[{"Uniquefunname":"func UniqueOnSession(name string) bool","Funname":"UniqueOnSession","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func UniqueOnSystem(name string) bool","Funname":"UniqueOnSystem","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func UniqueOnSession(name string) bool","Funname":"lib.UniqueOnSession","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func UniqueOnSystem(name string) bool","Funname":"lib.UniqueOnSystem","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func uniqueOnAny(bus *dbus.Conn, name string) bool","Funname":"lib.uniqueOnAny","Returntype":"bool","Args":"bus *dbus.Conn, name string"},{"Uniquefunname":"func uniqueOnAny(bus *dbus.Conn, name string) bool","Funname":"uniqueOnAny","Returntype":"bool","Args":"bus *dbus.Conn, name string"}],"Records":[{"Name":"const:lib","Fields":["lib.SessionBus","lib.SystemBus"]}]}
{"Filepath":"app/app.go","Functions":[{"Uniquefunname":"func (app *App) Command(name string, desc string) *kingpin.CmdClause","Funname":"Command","Returntype":"*kingpin.CmdClause","Args":"name string, desc string"},{"Uniquefunname":"func (app *App) CpuProf() string","Funname":"CpuProf","Returntype":"string","Args":""},{"Uniquefunname":"func (app *App) EnableNoShutdownHook(noShutdownHook bool)","Funname":"EnableNoShutdownHook","Returntype":"","Args":"noShutdownHook bool"},{"Uniquefunname":"func (app *App) Flag(longName string, desc string) *kingpin.FlagClause","Funname":"Flag","Returntype":"*kingpin.FlagClause","Args":"longName string, desc string"},{"Uniquefunname":"func (app *App) IsLogLevelNone() bool","Funname":"IsLogLevelNone","Returntype":"bool","Args":""},{"Uniquefunname":"func (app *App) LogLevel() log.Priority","Funname":"LogLevel","Returntype":"log.Priority","Args":""},{"Uniquefunname":"func (app *App) MemProf() string","Funname":"MemProf","Returntype":"string","Args":""},{"Uniquefunname":"func New(name string, desc string, version string) *App","Funname":"New","Returntype":"*App","Args":"name string, desc string, version string"},{"Uniquefunname":"func (app *App) ParseCommandLine(args []string) string","Funname":"ParseCommandLine","Returntype":"string","Args":"args []string"},{"Uniquefunname":"func (app *App) StartProfile() error","Funname":"StartProfile","Returntype":"error","Args":""},{"Uniquefunname":"func (app *App) StopProfile()","Funname":"StopProfile","Returntype":"","Args":""},{"Uniquefunname":"func (app *App) Command(name string, desc string) *kingpin.CmdClause","Funname":"app.App.Command","Returntype":"*kingpin.CmdClause","Args":"name string, desc string"},{"Uniquefunname":"func (app *App) CpuProf() string","Funname":"app.App.CpuProf","Returntype":"string","Args":""},{"Uniquefunname":"func (app *App) EnableNoShutdownHook(noShutdownHook bool)","Funname":"app.App.EnableNoShutdownHook","Returntype":"","Args":"noShutdownHook bool"},{"Uniquefunname":"func (app *App) Flag(longName string, desc string) *kingpin.FlagClause","Funname":"app.App.Flag","Returntype":"*kingpin.FlagClause","Args":"longName string, desc string"},{"Uniquefunname":"func (app *App) IsLogLevelNone() bool","Funname":"app.App.IsLogLevelNone","Returntype":"bool","Args":""},{"Uniquefunname":"func (app *App) LogLevel() log.Priority","Funname":"app.App.LogLevel","Returntype":"log.Priority","Args":""},{"Uniquefunname":"func (app *App) MemProf() string","Funname":"app.App.MemProf","Returntype":"string","Args":""},{"Uniquefunname":"func (app *App) ParseCommandLine(args []string) string","Funname":"app.App.ParseCommandLine","Returntype":"string","Args":"args []string"},{"Uniquefunname":"func (app *App) StartProfile() error","Funname":"app.App.StartProfile","Returntype":"error","Args":""},{"Uniquefunname":"func (app *App) StopProfile()","Funname":"app.App.StopProfile","Returntype":"","Args":""},{"Uniquefunname":"func New(name string, desc string, version string) *App","Funname":"app.New","Returntype":"*App","Args":"name string, desc string, version string"},{"Uniquefunname":"func toLogLevel(name string) (log.Priority, error)","Funname":"app.toLogLevel","Returntype":"(log.Priority, error)","Args":"name string"},{"Uniquefunname":"func toLogLevel(name string) (log.Priority, error)","Funname":"toLogLevel","Returntype":"(log.Priority, error)","Args":"name string"}],"Records":[{"Name":"struct:app.App","Fields":["app.App.cmd *kingpin.Application","app.App.cpuprof *string","app.App.logLevel *string","app.App.memprof *string","app.App.profile *profile.Config","app.App.verbose *bool"]}]}
{"Filepath":"app/app_test.go","Functions":[{"Uniquefunname":"func ExampleApp()","Funname":"ExampleApp","Returntype":"","Args":""},{"Uniquefunname":"func ExampleApp()","Funname":"app.ExampleApp","Returntype":"","Args":""}],"Records":null}
{"Filepath":"appinfo/appinfo.go","Functions":null,"Records":[{"Name":"interface","Fields":["appinfo.AppInfo"]}]}
{"Filepath":"appinfo/applaunchcontext.go","Functions":[{"Uniquefunname":"func (ctx *AppLaunchContext) GetCmdPrefixes() []string","Funname":"GetCmdPrefixes","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ctx *AppLaunchContext) GetCmdSuffixes() []string","Funname":"GetCmdSuffixes","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetStartupNotifyId(appInfo AppInfo, files []string)(string, error)","Funname":"GetStartupNotifyId","Returntype":"(string, error)","Args":"appInfo AppInfo, files []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) GetTimestamp() uint32","Funname":"GetTimestamp","Returntype":"uint32","Args":""},{"Uniquefunname":"func (ctx *AppLaunchContext) LaunchFailed(startupNotifyId string) error","Funname":"LaunchFailed","Returntype":"error","Args":"startupNotifyId string"},{"Uniquefunname":"func NewAppLaunchContext(conn *x.Conn) *AppLaunchContext","Funname":"NewAppLaunchContext","Returntype":"*AppLaunchContext","Args":"conn *x.Conn"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetCmdPrefixes(v []string)","Funname":"SetCmdPrefixes","Returntype":"","Args":"v []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetCmdSuffixes(v []string)","Funname":"SetCmdSuffixes","Returntype":"","Args":"v []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetTimestamp(timestamp uint32)","Funname":"SetTimestamp","Returntype":"","Args":"timestamp uint32"},{"Uniquefunname":"func (ctx *AppLaunchContext) GetCmdPrefixes() []string","Funname":"appinfo.AppLaunchContext.GetCmdPrefixes","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ctx *AppLaunchContext) GetCmdSuffixes() []string","Funname":"appinfo.AppLaunchContext.GetCmdSuffixes","Returntype":"[]string","Args":""},{"Uniquefunname":"func appinfo.AppLaunchContext.GetStartupNotifyId(appInfo AppInfo, files []string)(string, error)","Funname":"appinfo.AppLaunchContext.GetStartupNotifyId","Returntype":"(string, error)","Args":"appInfo AppInfo, files []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) GetTimestamp() uint32","Funname":"appinfo.AppLaunchContext.GetTimestamp","Returntype":"uint32","Args":""},{"Uniquefunname":"func (ctx *AppLaunchContext) LaunchFailed(startupNotifyId string) error","Funname":"appinfo.AppLaunchContext.LaunchFailed","Returntype":"error","Args":"startupNotifyId string"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetCmdPrefixes(v []string)","Funname":"appinfo.AppLaunchContext.SetCmdPrefixes","Returntype":"","Args":"v []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetCmdSuffixes(v []string)","Funname":"appinfo.AppLaunchContext.SetCmdSuffixes","Returntype":"","Args":"v []string"},{"Uniquefunname":"func (ctx *AppLaunchContext) SetTimestamp(timestamp uint32)","Funname":"appinfo.AppLaunchContext.SetTimestamp","Returntype":"","Args":"timestamp uint32"},{"Uniquefunname":"func NewAppLaunchContext(conn *x.Conn) *AppLaunchContext","Funname":"appinfo.NewAppLaunchContext","Returntype":"*AppLaunchContext","Args":"conn *x.Conn"},{"Uniquefunname":"func init()","Funname":"appinfo.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:appinfo.AppLaunchContext","Fields":["appinfo.AppLaunchContext.cmdPrefixes []string","appinfo.AppLaunchContext.cmdSuffixes []string","appinfo.AppLaunchContext.conn *x.Conn","appinfo.AppLaunchContext.count uint","appinfo.AppLaunchContext.timestamp uint32"]},{"Name":"var:appinfo","Fields":["appinfo.hostname","appinfo.pid","appinfo.prog"]}]}
{"Filepath":"appinfo/startup_notify_msg.go","Functions":[{"Uniquefunname":"func (msg *StartupNotifyMessage) Broadcast(conn *x.Conn) error","Funname":"Broadcast","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func (msg *StartupNotifyMessage) Broadcast(conn *x.Conn) error","Funname":"appinfo.StartupNotifyMessage.Broadcast","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func (msg *StartupNotifyMessage) fillBuffer() *bytes.Buffer","Funname":"appinfo.StartupNotifyMessage.fillBuffer","Returntype":"*bytes.Buffer","Args":""},{"Uniquefunname":"func appinfo.broadcastXMessage(conn *x.Conn, atomMsgType, atomMsgTypeBegin x.Atom, msgReader io.Reader)error","Funname":"appinfo.broadcastXMessage","Returntype":"error","Args":"conn *x.Conn, atomMsgType, atomMsgTypeBegin x.Atom, msgReader io.Reader"},{"Uniquefunname":"func broadcastXMessage(conn *x.Conn, atomMsgType, atomMsgTypeBegin x.Atom, msgReader io.Reader)error","Funname":"broadcastXMessage","Returntype":"error","Args":"conn *x.Conn, atomMsgType, atomMsgTypeBegin x.Atom, msgReader io.Reader"},{"Uniquefunname":"func (msg *StartupNotifyMessage) fillBuffer() *bytes.Buffer","Funname":"fillBuffer","Returntype":"*bytes.Buffer","Args":""}],"Records":[{"Name":"struct:appinfo.StartupNotifyMessage","Fields":["appinfo.StartupNotifyMessage.KeyValues map[string]string","appinfo.StartupNotifyMessage.Type string"]}]}
{"Filepath":"appinfo/desktopappinfo/desktopappinfo.go","Functions":[{"Uniquefunname":"func (ai *DesktopAppInfo) GetActions() []DesktopAction","Funname":"GetActions","Returntype":"[]DesktopAction","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetCategories() []string","Funname":"GetCategories","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetCommandline() string","Funname":"GetCommandline","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetComment() string","Funname":"GetComment","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetDBusActivatable() bool","Funname":"GetDBusActivatable","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetDisplayName() string","Funname":"GetDisplayName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetExecutable() string","Funname":"GetExecutable","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetFileName() string","Funname":"GetFileName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetGenericName() string","Funname":"GetGenericName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIcon() string","Funname":"GetIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetId() string","Funname":"GetId","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIsHidden() bool","Funname":"GetIsHidden","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIsHiden() bool","Funname":"GetIsHiden","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetKeywords() []string","Funname":"GetKeywords","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetMimeTypes() []string","Funname":"GetMimeTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetName() string","Funname":"GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetNoDisplay() bool","Funname":"GetNoDisplay","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetPath() string","Funname":"GetPath","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetShowIn(desktopEnvs []string) bool","Funname":"GetShowIn","Returntype":"bool","Args":"desktopEnvs []string"},{"Uniquefunname":"func (ai *DesktopAppInfo) GetStartupNotify() bool","Funname":"GetStartupNotify","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetStartupWMClass() string","Funname":"GetStartupWMClass","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetTerminal() bool","Funname":"GetTerminal","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetTryExec() string","Funname":"GetTryExec","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) IsExecutableOk() bool","Funname":"IsExecutableOk","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) IsInstalled() bool","Funname":"IsInstalled","Returntype":"bool","Args":""},{"Uniquefunname":"func Launch(files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"Launch","Returntype":"error","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func Launch(files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"Launch","Returntype":"error","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func NewDesktopAppInfo(id string) *DesktopAppInfo","Funname":"NewDesktopAppInfo","Returntype":"*DesktopAppInfo","Args":"id string"},{"Uniquefunname":"func NewDesktopAppInfoFromFile(filename string) (*DesktopAppInfo, error)","Funname":"NewDesktopAppInfoFromFile","Returntype":"(*DesktopAppInfo, error)","Args":"filename string"},{"Uniquefunname":"func NewDesktopAppInfoFromKeyFile(kfile *keyfile.KeyFile) (*DesktopAppInfo, error)","Funname":"NewDesktopAppInfoFromKeyFile","Returntype":"(*DesktopAppInfo, error)","Args":"kfile *keyfile.KeyFile"},{"Uniquefunname":"func SetDataDirs(dirs []string)","Funname":"SetDataDirs","Returntype":"","Args":"dirs []string"},{"Uniquefunname":"func (ai *DesktopAppInfo) ShouldShow() bool","Funname":"ShouldShow","Returntype":"bool","Args":""},{"Uniquefunname":"func StartCommand(files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"StartCommand","Returntype":"(*exec.Cmd, error)","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func StartCommand(files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"StartCommand","Returntype":"(*exec.Cmd, error)","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func desktopappinfo.DesktopAction.Launch(files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"desktopappinfo.DesktopAction.Launch","Returntype":"error","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func desktopappinfo.DesktopAction.StartCommand(files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"desktopappinfo.DesktopAction.StartCommand","Returntype":"(*exec.Cmd, error)","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func (ai *DesktopAppInfo) GetActions() []DesktopAction","Funname":"desktopappinfo.DesktopAppInfo.GetActions","Returntype":"[]DesktopAction","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetCategories() []string","Funname":"desktopappinfo.DesktopAppInfo.GetCategories","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetCommandline() string","Funname":"desktopappinfo.DesktopAppInfo.GetCommandline","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetComment() string","Funname":"desktopappinfo.DesktopAppInfo.GetComment","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetDBusActivatable() bool","Funname":"desktopappinfo.DesktopAppInfo.GetDBusActivatable","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetDisplayName() string","Funname":"desktopappinfo.DesktopAppInfo.GetDisplayName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetExecutable() string","Funname":"desktopappinfo.DesktopAppInfo.GetExecutable","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetFileName() string","Funname":"desktopappinfo.DesktopAppInfo.GetFileName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetGenericName() string","Funname":"desktopappinfo.DesktopAppInfo.GetGenericName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIcon() string","Funname":"desktopappinfo.DesktopAppInfo.GetIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetId() string","Funname":"desktopappinfo.DesktopAppInfo.GetId","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIsHidden() bool","Funname":"desktopappinfo.DesktopAppInfo.GetIsHidden","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetIsHiden() bool","Funname":"desktopappinfo.DesktopAppInfo.GetIsHiden","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetKeywords() []string","Funname":"desktopappinfo.DesktopAppInfo.GetKeywords","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetMimeTypes() []string","Funname":"desktopappinfo.DesktopAppInfo.GetMimeTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetName() string","Funname":"desktopappinfo.DesktopAppInfo.GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetNoDisplay() bool","Funname":"desktopappinfo.DesktopAppInfo.GetNoDisplay","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetPath() string","Funname":"desktopappinfo.DesktopAppInfo.GetPath","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetShowIn(desktopEnvs []string) bool","Funname":"desktopappinfo.DesktopAppInfo.GetShowIn","Returntype":"bool","Args":"desktopEnvs []string"},{"Uniquefunname":"func (ai *DesktopAppInfo) GetStartupNotify() bool","Funname":"desktopappinfo.DesktopAppInfo.GetStartupNotify","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetStartupWMClass() string","Funname":"desktopappinfo.DesktopAppInfo.GetStartupWMClass","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetTerminal() bool","Funname":"desktopappinfo.DesktopAppInfo.GetTerminal","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) GetTryExec() string","Funname":"desktopappinfo.DesktopAppInfo.GetTryExec","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) IsExecutableOk() bool","Funname":"desktopappinfo.DesktopAppInfo.IsExecutableOk","Returntype":"bool","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) IsInstalled() bool","Funname":"desktopappinfo.DesktopAppInfo.IsInstalled","Returntype":"bool","Args":""},{"Uniquefunname":"func desktopappinfo.DesktopAppInfo.Launch(files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"desktopappinfo.DesktopAppInfo.Launch","Returntype":"error","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func (ai *DesktopAppInfo) ShouldShow() bool","Funname":"desktopappinfo.DesktopAppInfo.ShouldShow","Returntype":"bool","Args":""},{"Uniquefunname":"func desktopappinfo.DesktopAppInfo.StartCommand(files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"desktopappinfo.DesktopAppInfo.StartCommand","Returntype":"(*exec.Cmd, error)","Args":"files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func NewDesktopAppInfo(id string) *DesktopAppInfo","Funname":"desktopappinfo.NewDesktopAppInfo","Returntype":"*DesktopAppInfo","Args":"id string"},{"Uniquefunname":"func NewDesktopAppInfoFromFile(filename string) (*DesktopAppInfo, error)","Funname":"desktopappinfo.NewDesktopAppInfoFromFile","Returntype":"(*DesktopAppInfo, error)","Args":"filename string"},{"Uniquefunname":"func NewDesktopAppInfoFromKeyFile(kfile *keyfile.KeyFile) (*DesktopAppInfo, error)","Funname":"desktopappinfo.NewDesktopAppInfoFromKeyFile","Returntype":"(*DesktopAppInfo, error)","Args":"kfile *keyfile.KeyFile"},{"Uniquefunname":"func SetDataDirs(dirs []string)","Funname":"desktopappinfo.SetDataDirs","Returntype":"","Args":"dirs []string"},{"Uniquefunname":"func getCurrentDesktop() []string","Funname":"desktopappinfo.getCurrentDesktop","Returntype":"[]string","Args":""},{"Uniquefunname":"func getId(filename string) string","Funname":"desktopappinfo.getId","Returntype":"string","Args":"filename string"},{"Uniquefunname":"func init()","Funname":"desktopappinfo.init","Returntype":"","Args":""},{"Uniquefunname":"func isDesktopAction(name string) bool","Funname":"desktopappinfo.isDesktopAction","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func desktopappinfo.launch(ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"desktopappinfo.launch","Returntype":"error","Args":"ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func newDesktopAppInfoFromFile(filename string) (*DesktopAppInfo, error)","Funname":"desktopappinfo.newDesktopAppInfoFromFile","Returntype":"(*DesktopAppInfo, error)","Args":"filename string"},{"Uniquefunname":"func desktopappinfo.startCommand(ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"desktopappinfo.startCommand","Returntype":"(*exec.Cmd, error)","Args":"ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func getCurrentDesktop() []string","Funname":"getCurrentDesktop","Returntype":"[]string","Args":""},{"Uniquefunname":"func getId(filename string) string","Funname":"getId","Returntype":"string","Args":"filename string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isDesktopAction(name string) bool","Funname":"isDesktopAction","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func launch(ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext)error","Funname":"launch","Returntype":"error","Args":"ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext"},{"Uniquefunname":"func newDesktopAppInfoFromFile(filename string) (*DesktopAppInfo, error)","Funname":"newDesktopAppInfoFromFile","Returntype":"(*DesktopAppInfo, error)","Args":"filename string"},{"Uniquefunname":"func startCommand(ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext)(*exec.Cmd, error)","Funname":"startCommand","Returntype":"(*exec.Cmd, error)","Args":"ai *DesktopAppInfo, cmdline string, files []string, launchContext *appinfo.AppLaunchContext"}],"Records":[{"Name":"struct:desktopappinfo.DesktopAction","Fields":["desktopappinfo.DesktopAction.Exec string","desktopappinfo.DesktopAction.Name string","desktopappinfo.DesktopAction.Section string","desktopappinfo.DesktopAction.parent *DesktopAppInfo"]},{"Name":"struct:desktopappinfo.DesktopAppInfo","Fields":["desktopappinfo.DesktopAppInfo.filename string","desktopappinfo.DesktopAppInfo.icon string","desktopappinfo.DesktopAppInfo.id string","desktopappinfo.DesktopAppInfo.name string"]},{"Name":"var:desktopappinfo","Fields":["desktopappinfo.ErrInvalidFileExt","desktopappinfo.ErrInvalidFirstSection","desktopappinfo.ErrInvalidType","desktopappinfo.currentDesktops","desktopappinfo.currentDesktopsOnce","desktopappinfo.keyReg","desktopappinfo.xdgAppDirs","desktopappinfo.xdgDataDirs"]},{"Name":"const:desktopappinfo","Fields":["desktopappinfo.KeyActions","desktopappinfo.KeyCategories","desktopappinfo.KeyComment","desktopappinfo.KeyDBusActivatable","desktopappinfo.KeyExec","desktopappinfo.KeyGenericName","desktopappinfo.KeyHidden","desktopappinfo.KeyIcon","desktopappinfo.KeyKeywords","desktopappinfo.KeyMimeType","desktopappinfo.KeyName","desktopappinfo.KeyNoDisplay","desktopappinfo.KeyNotShowIn","desktopappinfo.KeyOnlyShowIn","desktopappinfo.KeyPath","desktopappinfo.KeyStartupNotify","desktopappinfo.KeyStartupWMClass","desktopappinfo.KeyTerminal","desktopappinfo.KeyTryExec","desktopappinfo.KeyType","desktopappinfo.KeyURL","desktopappinfo.KeyVersion","desktopappinfo.MainSection","desktopappinfo.TypeApplication","desktopappinfo.TypeDirectory","desktopappinfo.TypeLink","desktopappinfo.desktopExt","desktopappinfo.enableInvoker","desktopappinfo.envDesktopEnv","desktopappinfo.errMsg","desktopappinfo.faliedMsg","desktopappinfo.gsSchemaStartdde"]}]}
{"Filepath":"appinfo/desktopappinfo/desktopappinfo_test.go","Functions":[{"Uniquefunname":"func TestGetActions(t *testing.T)","Funname":"TestGetActions","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetCurrentDestkops(t *testing.T)","Funname":"TestGetCurrentDestkops","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetExecutable(t *testing.T)","Funname":"TestGetExecutable","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetShowIn(t *testing.T)","Funname":"TestGetShowIn","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestNewDesktopAppInfo(t *testing.T)","Funname":"TestNewDesktopAppInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestNewDesktopAppInfoFromKeyFile(t *testing.T)","Funname":"TestNewDesktopAppInfoFromKeyFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_expandFieldCode(t *testing.T)","Funname":"Test_expandFieldCode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_splitExec(t *testing.T)","Funname":"Test_splitExec","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetActions(t *testing.T)","Funname":"desktopappinfo.TestGetActions","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetCurrentDestkops(t *testing.T)","Funname":"desktopappinfo.TestGetCurrentDestkops","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetExecutable(t *testing.T)","Funname":"desktopappinfo.TestGetExecutable","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetShowIn(t *testing.T)","Funname":"desktopappinfo.TestGetShowIn","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestNewDesktopAppInfo(t *testing.T)","Funname":"desktopappinfo.TestNewDesktopAppInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestNewDesktopAppInfoFromKeyFile(t *testing.T)","Funname":"desktopappinfo.TestNewDesktopAppInfoFromKeyFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_expandFieldCode(t *testing.T)","Funname":"desktopappinfo.Test_expandFieldCode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_splitExec(t *testing.T)","Funname":"desktopappinfo.Test_splitExec","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"desktopappinfo.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:desktopappinfo","Fields":["desktopappinfo.desktopFileContent0","desktopappinfo.desktopFileContent1","desktopappinfo.desktopFileContent10","desktopappinfo.desktopFileContent11","desktopappinfo.desktopFileContent2","desktopappinfo.desktopFileContent3","desktopappinfo.desktopFileContent4","desktopappinfo.desktopFileContent5","desktopappinfo.desktopFileContent6","desktopappinfo.desktopFileContent7","desktopappinfo.desktopFileContent8","desktopappinfo.desktopFileContent9"]}]}
{"Filepath":"appinfo/desktopappinfo/exec.go","Functions":[{"Uniquefunname":"func (err ErrCharNotEscaped) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrInvalidEscapeSequence) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrReservedCharNotQuoted) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *DesktopAppInfo) expandFieldCode(cmdline, files []string) ([]string, error)","Funname":"desktopappinfo.DesktopAppInfo.expandFieldCode","Returntype":"([]string, error)","Args":"cmdline, files []string"},{"Uniquefunname":"func (err ErrCharNotEscaped) Error() string","Funname":"desktopappinfo.ErrCharNotEscaped.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrInvalidEscapeSequence) Error() string","Funname":"desktopappinfo.ErrInvalidEscapeSequence.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrReservedCharNotQuoted) Error() string","Funname":"desktopappinfo.ErrReservedCharNotQuoted.Error","Returntype":"string","Args":""},{"Uniquefunname":"func eatAllSpace(reader *strings.Reader)","Funname":"desktopappinfo.eatAllSpace","Returntype":"","Args":"reader *strings.Reader"},{"Uniquefunname":"func desktopappinfo.expandFieldCode(cmdline, files []string, translatedName, icon, desktopFile string)([]string, error)","Funname":"desktopappinfo.expandFieldCode","Returntype":"([]string, error)","Args":"cmdline, files []string, translatedName, icon, desktopFile string"},{"Uniquefunname":"func getDefaultTerminal() (exec string, execArg string)","Funname":"desktopappinfo.getDefaultTerminal","Returntype":"(exec string, execArg string)","Args":""},{"Uniquefunname":"func isReservedChar(ch byte) bool","Funname":"desktopappinfo.isReservedChar","Returntype":"bool","Args":"ch byte"},{"Uniquefunname":"func shouldEscapeChar(ch byte) bool","Funname":"desktopappinfo.shouldEscapeChar","Returntype":"bool","Args":"ch byte"},{"Uniquefunname":"func splitExec(exec string) ([]string, error)","Funname":"desktopappinfo.splitExec","Returntype":"([]string, error)","Args":"exec string"},{"Uniquefunname":"func toLocalPath(in string) string","Funname":"desktopappinfo.toLocalPath","Returntype":"string","Args":"in string"},{"Uniquefunname":"func toURL(path string) string","Funname":"desktopappinfo.toURL","Returntype":"string","Args":"path string"},{"Uniquefunname":"func eatAllSpace(reader *strings.Reader)","Funname":"eatAllSpace","Returntype":"","Args":"reader *strings.Reader"},{"Uniquefunname":"func (ai *DesktopAppInfo) expandFieldCode(cmdline, files []string) ([]string, error)","Funname":"expandFieldCode","Returntype":"([]string, error)","Args":"cmdline, files []string"},{"Uniquefunname":"func expandFieldCode(cmdline, files []string, translatedName, icon, desktopFile string)([]string, error)","Funname":"expandFieldCode","Returntype":"([]string, error)","Args":"cmdline, files []string, translatedName, icon, desktopFile string"},{"Uniquefunname":"func getDefaultTerminal() (exec string, execArg string)","Funname":"getDefaultTerminal","Returntype":"(exec string, execArg string)","Args":""},{"Uniquefunname":"func isReservedChar(ch byte) bool","Funname":"isReservedChar","Returntype":"bool","Args":"ch byte"},{"Uniquefunname":"func shouldEscapeChar(ch byte) bool","Funname":"shouldEscapeChar","Returntype":"bool","Args":"ch byte"},{"Uniquefunname":"func splitExec(exec string) ([]string, error)","Funname":"splitExec","Returntype":"([]string, error)","Args":"exec string"},{"Uniquefunname":"func toLocalPath(in string) string","Funname":"toLocalPath","Returntype":"string","Args":"in string"},{"Uniquefunname":"func toURL(path string) string","Funname":"toURL","Returntype":"string","Args":"path string"}],"Records":[{"Name":"var:desktopappinfo","Fields":["desktopappinfo.ErrBadFieldCode","desktopappinfo.ErrEscapeCharAtEnd","desktopappinfo.ErrNoSpaceAfterQuoting","desktopappinfo.ErrQuotingNotClosed","desktopappinfo.escapeChars","desktopappinfo.reservedChars"]},{"Name":"struct:desktopappinfo.ErrCharNotEscaped","Fields":["desktopappinfo.ErrCharNotEscaped.Char byte"]},{"Name":"struct:desktopappinfo.ErrInvalidEscapeSequence","Fields":["desktopappinfo.ErrInvalidEscapeSequence.Char byte"]},{"Name":"struct:desktopappinfo.ErrReservedCharNotQuoted","Fields":["desktopappinfo.ErrReservedCharNotQuoted.Char byte"]}]}
{"Filepath":"appinfo/desktopappinfo/get_all.go","Functions":[{"Uniquefunname":"func GetAll(skipDirs map[string][]string) []*DesktopAppInfo","Funname":"GetAll","Returntype":"[]*DesktopAppInfo","Args":"skipDirs map[string][]string"},{"Uniquefunname":"func Walk(root string, walkFn WalkFunc)","Funname":"Walk","Returntype":"","Args":"root string, walkFn WalkFunc"},{"Uniquefunname":"func GetAll(skipDirs map[string][]string) []*DesktopAppInfo","Funname":"desktopappinfo.GetAll","Returntype":"[]*DesktopAppInfo","Args":"skipDirs map[string][]string"},{"Uniquefunname":"func Walk(root string, walkFn WalkFunc)","Funname":"desktopappinfo.Walk","Returntype":"","Args":"root string, walkFn WalkFunc"},{"Uniquefunname":"func getAppNames(root string, skipDirs []string) map[string]int","Funname":"desktopappinfo.getAppNames","Returntype":"map[string]int","Args":"root string, skipDirs []string"},{"Uniquefunname":"func getDirs(skipDirs map[string][]string) []AppsDir","Funname":"desktopappinfo.getDirs","Returntype":"[]AppsDir","Args":"skipDirs map[string][]string"},{"Uniquefunname":"func readDirNames(dirname string) ([]string, error)","Funname":"desktopappinfo.readDirNames","Returntype":"([]string, error)","Args":"dirname string"},{"Uniquefunname":"func stringSliceContains(slice []string, str string) bool","Funname":"desktopappinfo.stringSliceContains","Returntype":"bool","Args":"slice []string, str string"},{"Uniquefunname":"func walk(root, name0 string, info os.FileInfo, walkFn WalkFunc)","Funname":"desktopappinfo.walk","Returntype":"","Args":"root, name0 string, info os.FileInfo, walkFn WalkFunc"},{"Uniquefunname":"func getAppNames(root string, skipDirs []string) map[string]int","Funname":"getAppNames","Returntype":"map[string]int","Args":"root string, skipDirs []string"},{"Uniquefunname":"func getDirs(skipDirs map[string][]string) []AppsDir","Funname":"getDirs","Returntype":"[]AppsDir","Args":"skipDirs map[string][]string"},{"Uniquefunname":"func readDirNames(dirname string) ([]string, error)","Funname":"readDirNames","Returntype":"([]string, error)","Args":"dirname string"},{"Uniquefunname":"func stringSliceContains(slice []string, str string) bool","Funname":"stringSliceContains","Returntype":"bool","Args":"slice []string, str string"},{"Uniquefunname":"func walk(root, name0 string, info os.FileInfo, walkFn WalkFunc)","Funname":"walk","Returntype":"","Args":"root, name0 string, info os.FileInfo, walkFn WalkFunc"}],"Records":[{"Name":"struct:desktopappinfo.AppsDir","Fields":["desktopappinfo.AppsDir.AppNames map[string]int","desktopappinfo.AppsDir.Path string"]}]}
{"Filepath":"arch/arch.go","Functions":[{"Uniquefunname":"func Get() ArchFamilyType","Funname":"Get","Returntype":"ArchFamilyType","Args":""},{"Uniquefunname":"func Get() ArchFamilyType","Funname":"arch.Get","Returntype":"ArchFamilyType","Args":""}],"Records":[{"Name":"const:arch","Fields":["arch.AMD64","arch.Sunway","arch.Unknown"]}]}
{"Filepath":"archive/archive.go","Functions":[{"Uniquefunname":"func CompressDir(src, dest string) error","Funname":"CompressDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func CompressFiles(files []string, dest string) error","Funname":"CompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func Extracte(src, dest string) ([]string, error)","Funname":"Extracte","Returntype":"([]string, error)","Args":"src, dest string"},{"Uniquefunname":"func CompressDir(src, dest string) error","Funname":"archive.CompressDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func CompressFiles(files []string, dest string) error","Funname":"archive.CompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func Extracte(src, dest string) ([]string, error)","Funname":"archive.Extracte","Returntype":"([]string, error)","Args":"src, dest string"},{"Uniquefunname":"func getCompressType(file string) int32","Funname":"archive.getCompressType","Returntype":"int32","Args":"file string"},{"Uniquefunname":"func getCompressType(file string) int32","Funname":"getCompressType","Returntype":"int32","Args":"file string"}],"Records":[{"Name":"const:archive","Fields":["archive.CompressTypeTar","archive.CompressTypeTarBz2","archive.CompressTypeTarGz","archive.CompressTypeUnkown","archive.CompressTypeZip"]}]}
{"Filepath":"archive/archive_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestTarCompresssFiles(c *C.C)","Funname":"TestTarCompresssFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestTarExtracteFile(c *C.C)","Funname":"TestTarExtracteFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"archive.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"archive.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestTarCompresssFiles(c *C.C)","Funname":"archive.testWrapper.TestTarCompresssFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestTarExtracteFile(c *C.C)","Funname":"archive.testWrapper.TestTarExtracteFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"archive/tar.go","Functions":[{"Uniquefunname":"func tarCompressFiles(files []string, dest string) error","Funname":"archive.tarCompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func tarExtracteFile(src, dest string) ([]string, error)","Funname":"archive.tarExtracteFile","Returntype":"([]string, error)","Args":"src, dest string"},{"Uniquefunname":"func tarCompressFiles(files []string, dest string) error","Funname":"tarCompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func tarExtracteFile(src, dest string) ([]string, error)","Funname":"tarExtracteFile","Returntype":"([]string, error)","Args":"src, dest string"}],"Records":null}
{"Filepath":"archive/gzip/gzip.go","Functions":[{"Uniquefunname":"func CompressDir(src, dest string, t int32) error","Funname":"CompressDir","Returntype":"error","Args":"src, dest string, t int32"},{"Uniquefunname":"func CompressFiles(files []string, dest string, t int32) error","Funname":"CompressFiles","Returntype":"error","Args":"files []string, dest string, t int32"},{"Uniquefunname":"func Extracte(src, destDir string, t int32) ([]string, error)","Funname":"Extracte","Returntype":"([]string, error)","Args":"src, destDir string, t int32"},{"Uniquefunname":"func CompressDir(src, dest string, t int32) error","Funname":"gzip.CompressDir","Returntype":"error","Args":"src, dest string, t int32"},{"Uniquefunname":"func CompressFiles(files []string, dest string, t int32) error","Funname":"gzip.CompressFiles","Returntype":"error","Args":"files []string, dest string, t int32"},{"Uniquefunname":"func Extracte(src, destDir string, t int32) ([]string, error)","Funname":"gzip.Extracte","Returntype":"([]string, error)","Args":"src, destDir string, t int32"}],"Records":[{"Name":"const:gzip","Fields":["gzip.ArchiveTypeRar","gzip.ArchiveTypeTar","gzip.ArchiveTypeZip"]}]}
{"Filepath":"archive/gzip/gzip_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestTarCompresssFiles(c *C.C)","Funname":"TestTarCompresssFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestTarExtracteFile(c *C.C)","Funname":"TestTarExtracteFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"gzip.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"gzip.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestTarCompresssFiles(c *C.C)","Funname":"gzip.testWrapper.TestTarCompresssFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestTarExtracteFile(c *C.C)","Funname":"gzip.testWrapper.TestTarExtracteFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"archive/gzip/tar.go","Functions":[{"Uniquefunname":"func tarCompressFiles(files []string, dest string) error","Funname":"gzip.tarCompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func tarExtracte(src, dest string) ([]string, error)","Funname":"gzip.tarExtracte","Returntype":"([]string, error)","Args":"src, dest string"},{"Uniquefunname":"func tarCompressFiles(files []string, dest string) error","Funname":"tarCompressFiles","Returntype":"error","Args":"files []string, dest string"},{"Uniquefunname":"func tarExtracte(src, dest string) ([]string, error)","Funname":"tarExtracte","Returntype":"([]string, error)","Args":"src, dest string"}],"Records":null}
{"Filepath":"archive/utils/tar.go","Functions":[{"Uniquefunname":"func TarReaderExtracte(reader *tar.Reader, dest string) ([]string, error)","Funname":"TarReaderExtracte","Returntype":"([]string, error)","Args":"reader *tar.Reader, dest string"},{"Uniquefunname":"func TarWriterCompressFiles(writer *tar.Writer, files []string) error","Funname":"TarWriterCompressFiles","Returntype":"error","Args":"writer *tar.Writer, files []string"},{"Uniquefunname":"func tarWriterCompressDir(tw *tar.Writer, dir, parent string) error","Funname":"tarWriterCompressDir","Returntype":"error","Args":"tw *tar.Writer, dir, parent string"},{"Uniquefunname":"func tarWriterCompressFile(tw *tar.Writer, file, parent string) error","Funname":"tarWriterCompressFile","Returntype":"error","Args":"tw *tar.Writer, file, parent string"},{"Uniquefunname":"func TarReaderExtracte(reader *tar.Reader, dest string) ([]string, error)","Funname":"utils.TarReaderExtracte","Returntype":"([]string, error)","Args":"reader *tar.Reader, dest string"},{"Uniquefunname":"func TarWriterCompressFiles(writer *tar.Writer, files []string) error","Funname":"utils.TarWriterCompressFiles","Returntype":"error","Args":"writer *tar.Writer, files []string"},{"Uniquefunname":"func tarWriterCompressDir(tw *tar.Writer, dir, parent string) error","Funname":"utils.tarWriterCompressDir","Returntype":"error","Args":"tw *tar.Writer, dir, parent string"},{"Uniquefunname":"func tarWriterCompressFile(tw *tar.Writer, file, parent string) error","Funname":"utils.tarWriterCompressFile","Returntype":"error","Args":"tw *tar.Writer, file, parent string"}],"Records":null}
{"Filepath":"asound/asound.go","Functions":[{"Uniquefunname":"func (m Mixer) Attach(name string) error","Funname":"Attach","Returntype":"error","Args":"name string"},{"Uniquefunname":"func CTLOpen(name string, mode int) (CTL, error)","Funname":"CTLOpen","Returntype":"(CTL, error)","Args":"name string, mode int"},{"Uniquefunname":"func (ctl CTL) CardInfo(info CTLCardInfo) error","Funname":"CardInfo","Returntype":"error","Args":"info CTLCardInfo"},{"Uniquefunname":"func CardLoad(card int) bool","Funname":"CardLoad","Returntype":"bool","Args":"card int"},{"Uniquefunname":"func CardNext(rcard *int) error","Funname":"CardNext","Returntype":"error","Args":"rcard *int"},{"Uniquefunname":"func (ctl CTL) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (m Mixer) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (o Output) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (subformat PCMSubformat) Desc() string","Funname":"Desc","Returntype":"string","Args":""},{"Uniquefunname":"func (pcm PCM) Drain() error","Funname":"Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Drop() error","Funname":"Drop","Returntype":"error","Args":""},{"Uniquefunname":"func (params PCMHwParams) Dump(out Output) error","Funname":"Dump","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) Dump(out Output) error","Funname":"Dump","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpHwSetup(out Output) error","Funname":"DumpHwSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpSetup(out Output) error","Funname":"DumpSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpSwSetup(out Output) error","Funname":"DumpSwSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (err *Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (m Mixer) FindSelem(id MixerSelemId) MixerElem","Funname":"FindSelem","Returntype":"MixerElem","Args":"id MixerSelemId"},{"Uniquefunname":"func (m Mixer) FirstElem() MixerElem","Funname":"FirstElem","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (o Output) Flush() error","Funname":"Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (id MixerSelemId) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (info CTLCardInfo) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (info PCMInfo) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (m Mixer) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (opt *MixerSelemRegopt) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (params PCMHwParams) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (v DeviceNameHints) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func (iter DeviceNameHintsIter) Get(id string) string","Funname":"Get","Returntype":"string","Args":"id string"},{"Uniquefunname":"func (params PCMHwParams) GetBufferTimeMax() (val uint, dir int, err error)","Funname":"GetBufferTimeMax","Returntype":"(val uint, dir int, err error)","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetCard() int","Funname":"GetCard","Returntype":"int","Args":""},{"Uniquefunname":"func (info PCMInfo) GetCard() int","Funname":"GetCard","Returntype":"int","Args":""},{"Uniquefunname":"func (info PCMInfo) GetClass() PCMClass","Funname":"GetClass","Returntype":"PCMClass","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetComponents() string","Funname":"GetComponents","Returntype":"string","Args":""},{"Uniquefunname":"func GetDeviceNameHints(card int, iface string) (DeviceNameHints, error)","Funname":"GetDeviceNameHints","Returntype":"(DeviceNameHints, error)","Args":"card int, iface string"},{"Uniquefunname":"func (info CTLCardInfo) GetDriver() string","Funname":"GetDriver","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetID() string","Funname":"GetID","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetID() string","Funname":"GetID","Returntype":"string","Args":""},{"Uniquefunname":"func (id MixerSelemId) GetIndex() uint","Funname":"GetIndex","Returntype":"uint","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetLongName() string","Funname":"GetLongName","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetMixerName() string","Funname":"GetMixerName","Returntype":"string","Args":""},{"Uniquefunname":"func (id MixerSelemId) GetName() string","Funname":"GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetName() string","Funname":"GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetName() string","Funname":"GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (params PCMHwParams) GetPeriodSize() (PCMUFrames, int, error)","Funname":"GetPeriodSize","Returntype":"(PCMUFrames, int, error)","Args":""},{"Uniquefunname":"func (params PCMHwParams) GetPeriodTime() (uint, int, error)","Funname":"GetPeriodTime","Returntype":"(uint, int, error)","Args":""},{"Uniquefunname":"func (e MixerElem) GetSelemId(id MixerSelemId)","Funname":"GetSelemId","Returntype":"","Args":"id MixerSelemId"},{"Uniquefunname":"func (info PCMInfo) GetStream() PCMStream","Funname":"GetStream","Returntype":"PCMStream","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubclass() PCMSubclass","Funname":"GetSubclass","Returntype":"PCMSubclass","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevice() uint","Funname":"GetSubdevice","Returntype":"uint","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdeviceName() string","Funname":"GetSubdeviceName","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevicesAvail() uint","Funname":"GetSubdevicesAvail","Returntype":"uint","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevicesCount() uint","Funname":"GetSubdevicesCount","Returntype":"uint","Args":""},{"Uniquefunname":"func (pcm PCM) HwFree() error","Funname":"HwFree","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) HwParams(params PCMHwParams) error","Funname":"HwParams","Returntype":"error","Args":"params PCMHwParams"},{"Uniquefunname":"func (pcm PCM) HwParamsAny(params PCMHwParams)","Funname":"HwParamsAny","Returntype":"","Args":"params PCMHwParams"},{"Uniquefunname":"func (pcm PCM) HwParamsSetAccess(params PCMHwParams, access PCMAccess) error","Funname":"HwParamsSetAccess","Returntype":"error","Args":"params PCMHwParams, access PCMAccess"},{"Uniquefunname":"func (pcm PCM) HwParamsSetBufferSize(params PCMHwParams, val PCMUFrames) error","Funname":"HwParamsSetBufferSize","Returntype":"error","Args":"params PCMHwParams, val PCMUFrames"},{"Uniquefunname":"func (pcm PCM) HwParamsSetBufferTimeNear(params PCMHwParams, val *uint) (int, error)","Funname":"HwParamsSetBufferTimeNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetChannels(params PCMHwParams, val uint) error","Funname":"HwParamsSetChannels","Returntype":"error","Args":"params PCMHwParams, val uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetFormat(params PCMHwParams, format PCMFormat) error","Funname":"HwParamsSetFormat","Returntype":"error","Args":"params PCMHwParams, format PCMFormat"},{"Uniquefunname":"func (pcm PCM) HwParamsSetPeriodSize(params PCMHwParams, val PCMUFrames, dir int) error","Funname":"HwParamsSetPeriodSize","Returntype":"error","Args":"params PCMHwParams, val PCMUFrames, dir int"},{"Uniquefunname":"func HwParamsSetPeriodSizeNear(params PCMHwParams, val PCMUFrames)(PCMUFrames, int, error)","Funname":"HwParamsSetPeriodSizeNear","Returntype":"(PCMUFrames, int, error)","Args":"params PCMHwParams, val PCMUFrames"},{"Uniquefunname":"func (pcm PCM) HwParamsSetPeriodTimeNear(params PCMHwParams, val *uint) (int, error)","Funname":"HwParamsSetPeriodTimeNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetRate(params PCMHwParams, val uint, dir int) error","Funname":"HwParamsSetRate","Returntype":"error","Args":"params PCMHwParams, val uint, dir int"},{"Uniquefunname":"func (pcm PCM) HwParamsSetRateNear(params PCMHwParams, val *uint) (int, error)","Funname":"HwParamsSetRateNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) Info(info PCMInfo) error","Funname":"Info","Returntype":"error","Args":"info PCMInfo"},{"Uniquefunname":"func (v DeviceNameHints) Iter() *DeviceNameHintsIter","Funname":"Iter","Returntype":"*DeviceNameHintsIter","Args":""},{"Uniquefunname":"func (m Mixer) Load() error","Funname":"Load","Returntype":"error","Args":""},{"Uniquefunname":"func (access PCMAccess) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (format PCMFormat) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (id MixerSelemChannelId) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (pcm PCM) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (stream PCMStream) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (subformat PCMSubformat) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (typ PCMType) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewCTLCardInfo() (CTLCardInfo, error)","Funname":"NewCTLCardInfo","Returntype":"(CTLCardInfo, error)","Args":""},{"Uniquefunname":"func NewMixerSelemId() (MixerSelemId, error)","Funname":"NewMixerSelemId","Returntype":"(MixerSelemId, error)","Args":""},{"Uniquefunname":"func NewPCMHwParams() (PCMHwParams, error)","Funname":"NewPCMHwParams","Returntype":"(PCMHwParams, error)","Args":""},{"Uniquefunname":"func NewPCMInfo() (PCMInfo, error)","Funname":"NewPCMInfo","Returntype":"(PCMInfo, error)","Args":""},{"Uniquefunname":"func (e MixerElem) Next() MixerElem","Funname":"Next","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (iter *DeviceNameHintsIter) Next() bool","Funname":"Next","Returntype":"bool","Args":""},{"Uniquefunname":"func OpenMixer(mode int) (Mixer, error)","Funname":"OpenMixer","Returntype":"(Mixer, error)","Args":"mode int"},{"Uniquefunname":"func OpenOutput(file, mode string) (Output, error)","Funname":"OpenOutput","Returntype":"(Output, error)","Args":"file, mode string"},{"Uniquefunname":"func OpenPCM(name string, stream PCMStream, mode int) (PCM, error)","Funname":"OpenPCM","Returntype":"(PCM, error)","Args":"name string, stream PCMStream, mode int"},{"Uniquefunname":"func (ctl CTL) PCMInfo(info PCMInfo) error","Funname":"PCMInfo","Returntype":"error","Args":"info PCMInfo"},{"Uniquefunname":"func (ctl CTL) PCMNextDevice(device *int) error","Funname":"PCMNextDevice","Returntype":"error","Args":"device *int"},{"Uniquefunname":"func (pcm PCM) Pause(enable bool) error","Funname":"Pause","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (pcm PCM) Prepare() error","Funname":"Prepare","Returntype":"error","Args":""},{"Uniquefunname":"func (e MixerElem) Prev() MixerElem","Funname":"Prev","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (o Output) Printf(format string, a ...interface","Funname":"Printf","Returntype":"error","Args":"format string, a ...interface{}"},{"Uniquefunname":"func (o Output) Println(a ...interface","Funname":"Println","Returntype":"error","Args":"a ...interface{}"},{"Uniquefunname":"func (pcm PCM) Recover(err int, silent bool) error","Funname":"Recover","Returntype":"error","Args":"err int, silent bool"},{"Uniquefunname":"func (pcm PCM) Reset() error","Funname":"Reset","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Resume() error","Funname":"Resume","Returntype":"error","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureDB(channel MixerSelemChannelId) (int, error)","Funname":"SelemGetCaptureDB","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureDBRange() (min, max int)","Funname":"SelemGetCaptureDBRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureGroup() int","Funname":"SelemGetCaptureGroup","Returntype":"int","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureSwitch(channel MixerSelemChannelId) (bool, error)","Funname":"SelemGetCaptureSwitch","Returntype":"(bool, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureVolume(channel MixerSelemChannelId) (int, error)","Funname":"SelemGetCaptureVolume","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureVolumeRange() (min, max int)","Funname":"SelemGetCaptureVolumeRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItem(channel MixerSelemChannelId) (uint, error)","Funname":"SelemGetEnumItem","Returntype":"(uint, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItemName(item uint, maxLen int) (string, error)","Funname":"SelemGetEnumItemName","Returntype":"(string, error)","Args":"item uint, maxLen int"},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItems() (int, error)","Funname":"SelemGetEnumItems","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackDB(channel MixerSelemChannelId) (int, error)","Funname":"SelemGetPlaybackDB","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackDBRange() (min, max int)","Funname":"SelemGetPlaybackDBRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackSwitch(channel MixerSelemChannelId) (bool, error)","Funname":"SelemGetPlaybackSwitch","Returntype":"(bool, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackVolume(channel MixerSelemChannelId) (int, error)","Funname":"SelemGetPlaybackVolume","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackVolumeRange() (min, max int)","Funname":"SelemGetPlaybackVolumeRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureChannel(channel MixerSelemChannelId) bool","Funname":"SelemHasCaptureChannel","Returntype":"bool","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitch() bool","Funname":"SelemHasCaptureSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitchExclusive() bool","Funname":"SelemHasCaptureSwitchExclusive","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitchJoined() bool","Funname":"SelemHasCaptureSwitchJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureVolume() bool","Funname":"SelemHasCaptureVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureVolumeJoined() bool","Funname":"SelemHasCaptureVolumeJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCommonSwitch() bool","Funname":"SelemHasCommonSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCommonVolume() bool","Funname":"SelemHasCommonVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackChannel(channel MixerSelemChannelId) bool","Funname":"SelemHasPlaybackChannel","Returntype":"bool","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackSwitch() bool","Funname":"SelemHasPlaybackSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackSwitchJoined() bool","Funname":"SelemHasPlaybackSwitchJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackVolume() bool","Funname":"SelemHasPlaybackVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackVolumeJoined() bool","Funname":"SelemHasPlaybackVolumeJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsActive() bool","Funname":"SelemIsActive","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsCaptureMono() bool","Funname":"SelemIsCaptureMono","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumCapture() bool","Funname":"SelemIsEnumCapture","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumPlayback() bool","Funname":"SelemIsEnumPlayback","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumerated() bool","Funname":"SelemIsEnumerated","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsPlaybackMono() bool","Funname":"SelemIsPlaybackMono","Returntype":"bool","Args":""},{"Uniquefunname":"func (m Mixer) SelemRegister(options *MixerSelemRegopt, class *MixerClass) error","Funname":"SelemRegister","Returntype":"error","Args":"options *MixerSelemRegopt, class *MixerClass"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureDB(channel MixerSelemChannelId, value, dir int) error","Funname":"SelemSetCaptureDB","Returntype":"error","Args":"channel MixerSelemChannelId, value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureDBAll(value, dir int) error","Funname":"SelemSetCaptureDBAll","Returntype":"error","Args":"value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureSwitch(channel MixerSelemChannelId, value bool) error","Funname":"SelemSetCaptureSwitch","Returntype":"error","Args":"channel MixerSelemChannelId, value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureSwitchAll(value bool) error","Funname":"SelemSetCaptureSwitchAll","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureVolume(channel MixerSelemChannelId, value int) error","Funname":"SelemSetCaptureVolume","Returntype":"error","Args":"channel MixerSelemChannelId, value int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureVolumeAll(value int) error","Funname":"SelemSetCaptureVolumeAll","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackDB(channel MixerSelemChannelId, value, dir int) error","Funname":"SelemSetPlaybackDB","Returntype":"error","Args":"channel MixerSelemChannelId, value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackDBAll(value, dir int) error","Funname":"SelemSetPlaybackDBAll","Returntype":"error","Args":"value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackSwitch(channel MixerSelemChannelId, value bool) error","Funname":"SelemSetPlaybackSwitch","Returntype":"error","Args":"channel MixerSelemChannelId, value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackSwitchAll(value bool) error","Funname":"SelemSetPlaybackSwitchAll","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackVolume(channel MixerSelemChannelId, value int) error","Funname":"SelemSetPlaybackVolume","Returntype":"error","Args":"channel MixerSelemChannelId, value int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackVolumeAll(value int) error","Funname":"SelemSetPlaybackVolumeAll","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetCapturePCM(pcm PCM)","Funname":"SetCapturePCM","Returntype":"","Args":"pcm PCM"},{"Uniquefunname":"func (info PCMInfo) SetDevice(val uint)","Funname":"SetDevice","Returntype":"","Args":"val uint"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetDevice(device string)","Funname":"SetDevice","Returntype":"","Args":"device string"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetPlaybackPCM(pcm PCM)","Funname":"SetPlaybackPCM","Returntype":"","Args":"pcm PCM"},{"Uniquefunname":"func (info PCMInfo) SetStream(val PCMStream)","Funname":"SetStream","Returntype":"","Args":"val PCMStream"},{"Uniquefunname":"func (info PCMInfo) SetSubdevice(val uint)","Funname":"SetSubdevice","Returntype":"","Args":"val uint"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetVer(ver int)","Funname":"SetVer","Returntype":"","Args":"ver int"},{"Uniquefunname":"func (format PCMFormat) Size(samples uint) int","Funname":"Size","Returntype":"int","Args":"samples uint"},{"Uniquefunname":"func (pcm PCM) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) State() PCMState","Funname":"State","Returntype":"PCMState","Args":""},{"Uniquefunname":"func (pcm PCM) Stream() PCMStream","Funname":"Stream","Returntype":"PCMStream","Args":""},{"Uniquefunname":"func (pcm PCM) Type() PCMType","Funname":"Type","Returntype":"PCMType","Args":""},{"Uniquefunname":"func (o Output) WriteString(str string) error","Funname":"WriteString","Returntype":"error","Args":"str string"},{"Uniquefunname":"func (pcm PCM) Writei(buffer unsafe.Pointer, size PCMUFrames) (PCMUFrames, error)","Funname":"Writei","Returntype":"(PCMUFrames, error)","Args":"buffer unsafe.Pointer, size PCMUFrames"},{"Uniquefunname":"func (ctl CTL) CardInfo(info CTLCardInfo) error","Funname":"asound.CTL.CardInfo","Returntype":"error","Args":"info CTLCardInfo"},{"Uniquefunname":"func (ctl CTL) Close() error","Funname":"asound.CTL.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (ctl CTL) PCMInfo(info PCMInfo) error","Funname":"asound.CTL.PCMInfo","Returntype":"error","Args":"info PCMInfo"},{"Uniquefunname":"func (ctl CTL) PCMNextDevice(device *int) error","Funname":"asound.CTL.PCMNextDevice","Returntype":"error","Args":"device *int"},{"Uniquefunname":"func (v CTL) native() *C.snd_ctl_t","Funname":"asound.CTL.native","Returntype":"*C.snd_ctl_t","Args":""},{"Uniquefunname":"func (info CTLCardInfo) Free()","Funname":"asound.CTLCardInfo.Free","Returntype":"","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetCard() int","Funname":"asound.CTLCardInfo.GetCard","Returntype":"int","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetComponents() string","Funname":"asound.CTLCardInfo.GetComponents","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetDriver() string","Funname":"asound.CTLCardInfo.GetDriver","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetID() string","Funname":"asound.CTLCardInfo.GetID","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetLongName() string","Funname":"asound.CTLCardInfo.GetLongName","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetMixerName() string","Funname":"asound.CTLCardInfo.GetMixerName","Returntype":"string","Args":""},{"Uniquefunname":"func (info CTLCardInfo) GetName() string","Funname":"asound.CTLCardInfo.GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (v CTLCardInfo) native() *C.snd_ctl_card_info_t","Funname":"asound.CTLCardInfo.native","Returntype":"*C.snd_ctl_card_info_t","Args":""},{"Uniquefunname":"func CTLOpen(name string, mode int) (CTL, error)","Funname":"asound.CTLOpen","Returntype":"(CTL, error)","Args":"name string, mode int"},{"Uniquefunname":"func CardLoad(card int) bool","Funname":"asound.CardLoad","Returntype":"bool","Args":"card int"},{"Uniquefunname":"func CardNext(rcard *int) error","Funname":"asound.CardNext","Returntype":"error","Args":"rcard *int"},{"Uniquefunname":"func (v DeviceNameHints) Free()","Funname":"asound.DeviceNameHints.Free","Returntype":"","Args":""},{"Uniquefunname":"func (v DeviceNameHints) Iter() *DeviceNameHintsIter","Funname":"asound.DeviceNameHints.Iter","Returntype":"*DeviceNameHintsIter","Args":""},{"Uniquefunname":"func (iter DeviceNameHintsIter) Get(id string) string","Funname":"asound.DeviceNameHintsIter.Get","Returntype":"string","Args":"id string"},{"Uniquefunname":"func (iter *DeviceNameHintsIter) Next() bool","Funname":"asound.DeviceNameHintsIter.Next","Returntype":"bool","Args":""},{"Uniquefunname":"func (err *Error) Error() string","Funname":"asound.Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func GetDeviceNameHints(card int, iface string) (DeviceNameHints, error)","Funname":"asound.GetDeviceNameHints","Returntype":"(DeviceNameHints, error)","Args":"card int, iface string"},{"Uniquefunname":"func (m Mixer) Attach(name string) error","Funname":"asound.Mixer.Attach","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (m Mixer) Close() error","Funname":"asound.Mixer.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (m Mixer) FindSelem(id MixerSelemId) MixerElem","Funname":"asound.Mixer.FindSelem","Returntype":"MixerElem","Args":"id MixerSelemId"},{"Uniquefunname":"func (m Mixer) FirstElem() MixerElem","Funname":"asound.Mixer.FirstElem","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (m Mixer) Free()","Funname":"asound.Mixer.Free","Returntype":"","Args":""},{"Uniquefunname":"func (m Mixer) Load() error","Funname":"asound.Mixer.Load","Returntype":"error","Args":""},{"Uniquefunname":"func (m Mixer) SelemRegister(options *MixerSelemRegopt, class *MixerClass) error","Funname":"asound.Mixer.SelemRegister","Returntype":"error","Args":"options *MixerSelemRegopt, class *MixerClass"},{"Uniquefunname":"func (m Mixer) native() *C.snd_mixer_t","Funname":"asound.Mixer.native","Returntype":"*C.snd_mixer_t","Args":""},{"Uniquefunname":"func (e MixerElem) GetSelemId(id MixerSelemId)","Funname":"asound.MixerElem.GetSelemId","Returntype":"","Args":"id MixerSelemId"},{"Uniquefunname":"func (e MixerElem) Next() MixerElem","Funname":"asound.MixerElem.Next","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (e MixerElem) Prev() MixerElem","Funname":"asound.MixerElem.Prev","Returntype":"MixerElem","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureDB(channel MixerSelemChannelId) (int, error)","Funname":"asound.MixerElem.SelemGetCaptureDB","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureDBRange() (min, max int)","Funname":"asound.MixerElem.SelemGetCaptureDBRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureGroup() int","Funname":"asound.MixerElem.SelemGetCaptureGroup","Returntype":"int","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureSwitch(channel MixerSelemChannelId) (bool, error)","Funname":"asound.MixerElem.SelemGetCaptureSwitch","Returntype":"(bool, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureVolume(channel MixerSelemChannelId) (int, error)","Funname":"asound.MixerElem.SelemGetCaptureVolume","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetCaptureVolumeRange() (min, max int)","Funname":"asound.MixerElem.SelemGetCaptureVolumeRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItem(channel MixerSelemChannelId) (uint, error)","Funname":"asound.MixerElem.SelemGetEnumItem","Returntype":"(uint, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItemName(item uint, maxLen int) (string, error)","Funname":"asound.MixerElem.SelemGetEnumItemName","Returntype":"(string, error)","Args":"item uint, maxLen int"},{"Uniquefunname":"func (e MixerElem) SelemGetEnumItems() (int, error)","Funname":"asound.MixerElem.SelemGetEnumItems","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackDB(channel MixerSelemChannelId) (int, error)","Funname":"asound.MixerElem.SelemGetPlaybackDB","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackDBRange() (min, max int)","Funname":"asound.MixerElem.SelemGetPlaybackDBRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackSwitch(channel MixerSelemChannelId) (bool, error)","Funname":"asound.MixerElem.SelemGetPlaybackSwitch","Returntype":"(bool, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackVolume(channel MixerSelemChannelId) (int, error)","Funname":"asound.MixerElem.SelemGetPlaybackVolume","Returntype":"(int, error)","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemGetPlaybackVolumeRange() (min, max int)","Funname":"asound.MixerElem.SelemGetPlaybackVolumeRange","Returntype":"(min, max int)","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureChannel(channel MixerSelemChannelId) bool","Funname":"asound.MixerElem.SelemHasCaptureChannel","Returntype":"bool","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitch() bool","Funname":"asound.MixerElem.SelemHasCaptureSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitchExclusive() bool","Funname":"asound.MixerElem.SelemHasCaptureSwitchExclusive","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureSwitchJoined() bool","Funname":"asound.MixerElem.SelemHasCaptureSwitchJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureVolume() bool","Funname":"asound.MixerElem.SelemHasCaptureVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCaptureVolumeJoined() bool","Funname":"asound.MixerElem.SelemHasCaptureVolumeJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCommonSwitch() bool","Funname":"asound.MixerElem.SelemHasCommonSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasCommonVolume() bool","Funname":"asound.MixerElem.SelemHasCommonVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackChannel(channel MixerSelemChannelId) bool","Funname":"asound.MixerElem.SelemHasPlaybackChannel","Returntype":"bool","Args":"channel MixerSelemChannelId"},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackSwitch() bool","Funname":"asound.MixerElem.SelemHasPlaybackSwitch","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackSwitchJoined() bool","Funname":"asound.MixerElem.SelemHasPlaybackSwitchJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackVolume() bool","Funname":"asound.MixerElem.SelemHasPlaybackVolume","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemHasPlaybackVolumeJoined() bool","Funname":"asound.MixerElem.SelemHasPlaybackVolumeJoined","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsActive() bool","Funname":"asound.MixerElem.SelemIsActive","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsCaptureMono() bool","Funname":"asound.MixerElem.SelemIsCaptureMono","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumCapture() bool","Funname":"asound.MixerElem.SelemIsEnumCapture","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumPlayback() bool","Funname":"asound.MixerElem.SelemIsEnumPlayback","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsEnumerated() bool","Funname":"asound.MixerElem.SelemIsEnumerated","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemIsPlaybackMono() bool","Funname":"asound.MixerElem.SelemIsPlaybackMono","Returntype":"bool","Args":""},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureDB(channel MixerSelemChannelId, value, dir int) error","Funname":"asound.MixerElem.SelemSetCaptureDB","Returntype":"error","Args":"channel MixerSelemChannelId, value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureDBAll(value, dir int) error","Funname":"asound.MixerElem.SelemSetCaptureDBAll","Returntype":"error","Args":"value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureSwitch(channel MixerSelemChannelId, value bool) error","Funname":"asound.MixerElem.SelemSetCaptureSwitch","Returntype":"error","Args":"channel MixerSelemChannelId, value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureSwitchAll(value bool) error","Funname":"asound.MixerElem.SelemSetCaptureSwitchAll","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureVolume(channel MixerSelemChannelId, value int) error","Funname":"asound.MixerElem.SelemSetCaptureVolume","Returntype":"error","Args":"channel MixerSelemChannelId, value int"},{"Uniquefunname":"func (e MixerElem) SelemSetCaptureVolumeAll(value int) error","Funname":"asound.MixerElem.SelemSetCaptureVolumeAll","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackDB(channel MixerSelemChannelId, value, dir int) error","Funname":"asound.MixerElem.SelemSetPlaybackDB","Returntype":"error","Args":"channel MixerSelemChannelId, value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackDBAll(value, dir int) error","Funname":"asound.MixerElem.SelemSetPlaybackDBAll","Returntype":"error","Args":"value, dir int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackSwitch(channel MixerSelemChannelId, value bool) error","Funname":"asound.MixerElem.SelemSetPlaybackSwitch","Returntype":"error","Args":"channel MixerSelemChannelId, value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackSwitchAll(value bool) error","Funname":"asound.MixerElem.SelemSetPlaybackSwitchAll","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackVolume(channel MixerSelemChannelId, value int) error","Funname":"asound.MixerElem.SelemSetPlaybackVolume","Returntype":"error","Args":"channel MixerSelemChannelId, value int"},{"Uniquefunname":"func (e MixerElem) SelemSetPlaybackVolumeAll(value int) error","Funname":"asound.MixerElem.SelemSetPlaybackVolumeAll","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (e MixerElem) native() *C.snd_mixer_elem_t","Funname":"asound.MixerElem.native","Returntype":"*C.snd_mixer_elem_t","Args":""},{"Uniquefunname":"func (id MixerSelemChannelId) Name() string","Funname":"asound.MixerSelemChannelId.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (id MixerSelemId) Free()","Funname":"asound.MixerSelemId.Free","Returntype":"","Args":""},{"Uniquefunname":"func (id MixerSelemId) GetIndex() uint","Funname":"asound.MixerSelemId.GetIndex","Returntype":"uint","Args":""},{"Uniquefunname":"func (id MixerSelemId) GetName() string","Funname":"asound.MixerSelemId.GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (id MixerSelemId) native() *C.snd_mixer_selem_id_t","Funname":"asound.MixerSelemId.native","Returntype":"*C.snd_mixer_selem_id_t","Args":""},{"Uniquefunname":"func (opt *MixerSelemRegopt) Free()","Funname":"asound.MixerSelemRegopt.Free","Returntype":"","Args":""},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetCapturePCM(pcm PCM)","Funname":"asound.MixerSelemRegopt.SetCapturePCM","Returntype":"","Args":"pcm PCM"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetDevice(device string)","Funname":"asound.MixerSelemRegopt.SetDevice","Returntype":"","Args":"device string"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetPlaybackPCM(pcm PCM)","Funname":"asound.MixerSelemRegopt.SetPlaybackPCM","Returntype":"","Args":"pcm PCM"},{"Uniquefunname":"func (opt *MixerSelemRegopt) SetVer(ver int)","Funname":"asound.MixerSelemRegopt.SetVer","Returntype":"","Args":"ver int"},{"Uniquefunname":"func NewCTLCardInfo() (CTLCardInfo, error)","Funname":"asound.NewCTLCardInfo","Returntype":"(CTLCardInfo, error)","Args":""},{"Uniquefunname":"func NewMixerSelemId() (MixerSelemId, error)","Funname":"asound.NewMixerSelemId","Returntype":"(MixerSelemId, error)","Args":""},{"Uniquefunname":"func NewPCMHwParams() (PCMHwParams, error)","Funname":"asound.NewPCMHwParams","Returntype":"(PCMHwParams, error)","Args":""},{"Uniquefunname":"func NewPCMInfo() (PCMInfo, error)","Funname":"asound.NewPCMInfo","Returntype":"(PCMInfo, error)","Args":""},{"Uniquefunname":"func OpenMixer(mode int) (Mixer, error)","Funname":"asound.OpenMixer","Returntype":"(Mixer, error)","Args":"mode int"},{"Uniquefunname":"func OpenOutput(file, mode string) (Output, error)","Funname":"asound.OpenOutput","Returntype":"(Output, error)","Args":"file, mode string"},{"Uniquefunname":"func OpenPCM(name string, stream PCMStream, mode int) (PCM, error)","Funname":"asound.OpenPCM","Returntype":"(PCM, error)","Args":"name string, stream PCMStream, mode int"},{"Uniquefunname":"func (o Output) Close() error","Funname":"asound.Output.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (o Output) Flush() error","Funname":"asound.Output.Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (o Output) Printf(format string, a ...interface","Funname":"asound.Output.Printf","Returntype":"error","Args":"format string, a ...interface{}"},{"Uniquefunname":"func (o Output) Println(a ...interface","Funname":"asound.Output.Println","Returntype":"error","Args":"a ...interface{}"},{"Uniquefunname":"func (o Output) WriteString(str string) error","Funname":"asound.Output.WriteString","Returntype":"error","Args":"str string"},{"Uniquefunname":"func (v Output) native() *C.snd_output_t","Funname":"asound.Output.native","Returntype":"*C.snd_output_t","Args":""},{"Uniquefunname":"func (pcm PCM) Close() error","Funname":"asound.PCM.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Drain() error","Funname":"asound.PCM.Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Drop() error","Funname":"asound.PCM.Drop","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Dump(out Output) error","Funname":"asound.PCM.Dump","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpHwSetup(out Output) error","Funname":"asound.PCM.DumpHwSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpSetup(out Output) error","Funname":"asound.PCM.DumpSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) DumpSwSetup(out Output) error","Funname":"asound.PCM.DumpSwSetup","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (pcm PCM) HwFree() error","Funname":"asound.PCM.HwFree","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) HwParams(params PCMHwParams) error","Funname":"asound.PCM.HwParams","Returntype":"error","Args":"params PCMHwParams"},{"Uniquefunname":"func (pcm PCM) HwParamsAny(params PCMHwParams)","Funname":"asound.PCM.HwParamsAny","Returntype":"","Args":"params PCMHwParams"},{"Uniquefunname":"func (pcm PCM) HwParamsSetAccess(params PCMHwParams, access PCMAccess) error","Funname":"asound.PCM.HwParamsSetAccess","Returntype":"error","Args":"params PCMHwParams, access PCMAccess"},{"Uniquefunname":"func (pcm PCM) HwParamsSetBufferSize(params PCMHwParams, val PCMUFrames) error","Funname":"asound.PCM.HwParamsSetBufferSize","Returntype":"error","Args":"params PCMHwParams, val PCMUFrames"},{"Uniquefunname":"func (pcm PCM) HwParamsSetBufferTimeNear(params PCMHwParams, val *uint) (int, error)","Funname":"asound.PCM.HwParamsSetBufferTimeNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetChannels(params PCMHwParams, val uint) error","Funname":"asound.PCM.HwParamsSetChannels","Returntype":"error","Args":"params PCMHwParams, val uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetFormat(params PCMHwParams, format PCMFormat) error","Funname":"asound.PCM.HwParamsSetFormat","Returntype":"error","Args":"params PCMHwParams, format PCMFormat"},{"Uniquefunname":"func (pcm PCM) HwParamsSetPeriodSize(params PCMHwParams, val PCMUFrames, dir int) error","Funname":"asound.PCM.HwParamsSetPeriodSize","Returntype":"error","Args":"params PCMHwParams, val PCMUFrames, dir int"},{"Uniquefunname":"func asound.PCM.HwParamsSetPeriodSizeNear(params PCMHwParams, val PCMUFrames)(PCMUFrames, int, error)","Funname":"asound.PCM.HwParamsSetPeriodSizeNear","Returntype":"(PCMUFrames, int, error)","Args":"params PCMHwParams, val PCMUFrames"},{"Uniquefunname":"func (pcm PCM) HwParamsSetPeriodTimeNear(params PCMHwParams, val *uint) (int, error)","Funname":"asound.PCM.HwParamsSetPeriodTimeNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) HwParamsSetRate(params PCMHwParams, val uint, dir int) error","Funname":"asound.PCM.HwParamsSetRate","Returntype":"error","Args":"params PCMHwParams, val uint, dir int"},{"Uniquefunname":"func (pcm PCM) HwParamsSetRateNear(params PCMHwParams, val *uint) (int, error)","Funname":"asound.PCM.HwParamsSetRateNear","Returntype":"(int, error)","Args":"params PCMHwParams, val *uint"},{"Uniquefunname":"func (pcm PCM) Info(info PCMInfo) error","Funname":"asound.PCM.Info","Returntype":"error","Args":"info PCMInfo"},{"Uniquefunname":"func (pcm PCM) Name() string","Funname":"asound.PCM.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (pcm PCM) Pause(enable bool) error","Funname":"asound.PCM.Pause","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (pcm PCM) Prepare() error","Funname":"asound.PCM.Prepare","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Recover(err int, silent bool) error","Funname":"asound.PCM.Recover","Returntype":"error","Args":"err int, silent bool"},{"Uniquefunname":"func (pcm PCM) Reset() error","Funname":"asound.PCM.Reset","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Resume() error","Funname":"asound.PCM.Resume","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) Start() error","Funname":"asound.PCM.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (pcm PCM) State() PCMState","Funname":"asound.PCM.State","Returntype":"PCMState","Args":""},{"Uniquefunname":"func (pcm PCM) Stream() PCMStream","Funname":"asound.PCM.Stream","Returntype":"PCMStream","Args":""},{"Uniquefunname":"func (pcm PCM) Type() PCMType","Funname":"asound.PCM.Type","Returntype":"PCMType","Args":""},{"Uniquefunname":"func (pcm PCM) Writei(buffer unsafe.Pointer, size PCMUFrames) (PCMUFrames, error)","Funname":"asound.PCM.Writei","Returntype":"(PCMUFrames, error)","Args":"buffer unsafe.Pointer, size PCMUFrames"},{"Uniquefunname":"func (v PCM) native() *C.snd_pcm_t","Funname":"asound.PCM.native","Returntype":"*C.snd_pcm_t","Args":""},{"Uniquefunname":"func (access PCMAccess) Name() string","Funname":"asound.PCMAccess.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (format PCMFormat) Name() string","Funname":"asound.PCMFormat.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (format PCMFormat) Size(samples uint) int","Funname":"asound.PCMFormat.Size","Returntype":"int","Args":"samples uint"},{"Uniquefunname":"func (params PCMHwParams) Dump(out Output) error","Funname":"asound.PCMHwParams.Dump","Returntype":"error","Args":"out Output"},{"Uniquefunname":"func (params PCMHwParams) Free()","Funname":"asound.PCMHwParams.Free","Returntype":"","Args":""},{"Uniquefunname":"func (params PCMHwParams) GetBufferTimeMax() (val uint, dir int, err error)","Funname":"asound.PCMHwParams.GetBufferTimeMax","Returntype":"(val uint, dir int, err error)","Args":""},{"Uniquefunname":"func (params PCMHwParams) GetPeriodSize() (PCMUFrames, int, error)","Funname":"asound.PCMHwParams.GetPeriodSize","Returntype":"(PCMUFrames, int, error)","Args":""},{"Uniquefunname":"func (params PCMHwParams) GetPeriodTime() (uint, int, error)","Funname":"asound.PCMHwParams.GetPeriodTime","Returntype":"(uint, int, error)","Args":""},{"Uniquefunname":"func (v PCMHwParams) native() *C.snd_pcm_hw_params_t","Funname":"asound.PCMHwParams.native","Returntype":"*C.snd_pcm_hw_params_t","Args":""},{"Uniquefunname":"func (info PCMInfo) Free()","Funname":"asound.PCMInfo.Free","Returntype":"","Args":""},{"Uniquefunname":"func (info PCMInfo) GetCard() int","Funname":"asound.PCMInfo.GetCard","Returntype":"int","Args":""},{"Uniquefunname":"func (info PCMInfo) GetClass() PCMClass","Funname":"asound.PCMInfo.GetClass","Returntype":"PCMClass","Args":""},{"Uniquefunname":"func (info PCMInfo) GetID() string","Funname":"asound.PCMInfo.GetID","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetName() string","Funname":"asound.PCMInfo.GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetStream() PCMStream","Funname":"asound.PCMInfo.GetStream","Returntype":"PCMStream","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubclass() PCMSubclass","Funname":"asound.PCMInfo.GetSubclass","Returntype":"PCMSubclass","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevice() uint","Funname":"asound.PCMInfo.GetSubdevice","Returntype":"uint","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdeviceName() string","Funname":"asound.PCMInfo.GetSubdeviceName","Returntype":"string","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevicesAvail() uint","Funname":"asound.PCMInfo.GetSubdevicesAvail","Returntype":"uint","Args":""},{"Uniquefunname":"func (info PCMInfo) GetSubdevicesCount() uint","Funname":"asound.PCMInfo.GetSubdevicesCount","Returntype":"uint","Args":""},{"Uniquefunname":"func (info PCMInfo) SetDevice(val uint)","Funname":"asound.PCMInfo.SetDevice","Returntype":"","Args":"val uint"},{"Uniquefunname":"func (info PCMInfo) SetStream(val PCMStream)","Funname":"asound.PCMInfo.SetStream","Returntype":"","Args":"val PCMStream"},{"Uniquefunname":"func (info PCMInfo) SetSubdevice(val uint)","Funname":"asound.PCMInfo.SetSubdevice","Returntype":"","Args":"val uint"},{"Uniquefunname":"func (v PCMInfo) native() *C.snd_pcm_info_t","Funname":"asound.PCMInfo.native","Returntype":"*C.snd_pcm_info_t","Args":""},{"Uniquefunname":"func (stream PCMStream) Name() string","Funname":"asound.PCMStream.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (subformat PCMSubformat) Desc() string","Funname":"asound.PCMSubformat.Desc","Returntype":"string","Args":""},{"Uniquefunname":"func (subformat PCMSubformat) Name() string","Funname":"asound.PCMSubformat.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (typ PCMType) Name() string","Funname":"asound.PCMType.Name","Returntype":"string","Args":""},{"Uniquefunname":"func newError(fn string, code C.int) error","Funname":"asound.newError","Returntype":"error","Args":"fn string, code C.int"},{"Uniquefunname":"func wrapCTL(p *C.snd_ctl_t) CTL","Funname":"asound.wrapCTL","Returntype":"CTL","Args":"p *C.snd_ctl_t"},{"Uniquefunname":"func wrapCTLCardInfo(ptr *C.snd_ctl_card_info_t) CTLCardInfo","Funname":"asound.wrapCTLCardInfo","Returntype":"CTLCardInfo","Args":"ptr *C.snd_ctl_card_info_t"},{"Uniquefunname":"func wrapMixer(ptr *C.snd_mixer_t) Mixer","Funname":"asound.wrapMixer","Returntype":"Mixer","Args":"ptr *C.snd_mixer_t"},{"Uniquefunname":"func wrapMixerElem(ptr *C.snd_mixer_elem_t) MixerElem","Funname":"asound.wrapMixerElem","Returntype":"MixerElem","Args":"ptr *C.snd_mixer_elem_t"},{"Uniquefunname":"func wrapMixerSelemId(ptr *C.snd_mixer_selem_id_t) MixerSelemId","Funname":"asound.wrapMixerSelemId","Returntype":"MixerSelemId","Args":"ptr *C.snd_mixer_selem_id_t"},{"Uniquefunname":"func wrapPCM(ptr *C.snd_pcm_t) PCM","Funname":"asound.wrapPCM","Returntype":"PCM","Args":"ptr *C.snd_pcm_t"},{"Uniquefunname":"func wrapPCMHwParams(ptr *C.snd_pcm_hw_params_t) PCMHwParams","Funname":"asound.wrapPCMHwParams","Returntype":"PCMHwParams","Args":"ptr *C.snd_pcm_hw_params_t"},{"Uniquefunname":"func wrapPCMInfo(ptr *C.snd_pcm_info_t) PCMInfo","Funname":"asound.wrapPCMInfo","Returntype":"PCMInfo","Args":"ptr *C.snd_pcm_info_t"},{"Uniquefunname":"func (e MixerElem) native() *C.snd_mixer_elem_t","Funname":"native","Returntype":"*C.snd_mixer_elem_t","Args":""},{"Uniquefunname":"func (id MixerSelemId) native() *C.snd_mixer_selem_id_t","Funname":"native","Returntype":"*C.snd_mixer_selem_id_t","Args":""},{"Uniquefunname":"func (m Mixer) native() *C.snd_mixer_t","Funname":"native","Returntype":"*C.snd_mixer_t","Args":""},{"Uniquefunname":"func (v CTL) native() *C.snd_ctl_t","Funname":"native","Returntype":"*C.snd_ctl_t","Args":""},{"Uniquefunname":"func (v CTLCardInfo) native() *C.snd_ctl_card_info_t","Funname":"native","Returntype":"*C.snd_ctl_card_info_t","Args":""},{"Uniquefunname":"func (v Output) native() *C.snd_output_t","Funname":"native","Returntype":"*C.snd_output_t","Args":""},{"Uniquefunname":"func (v PCM) native() *C.snd_pcm_t","Funname":"native","Returntype":"*C.snd_pcm_t","Args":""},{"Uniquefunname":"func (v PCMHwParams) native() *C.snd_pcm_hw_params_t","Funname":"native","Returntype":"*C.snd_pcm_hw_params_t","Args":""},{"Uniquefunname":"func (v PCMInfo) native() *C.snd_pcm_info_t","Funname":"native","Returntype":"*C.snd_pcm_info_t","Args":""},{"Uniquefunname":"func newError(fn string, code C.int) error","Funname":"newError","Returntype":"error","Args":"fn string, code C.int"},{"Uniquefunname":"func wrapCTL(p *C.snd_ctl_t) CTL","Funname":"wrapCTL","Returntype":"CTL","Args":"p *C.snd_ctl_t"},{"Uniquefunname":"func wrapCTLCardInfo(ptr *C.snd_ctl_card_info_t) CTLCardInfo","Funname":"wrapCTLCardInfo","Returntype":"CTLCardInfo","Args":"ptr *C.snd_ctl_card_info_t"},{"Uniquefunname":"func wrapMixer(ptr *C.snd_mixer_t) Mixer","Funname":"wrapMixer","Returntype":"Mixer","Args":"ptr *C.snd_mixer_t"},{"Uniquefunname":"func wrapMixerElem(ptr *C.snd_mixer_elem_t) MixerElem","Funname":"wrapMixerElem","Returntype":"MixerElem","Args":"ptr *C.snd_mixer_elem_t"},{"Uniquefunname":"func wrapMixerSelemId(ptr *C.snd_mixer_selem_id_t) MixerSelemId","Funname":"wrapMixerSelemId","Returntype":"MixerSelemId","Args":"ptr *C.snd_mixer_selem_id_t"},{"Uniquefunname":"func wrapPCM(ptr *C.snd_pcm_t) PCM","Funname":"wrapPCM","Returntype":"PCM","Args":"ptr *C.snd_pcm_t"},{"Uniquefunname":"func wrapPCMHwParams(ptr *C.snd_pcm_hw_params_t) PCMHwParams","Funname":"wrapPCMHwParams","Returntype":"PCMHwParams","Args":"ptr *C.snd_pcm_hw_params_t"},{"Uniquefunname":"func wrapPCMInfo(ptr *C.snd_pcm_info_t) PCMInfo","Funname":"wrapPCMInfo","Returntype":"PCMInfo","Args":"ptr *C.snd_pcm_info_t"}],"Records":[{"Name":"struct:asound.CTL","Fields":["asound.CTL.Ptr unsafe.Pointer"]},{"Name":"struct:asound.CTLCardInfo","Fields":["asound.CTLCardInfo.Ptr unsafe.Pointer"]},{"Name":"struct:asound.DeviceNameHints","Fields":["asound.DeviceNameHints.Ptr *unsafe.Pointer"]},{"Name":"struct:asound.DeviceNameHintsIter","Fields":["asound.DeviceNameHintsIter.hints *unsafe.Pointer","asound.DeviceNameHintsIter.n *unsafe.Pointer"]},{"Name":"var:asound","Fields":["asound.ErrUnderrun"]},{"Name":"struct:asound.Error","Fields":["asound.Error.code C.int","asound.Error.fn string"]},{"Name":"struct:asound.Mixer","Fields":["asound.Mixer.Ptr unsafe.Pointer"]},{"Name":"struct:asound.MixerClass","Fields":["asound.MixerClass.Ptr unsafe.Pointer"]},{"Name":"struct:asound.MixerElem","Fields":["asound.MixerElem.Ptr unsafe.Pointer"]},{"Name":"const:asound","Fields":["asound.MixerSAbstractBasic","asound.MixerSAbstractNone","asound.MixerSChanFrontCenter","asound.MixerSChanFrontLeft","asound.MixerSChanFrontRight","asound.MixerSChanLast","asound.MixerSChanMono","asound.MixerSChanRearCenter","asound.MixerSChanRearLeft","asound.MixerSChanRearRight","asound.MixerSChanSideLeft","asound.MixerSChanSideRight","asound.MixerSChanUnknown","asound.MixerSChanWoofer","asound.PCMAccessMMapComplex","asound.PCMAccessMMapInterleaved","asound.PCMAccessMMapNonInterleaved","asound.PCMAccessRWInterleaved","asound.PCMAccessRWNonInterleaved","asound.PCMFormatFloat64BE","asound.PCMFormatFloat64LE","asound.PCMFormatFloatBE","asound.PCMFormatFloatLE","asound.PCMFormatS16BE","asound.PCMFormatS16LE","asound.PCMFormatS24BE","asound.PCMFormatS24LE","asound.PCMFormatS32BE","asound.PCMFormatS32LE","asound.PCMFormatS8","asound.PCMFormatU16BE","asound.PCMFormatU16LE","asound.PCMFormatU24BE","asound.PCMFormatU24LE","asound.PCMFormatU32BE","asound.PCMFormatU32LE","asound.PCMFormatU8","asound.PCMStreamCapture","asound.PCMStreamPlayback","asound.sizeOfPointer"]},{"Name":"struct:asound.MixerSelem","Fields":["asound.MixerSelem.Ptr unsafe.Pointer"]},{"Name":"struct:asound.MixerSelemId","Fields":["asound.MixerSelemId.Ptr unsafe.Pointer"]},{"Name":"struct:asound.MixerSelemRegopt","Fields":["asound.MixerSelemRegopt.c C.struct_snd_mixer_selem_regopt","asound.MixerSelemRegopt.device *C.char"]},{"Name":"struct:asound.Output","Fields":["asound.Output.Ptr unsafe.Pointer"]},{"Name":"struct:asound.PCM","Fields":["asound.PCM.Ptr unsafe.Pointer"]},{"Name":"struct:asound.PCMHwParams","Fields":["asound.PCMHwParams.Ptr unsafe.Pointer"]},{"Name":"struct:asound.PCMInfo","Fields":["asound.PCMInfo.Ptr unsafe.Pointer"]}]}
{"Filepath":"backlight/common/common.go","Functions":[{"Uniquefunname":"func (c *Controller) GetBrightness() (int, error)","Funname":"GetBrightness","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (c *Controller) GetPropBytes(name string) ([]byte, error)","Funname":"GetPropBytes","Returntype":"([]byte, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetPropInt(name string) (int, error)","Funname":"GetPropInt","Returntype":"(int, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetPropString(name string) (string, error)","Funname":"GetPropString","Returntype":"(string, error)","Args":"name string"},{"Uniquefunname":"func ListControllerPaths(dir string) ([]string, error)","Funname":"ListControllerPaths","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func NewController(path string) (*Controller, error)","Funname":"NewController","Returntype":"(*Controller, error)","Args":"path string"},{"Uniquefunname":"func (c *Controller) GetBrightness() (int, error)","Funname":"common.Controller.GetBrightness","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (c *Controller) GetPropBytes(name string) ([]byte, error)","Funname":"common.Controller.GetPropBytes","Returntype":"([]byte, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetPropInt(name string) (int, error)","Funname":"common.Controller.GetPropInt","Returntype":"(int, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetPropString(name string) (string, error)","Funname":"common.Controller.GetPropString","Returntype":"(string, error)","Args":"name string"},{"Uniquefunname":"func ListControllerPaths(dir string) ([]string, error)","Funname":"common.ListControllerPaths","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func NewController(path string) (*Controller, error)","Funname":"common.NewController","Returntype":"(*Controller, error)","Args":"path string"}],"Records":[{"Name":"struct:common.Controller","Fields":["common.Controller.MaxBrightness int","common.Controller.Name string","common.Controller.Path string"]},{"Name":"var:common","Fields":["common.errMaxBrightnessIsZero"]}]}
{"Filepath":"backlight/display/display.go","Functions":[{"Uniquefunname":"func (c *Controller) GetActualBrightness() (int, error)","Funname":"GetActualBrightness","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (cs Controllers) GetByEDID(edid []byte) *Controller","Funname":"GetByEDID","Returntype":"*Controller","Args":"edid []byte"},{"Uniquefunname":"func (cs Controllers) GetByName(name string) *Controller","Funname":"GetByName","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func List() (Controllers, error)","Funname":"List","Returntype":"(Controllers, error)","Args":""},{"Uniquefunname":"func NewController(path string) (*Controller, error)","Funname":"NewController","Returntype":"(*Controller, error)","Args":"path string"},{"Uniquefunname":"func byteSliceEqual(a, b []byte) bool","Funname":"byteSliceEqual","Returntype":"bool","Args":"a, b []byte"},{"Uniquefunname":"func (c *Controller) GetActualBrightness() (int, error)","Funname":"display.Controller.GetActualBrightness","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (cs Controllers) GetByEDID(edid []byte) *Controller","Funname":"display.Controllers.GetByEDID","Returntype":"*Controller","Args":"edid []byte"},{"Uniquefunname":"func (cs Controllers) GetByName(name string) *Controller","Funname":"display.Controllers.GetByName","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func List() (Controllers, error)","Funname":"display.List","Returntype":"(Controllers, error)","Args":""},{"Uniquefunname":"func NewController(path string) (*Controller, error)","Funname":"display.NewController","Returntype":"(*Controller, error)","Args":"path string"},{"Uniquefunname":"func byteSliceEqual(a, b []byte) bool","Funname":"display.byteSliceEqual","Returntype":"bool","Args":"a, b []byte"},{"Uniquefunname":"func list(dir string) (Controllers, error)","Funname":"display.list","Returntype":"(Controllers, error)","Args":"dir string"},{"Uniquefunname":"func list(dir string) (Controllers, error)","Funname":"list","Returntype":"(Controllers, error)","Args":"dir string"}],"Records":[{"Name":"struct:display.Controller","Fields":["display.Controller.DeviceEDID []byte","display.Controller.Type ControllerType"]},{"Name":"const:display","Fields":["display.controllersDir"]}]}
{"Filepath":"backlight/display/display_test.go","Functions":[{"Uniquefunname":"func TestList(t *testing.T)","Funname":"TestList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_list(t *testing.T)","Funname":"Test_list","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestList(t *testing.T)","Funname":"display.TestList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_list(t *testing.T)","Funname":"display.Test_list","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func getControllerByName(cs []*Controller, name string) *Controller","Funname":"display.getControllerByName","Returntype":"*Controller","Args":"cs []*Controller, name string"},{"Uniquefunname":"func getControllerByName(cs []*Controller, name string) *Controller","Funname":"getControllerByName","Returntype":"*Controller","Args":"cs []*Controller, name string"}],"Records":[{"Name":"var:display","Fields":["display.edid0","display.edid1"]}]}
{"Filepath":"backlight/display/type.go","Functions":[{"Uniquefunname":"func ControllerTypeFromString(str string) ControllerType","Funname":"ControllerTypeFromString","Returntype":"ControllerType","Args":"str string"},{"Uniquefunname":"func (t ControllerType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t ControllerType) String() string","Funname":"display.ControllerType.String","Returntype":"string","Args":""},{"Uniquefunname":"func ControllerTypeFromString(str string) ControllerType","Funname":"display.ControllerTypeFromString","Returntype":"ControllerType","Args":"str string"}],"Records":[{"Name":"const:display","Fields":["display.ControllerTypeFirmware","display.ControllerTypePlatform","display.ControllerTypeRaw","display.ControllerTypeUnknown"]}]}
{"Filepath":"backlight/keyboard/keyboard.go","Functions":[{"Uniquefunname":"func List() ([]*Controller, error)","Funname":"List","Returntype":"([]*Controller, error)","Args":""},{"Uniquefunname":"func List() ([]*Controller, error)","Funname":"keyboard.List","Returntype":"([]*Controller, error)","Args":""},{"Uniquefunname":"func list(dir string) ([]*Controller, error)","Funname":"keyboard.list","Returntype":"([]*Controller, error)","Args":"dir string"},{"Uniquefunname":"func list(dir string) ([]*Controller, error)","Funname":"list","Returntype":"([]*Controller, error)","Args":"dir string"}],"Records":[{"Name":"const:keyboard","Fields":["keyboard.controllersDir"]}]}
{"Filepath":"backlight/keyboard/keyboard_test.go","Functions":[{"Uniquefunname":"func TestList(t *testing.T)","Funname":"TestList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_list(t *testing.T)","Funname":"Test_list","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestList(t *testing.T)","Funname":"keyboard.TestList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_list(t *testing.T)","Funname":"keyboard.Test_list","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/calendar.go","Functions":[{"Uniquefunname":"func SolarToLunar(year, month, day int) (LunarDayInfo, bool)","Funname":"SolarToLunar","Returntype":"(LunarDayInfo, bool)","Args":"year, month, day int"},{"Uniquefunname":"func SolarToLunar(year, month, day int) (LunarDayInfo, bool)","Funname":"calendar.SolarToLunar","Returntype":"(LunarDayInfo, bool)","Args":"year, month, day int"}],"Records":[{"Name":"struct:calendar.LunarDayInfo","Fields":["calendar.LunarDayInfo.GanZhiDay string","calendar.LunarDayInfo.GanZhiMonth string","calendar.LunarDayInfo.GanZhiYear string","calendar.LunarDayInfo.LunarDayName string","calendar.LunarDayInfo.LunarFestival string","calendar.LunarDayInfo.LunarLeapMonth int32","calendar.LunarDayInfo.LunarMonthName string","calendar.LunarDayInfo.SolarFestival string","calendar.LunarDayInfo.Term string","calendar.LunarDayInfo.Worktime int32","calendar.LunarDayInfo.Zodiac string"]}]}
{"Filepath":"calendar/calendar_test.go","Functions":[{"Uniquefunname":"func Test_SolarToLunar(t *testing.T)","Funname":"Test_SolarToLunar","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_SolarToLunar(t *testing.T)","Funname":"calendar.Test_SolarToLunar","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/day.go","Functions":[{"Uniquefunname":"func (d *Day) Festival() string","Funname":"Festival","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) Festival() string","Funname":"calendar.Day.Festival","Returntype":"string","Args":""},{"Uniquefunname":"func festivalForFatherAndMother(year, month, day int) string","Funname":"calendar.festivalForFatherAndMother","Returntype":"string","Args":"year, month, day int"},{"Uniquefunname":"func festivalForFatherAndMother(year, month, day int) string","Funname":"festivalForFatherAndMother","Returntype":"string","Args":"year, month, day int"}],"Records":[{"Name":"struct:calendar.Day","Fields":["calendar.Day.Day int","calendar.Day.Month int","calendar.Day.Year int"]},{"Name":"struct:calendar.festival","Fields":["calendar.festival.name string","calendar.festival.startYear int"]},{"Name":"var:calendar","Fields":["calendar.solarFestivals"]}]}
{"Filepath":"calendar/lunar/day.go","Functions":[{"Uniquefunname":"func (d *Day) DayName() string","Funname":"DayName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) Festival() string","Funname":"Festival","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiDay() string","Funname":"GanZhiDay","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiMonth() string","Funname":"GanZhiMonth","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiYear() string","Funname":"GanZhiYear","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) MonthName() string","Funname":"MonthName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) SolarTermName() string","Funname":"SolarTermName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) YearZodiac() string","Funname":"YearZodiac","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) DayName() string","Funname":"lunar.Day.DayName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) Festival() string","Funname":"lunar.Day.Festival","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiDay() string","Funname":"lunar.Day.GanZhiDay","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiMonth() string","Funname":"lunar.Day.GanZhiMonth","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) GanZhiYear() string","Funname":"lunar.Day.GanZhiYear","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) MonthName() string","Funname":"lunar.Day.MonthName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) SolarTermName() string","Funname":"lunar.Day.SolarTermName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Day) YearZodiac() string","Funname":"lunar.Day.YearZodiac","Returntype":"string","Args":""}],"Records":[{"Name":"struct:lunar.Day","Fields":["lunar.Day.Day int","lunar.Day.LunarDay int","lunar.Day.LunarMonth *Month","lunar.Day.LunarYear int","lunar.Day.Month int","lunar.Day.MonthZhi int","lunar.Day.SolarTerm int","lunar.Day.Year int"]},{"Name":"var:lunar","Fields":["lunar.dayNames","lunar.lunarFestival","lunar.monthNames"]}]}
{"Filepath":"calendar/lunar/day_test.go","Functions":[{"Uniquefunname":"func TestDay(t *testing.T)","Funname":"TestDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDay(t *testing.T)","Funname":"lunar.TestDay","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/elp82.go","Functions":[{"Uniquefunname":"func CalcMoonECLongitudePeriodic(D, M, Mp, F, E float64) float64","Funname":"CalcMoonECLongitudePeriodic","Returntype":"float64","Args":"D, M, Mp, F, E float64"},{"Uniquefunname":"func CalcMoonLongitudePerturbation(T, Lp, F float64) float64","Funname":"CalcMoonLongitudePerturbation","Returntype":"float64","Args":"T, Lp, F float64"},{"Uniquefunname":"func GetMoonEclipticLongitudeEC(jd float64) float64","Funname":"GetMoonEclipticLongitudeEC","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetMoonEclipticParameter(T float64) (Lp, D, M, Mp, F, E float64)","Funname":"GetMoonEclipticParameter","Returntype":"(Lp, D, M, Mp, F, E float64)","Args":"T float64"},{"Uniquefunname":"func CalcMoonECLongitudePeriodic(D, M, Mp, F, E float64) float64","Funname":"lunar.CalcMoonECLongitudePeriodic","Returntype":"float64","Args":"D, M, Mp, F, E float64"},{"Uniquefunname":"func CalcMoonLongitudePerturbation(T, Lp, F float64) float64","Funname":"lunar.CalcMoonLongitudePerturbation","Returntype":"float64","Args":"T, Lp, F float64"},{"Uniquefunname":"func GetMoonEclipticLongitudeEC(jd float64) float64","Funname":"lunar.GetMoonEclipticLongitudeEC","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetMoonEclipticParameter(T float64) (Lp, D, M, Mp, F, E float64)","Funname":"lunar.GetMoonEclipticParameter","Returntype":"(Lp, D, M, Mp, F, E float64)","Args":"T float64"}],"Records":null}
{"Filepath":"calendar/lunar/elp82_const.go","Functions":null,"Records":[{"Name":"struct:lunar.MoonEclipticLongitudeCoeff","Fields":["lunar.MoonEclipticLongitudeCoeff.D float64","lunar.MoonEclipticLongitudeCoeff.EiA float64","lunar.MoonEclipticLongitudeCoeff.ErA float64","lunar.MoonEclipticLongitudeCoeff.F float64","lunar.MoonEclipticLongitudeCoeff.M float64","lunar.MoonEclipticLongitudeCoeff.Mp float64"]},{"Name":"var:lunar","Fields":["lunar.MoonLongitude"]}]}
{"Filepath":"calendar/lunar/elp82_test.go","Functions":[{"Uniquefunname":"func Test_CalcMoonECLongitudePeriodic(t *testing.T)","Funname":"Test_CalcMoonECLongitudePeriodic","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetMoonEclipticLongitudeEC(t *testing.T)","Funname":"Test_GetMoonEclipticLongitudeEC","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetMoonEclipticParameter(t *testing.T)","Funname":"Test_GetMoonEclipticParameter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_CalcMoonECLongitudePeriodic(t *testing.T)","Funname":"lunar.Test_CalcMoonECLongitudePeriodic","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetMoonEclipticLongitudeEC(t *testing.T)","Funname":"lunar.Test_GetMoonEclipticLongitudeEC","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetMoonEclipticParameter(t *testing.T)","Funname":"lunar.Test_GetMoonEclipticParameter","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/iau1980.go","Functions":[{"Uniquefunname":"func CalcEarthLongitudeNutation(T float64) float64","Funname":"CalcEarthLongitudeNutation","Returntype":"float64","Args":"T float64"},{"Uniquefunname":"func CalcEarthObliquityNutation(dt float64) float64","Funname":"CalcEarthObliquityNutation","Returntype":"float64","Args":"dt float64"},{"Uniquefunname":"func GetEarthNutationParameter(T float64) (D, M, Mp, F, Omega float64)","Funname":"GetEarthNutationParameter","Returntype":"(D, M, Mp, F, Omega float64)","Args":"T float64"},{"Uniquefunname":"func CalcEarthLongitudeNutation(T float64) float64","Funname":"lunar.CalcEarthLongitudeNutation","Returntype":"float64","Args":"T float64"},{"Uniquefunname":"func CalcEarthObliquityNutation(dt float64) float64","Funname":"lunar.CalcEarthObliquityNutation","Returntype":"float64","Args":"dt float64"},{"Uniquefunname":"func GetEarthNutationParameter(T float64) (D, M, Mp, F, Omega float64)","Funname":"lunar.GetEarthNutationParameter","Returntype":"(D, M, Mp, F, Omega float64)","Args":"T float64"}],"Records":[{"Name":"struct:lunar.NuationCoefficient","Fields":["lunar.NuationCoefficient.Cosine1 float64","lunar.NuationCoefficient.Cosine2 float64","lunar.NuationCoefficient.D float64","lunar.NuationCoefficient.F float64","lunar.NuationCoefficient.M float64","lunar.NuationCoefficient.Mp float64","lunar.NuationCoefficient.Omega float64","lunar.NuationCoefficient.Sine1 float64","lunar.NuationCoefficient.Sine2 float64"]},{"Name":"var:lunar","Fields":["lunar.coefficient","lunar.nuation"]}]}
{"Filepath":"calendar/lunar/iau1980_test.go","Functions":[{"Uniquefunname":"func Test_CalcEarthLongitudeNutation(t *testing.T)","Funname":"Test_CalcEarthLongitudeNutation","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_CalcEarthObliquityNutation(t *testing.T)","Funname":"Test_CalcEarthObliquityNutation","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_CalcEarthLongitudeNutation(t *testing.T)","Funname":"lunar.Test_CalcEarthLongitudeNutation","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_CalcEarthObliquityNutation(t *testing.T)","Funname":"lunar.Test_CalcEarthObliquityNutation","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/lunar.go","Functions":[{"Uniquefunname":"func GetDayGanZhi(year, month, day int) string","Funname":"GetDayGanZhi","Returntype":"string","Args":"year, month, day int"},{"Uniquefunname":"func GetYearGanZhi(year int) string","Funname":"GetYearGanZhi","Returntype":"string","Args":"year int"},{"Uniquefunname":"func GetYearZodiac(year int) string","Funname":"GetYearZodiac","Returntype":"string","Args":"year int"},{"Uniquefunname":"func New(year int) *Calendar","Funname":"New","Returntype":"*Calendar","Args":"year int"},{"Uniquefunname":"func (cc *Calendar) SolarDayToLunarDay(month, day int) *Day","Funname":"SolarDayToLunarDay","Returntype":"*Day","Args":"month, day int"},{"Uniquefunname":"func (m *Month) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (cc *Calendar) calcLeapMonth()","Funname":"calcLeapMonth","Returntype":"","Args":""},{"Uniquefunname":"func (cc *Calendar) calcProcData()","Funname":"calcProcData","Returntype":"","Args":""},{"Uniquefunname":"func cyclical(num int) string","Funname":"cyclical","Returntype":"string","Args":"num int"},{"Uniquefunname":"func deltaDays(t1, t2 time.Time) int","Funname":"deltaDays","Returntype":"int","Args":"t1, t2 time.Time"},{"Uniquefunname":"func (cc *Calendar) fillMonths()","Funname":"fillMonths","Returntype":"","Args":""},{"Uniquefunname":"func get15NewMoonJDs(jd float64) *[15]float64","Funname":"get15NewMoonJDs","Returntype":"*[15]float64","Args":"jd float64"},{"Uniquefunname":"func get25SolarTermJDs(year, start int) *[25]float64","Funname":"get25SolarTermJDs","Returntype":"*[25]float64","Args":"year, start int"},{"Uniquefunname":"func (cc *Calendar) getMonthSolarTerms(month int) [2]*solarTermInfo","Funname":"getMonthSolarTerms","Returntype":"[2]*solarTermInfo","Args":"month int"},{"Uniquefunname":"func (cc *Calendar) getSolarTermInfo(index int) *solarTermInfo","Funname":"getSolarTermInfo","Returntype":"*solarTermInfo","Args":"index int"},{"Uniquefunname":"func (cc *Calendar) SolarDayToLunarDay(month, day int) *Day","Funname":"lunar.Calendar.SolarDayToLunarDay","Returntype":"*Day","Args":"month, day int"},{"Uniquefunname":"func (cc *Calendar) calcLeapMonth()","Funname":"lunar.Calendar.calcLeapMonth","Returntype":"","Args":""},{"Uniquefunname":"func (cc *Calendar) calcProcData()","Funname":"lunar.Calendar.calcProcData","Returntype":"","Args":""},{"Uniquefunname":"func (cc *Calendar) fillMonths()","Funname":"lunar.Calendar.fillMonths","Returntype":"","Args":""},{"Uniquefunname":"func (cc *Calendar) getMonthSolarTerms(month int) [2]*solarTermInfo","Funname":"lunar.Calendar.getMonthSolarTerms","Returntype":"[2]*solarTermInfo","Args":"month int"},{"Uniquefunname":"func (cc *Calendar) getSolarTermInfo(index int) *solarTermInfo","Funname":"lunar.Calendar.getSolarTermInfo","Returntype":"*solarTermInfo","Args":"index int"},{"Uniquefunname":"func GetDayGanZhi(year, month, day int) string","Funname":"lunar.GetDayGanZhi","Returntype":"string","Args":"year, month, day int"},{"Uniquefunname":"func GetYearGanZhi(year int) string","Funname":"lunar.GetYearGanZhi","Returntype":"string","Args":"year int"},{"Uniquefunname":"func GetYearZodiac(year int) string","Funname":"lunar.GetYearZodiac","Returntype":"string","Args":"year int"},{"Uniquefunname":"func (m *Month) String() string","Funname":"lunar.Month.String","Returntype":"string","Args":""},{"Uniquefunname":"func New(year int) *Calendar","Funname":"lunar.New","Returntype":"*Calendar","Args":"year int"},{"Uniquefunname":"func cyclical(num int) string","Funname":"lunar.cyclical","Returntype":"string","Args":"num int"},{"Uniquefunname":"func deltaDays(t1, t2 time.Time) int","Funname":"lunar.deltaDays","Returntype":"int","Args":"t1, t2 time.Time"},{"Uniquefunname":"func get15NewMoonJDs(jd float64) *[15]float64","Funname":"lunar.get15NewMoonJDs","Returntype":"*[15]float64","Args":"jd float64"},{"Uniquefunname":"func get25SolarTermJDs(year, start int) *[25]float64","Funname":"lunar.get25SolarTermJDs","Returntype":"*[25]float64","Args":"year, start int"},{"Uniquefunname":"func newCalendar(year int) *Calendar","Funname":"lunar.newCalendar","Returntype":"*Calendar","Args":"year int"},{"Uniquefunname":"func newCalendar(year int) *Calendar","Funname":"newCalendar","Returntype":"*Calendar","Args":"year int"}],"Records":[{"Name":"var:lunar","Fields":["lunar.Animals","lunar.Gan","lunar.Zhi","lunar.ccCache"]},{"Name":"struct:lunar.Calendar","Fields":["lunar.Calendar.Months []*Month","lunar.Calendar.NewMoonJDs *[15]float64","lunar.Calendar.SolarTermJDs *[25]float64","lunar.Calendar.SolarTermTimes *[25]time.Time","lunar.Calendar.Year int","lunar.Calendar.solarTermYearDays []int"]},{"Name":"struct:lunar.Month","Fields":["lunar.Month.Days int","lunar.Month.IsLeap bool","lunar.Month.LunarYear int","lunar.Month.Name int","lunar.Month.ShuoJD float64","lunar.Month.ShuoTime time.Time"]},{"Name":"struct:lunar.solarTermInfo","Fields":["lunar.solarTermInfo.Day int","lunar.solarTermInfo.SolarTerm int"]}]}
{"Filepath":"calendar/lunar/lunar_test.go","Functions":[{"Uniquefunname":"func Test_GetYearGanZhi(t *testing.T)","Funname":"Test_GetYearGanZhi","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetYearZodiac(t *testing.T)","Funname":"Test_GetYearZodiac","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_New(t *testing.T)","Funname":"Test_New","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_cyclical(t *testing.T)","Funname":"Test_cyclical","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetYearGanZhi(t *testing.T)","Funname":"lunar.Test_GetYearGanZhi","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetYearZodiac(t *testing.T)","Funname":"lunar.Test_GetYearZodiac","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_New(t *testing.T)","Funname":"lunar.Test_New","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_cyclical(t *testing.T)","Funname":"lunar.Test_cyclical","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/mathutil.go","Functions":[{"Uniquefunname":"func DmsToDegrees(degrees int, mintues int, seconds float64) float64","Funname":"DmsToDegrees","Returntype":"float64","Args":"degrees int, mintues int, seconds float64"},{"Uniquefunname":"func DmsToRadians(d int, m int, s float64) float64","Funname":"DmsToRadians","Returntype":"float64","Args":"d int, m int, s float64"},{"Uniquefunname":"func DmsToSeconds(d int, m int, s float64) float64","Funname":"DmsToSeconds","Returntype":"float64","Args":"d int, m int, s float64"},{"Uniquefunname":"func Mod2Pi(r float64) float64","Funname":"Mod2Pi","Returntype":"float64","Args":"r float64"},{"Uniquefunname":"func ModPi(r float64) float64","Funname":"ModPi","Returntype":"float64","Args":"r float64"},{"Uniquefunname":"func NewtonIteration(f func(float64) float64, x0 float64) float64","Funname":"NewtonIteration","Returntype":"float64","Args":"f func(float64) float64, x0 float64"},{"Uniquefunname":"func SecondsToDegrees(seconds float64) float64","Funname":"SecondsToDegrees","Returntype":"float64","Args":"seconds float64"},{"Uniquefunname":"func SecondsToRadians(seconds float64) float64","Funname":"SecondsToRadians","Returntype":"float64","Args":"seconds float64"},{"Uniquefunname":"func ToDegrees(rad float64) float64","Funname":"ToDegrees","Returntype":"float64","Args":"rad float64"},{"Uniquefunname":"func ToRadians(degrees float64) float64","Funname":"ToRadians","Returntype":"float64","Args":"degrees float64"},{"Uniquefunname":"func DmsToDegrees(degrees int, mintues int, seconds float64) float64","Funname":"lunar.DmsToDegrees","Returntype":"float64","Args":"degrees int, mintues int, seconds float64"},{"Uniquefunname":"func DmsToRadians(d int, m int, s float64) float64","Funname":"lunar.DmsToRadians","Returntype":"float64","Args":"d int, m int, s float64"},{"Uniquefunname":"func DmsToSeconds(d int, m int, s float64) float64","Funname":"lunar.DmsToSeconds","Returntype":"float64","Args":"d int, m int, s float64"},{"Uniquefunname":"func Mod2Pi(r float64) float64","Funname":"lunar.Mod2Pi","Returntype":"float64","Args":"r float64"},{"Uniquefunname":"func ModPi(r float64) float64","Funname":"lunar.ModPi","Returntype":"float64","Args":"r float64"},{"Uniquefunname":"func NewtonIteration(f func(float64) float64, x0 float64) float64","Funname":"lunar.NewtonIteration","Returntype":"float64","Args":"f func(float64) float64, x0 float64"},{"Uniquefunname":"func SecondsToDegrees(seconds float64) float64","Funname":"lunar.SecondsToDegrees","Returntype":"float64","Args":"seconds float64"},{"Uniquefunname":"func SecondsToRadians(seconds float64) float64","Funname":"lunar.SecondsToRadians","Returntype":"float64","Args":"seconds float64"},{"Uniquefunname":"func ToDegrees(rad float64) float64","Funname":"lunar.ToDegrees","Returntype":"float64","Args":"rad float64"},{"Uniquefunname":"func ToRadians(degrees float64) float64","Funname":"lunar.ToRadians","Returntype":"float64","Args":"degrees float64"}],"Records":null}
{"Filepath":"calendar/lunar/mathutil_test.go","Functions":[{"Uniquefunname":"func TestMathUtil(t *testing.T)","Funname":"TestMathUtil","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMathUtil(t *testing.T)","Funname":"lunar.TestMathUtil","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/newmoon.go","Functions":[{"Uniquefunname":"func getNewMoonJD(jd0 float64) float64","Funname":"getNewMoonJD","Returntype":"float64","Args":"jd0 float64"},{"Uniquefunname":"func getNewMoonJD(jd0 float64) float64","Funname":"lunar.getNewMoonJD","Returntype":"float64","Args":"jd0 float64"}],"Records":null}
{"Filepath":"calendar/lunar/newmoon_test.go","Functions":[{"Uniquefunname":"func Test_getNewMoonJD(t *testing.T)","Funname":"Test_getNewMoonJD","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getNewMoonJD(t *testing.T)","Funname":"lunar.Test_getNewMoonJD","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/solarterms.go","Functions":[{"Uniquefunname":"func GetSolarTermJD(year, order int) float64","Funname":"GetSolarTermJD","Returntype":"float64","Args":"year, order int"},{"Uniquefunname":"func GetSolarTermName(order int) string","Funname":"GetSolarTermName","Returntype":"string","Args":"order int"},{"Uniquefunname":"func GetSolarTermJD(year, order int) float64","Funname":"lunar.GetSolarTermJD","Returntype":"float64","Args":"year, order int"},{"Uniquefunname":"func GetSolarTermName(order int) string","Funname":"lunar.GetSolarTermName","Returntype":"string","Args":"order int"}],"Records":[{"Name":"const:lunar","Fields":["lunar.BaiLu","lunar.ChuShu","lunar.ChunFen","lunar.DaHan","lunar.DaShu","lunar.DaXue","lunar.DongZhi","lunar.GuYu","lunar.HanLu","lunar.JingZhe","lunar.LiChun","lunar.LiDong","lunar.LiQiu","lunar.LiXia","lunar.MangZhong","lunar.QingMing","lunar.QiuFen","lunar.ShuangJiang","lunar.XiaZhi","lunar.XiaoHan","lunar.XiaoMan","lunar.XiaoShu","lunar.XiaoXue","lunar.YuShui"]},{"Name":"var:lunar","Fields":["lunar.SolarTermNames"]}]}
{"Filepath":"calendar/lunar/solarterms_test.go","Functions":[{"Uniquefunname":"func TestSolarTerms(t *testing.T)","Funname":"TestSolarTerms","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSolarTerms(t *testing.T)","Funname":"lunar.TestSolarTerms","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/lunar/vsop87earthd.go","Functions":[{"Uniquefunname":"func GetEarthEclipticLongitudeForSun(jd float64) float64","Funname":"GetEarthEclipticLongitudeForSun","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunEclipticLatitudeForEarth(jd float64) float64","Funname":"GetSunEclipticLatitudeForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunEclipticLongitudeForEarth(jd float64) float64","Funname":"GetSunEclipticLongitudeForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunRadiusForEarth(jd float64) float64","Funname":"GetSunRadiusForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func Vsop2Fk5LongitudeCorrection(l float64, b float64, jd float64) float64","Funname":"Vsop2Fk5LongitudeCorrection","Returntype":"float64","Args":"l float64, b float64, jd float64"},{"Uniquefunname":"func GetEarthEclipticLongitudeForSun(jd float64) float64","Funname":"lunar.GetEarthEclipticLongitudeForSun","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunEclipticLatitudeForEarth(jd float64) float64","Funname":"lunar.GetSunEclipticLatitudeForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunEclipticLongitudeForEarth(jd float64) float64","Funname":"lunar.GetSunEclipticLongitudeForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSunRadiusForEarth(jd float64) float64","Funname":"lunar.GetSunRadiusForEarth","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func Vsop2Fk5LongitudeCorrection(l float64, b float64, jd float64) float64","Funname":"lunar.Vsop2Fk5LongitudeCorrection","Returntype":"float64","Args":"l float64, b float64, jd float64"}],"Records":[{"Name":"var:lunar","Fields":["lunar.lightAberration"]}]}
{"Filepath":"calendar/lunar/vsop87earthd_const.go","Functions":[{"Uniquefunname":"func GetEarthB0(t float64) float64","Funname":"GetEarthB0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB1(t float64) float64","Funname":"GetEarthB1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB2(t float64) float64","Funname":"GetEarthB2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB3(t float64) float64","Funname":"GetEarthB3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB4(t float64) float64","Funname":"GetEarthB4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL0(t float64) float64","Funname":"GetEarthL0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL1(t float64) float64","Funname":"GetEarthL1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL2(t float64) float64","Funname":"GetEarthL2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL3(t float64) float64","Funname":"GetEarthL3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL4(t float64) float64","Funname":"GetEarthL4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL5(t float64) float64","Funname":"GetEarthL5","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR0(t float64) float64","Funname":"GetEarthR0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR1(t float64) float64","Funname":"GetEarthR1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR2(t float64) float64","Funname":"GetEarthR2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR3(t float64) float64","Funname":"GetEarthR3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR4(t float64) float64","Funname":"GetEarthR4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR5(t float64) float64","Funname":"GetEarthR5","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB0(t float64) float64","Funname":"lunar.GetEarthB0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB1(t float64) float64","Funname":"lunar.GetEarthB1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB2(t float64) float64","Funname":"lunar.GetEarthB2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB3(t float64) float64","Funname":"lunar.GetEarthB3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthB4(t float64) float64","Funname":"lunar.GetEarthB4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL0(t float64) float64","Funname":"lunar.GetEarthL0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL1(t float64) float64","Funname":"lunar.GetEarthL1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL2(t float64) float64","Funname":"lunar.GetEarthL2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL3(t float64) float64","Funname":"lunar.GetEarthL3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL4(t float64) float64","Funname":"lunar.GetEarthL4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthL5(t float64) float64","Funname":"lunar.GetEarthL5","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR0(t float64) float64","Funname":"lunar.GetEarthR0","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR1(t float64) float64","Funname":"lunar.GetEarthR1","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR2(t float64) float64","Funname":"lunar.GetEarthR2","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR3(t float64) float64","Funname":"lunar.GetEarthR3","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR4(t float64) float64","Funname":"lunar.GetEarthR4","Returntype":"float64","Args":"t float64"},{"Uniquefunname":"func GetEarthR5(t float64) float64","Funname":"lunar.GetEarthR5","Returntype":"float64","Args":"t float64"}],"Records":null}
{"Filepath":"calendar/lunar/vsop87earthd_test.go","Functions":[{"Uniquefunname":"func Test_GetEarthXX(te *testing.T)","Funname":"Test_GetEarthXX","Returntype":"","Args":"te *testing.T"},{"Uniquefunname":"func Test_GetSunEclipticLatitudeForEarth(t *testing.T)","Funname":"Test_GetSunEclipticLatitudeForEarth","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSunEclipticLongitudeForEarth(t *testing.T)","Funname":"Test_GetSunEclipticLongitudeForEarth","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSunRadiusForEarth(t *testing.T)","Funname":"Test_GetSunRadiusForEarth","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetEarthXX(te *testing.T)","Funname":"lunar.Test_GetEarthXX","Returntype":"","Args":"te *testing.T"},{"Uniquefunname":"func Test_GetSunEclipticLatitudeForEarth(t *testing.T)","Funname":"lunar.Test_GetSunEclipticLatitudeForEarth","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSunEclipticLongitudeForEarth(t *testing.T)","Funname":"lunar.Test_GetSunEclipticLongitudeForEarth","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSunRadiusForEarth(t *testing.T)","Funname":"lunar.Test_GetSunRadiusForEarth","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/util/julianday.go","Functions":[{"Uniquefunname":"func GetDateFromJulianDay(jd float64) (yy, mm, dd int)","Funname":"GetDateFromJulianDay","Returntype":"(yy, mm, dd int)","Args":"jd float64"},{"Uniquefunname":"func GetDateTimeFromJulianDay(jd float64) time.Time","Funname":"GetDateTimeFromJulianDay","Returntype":"time.Time","Args":"jd float64"},{"Uniquefunname":"func GetTimeFromJulianDay(jd float64) (hour, minute, second int)","Funname":"GetTimeFromJulianDay","Returntype":"(hour, minute, second int)","Args":"jd float64"},{"Uniquefunname":"func GetDateFromJulianDay(jd float64) (yy, mm, dd int)","Funname":"util.GetDateFromJulianDay","Returntype":"(yy, mm, dd int)","Args":"jd float64"},{"Uniquefunname":"func GetDateTimeFromJulianDay(jd float64) time.Time","Funname":"util.GetDateTimeFromJulianDay","Returntype":"time.Time","Args":"jd float64"},{"Uniquefunname":"func GetTimeFromJulianDay(jd float64) (hour, minute, second int)","Funname":"util.GetTimeFromJulianDay","Returntype":"(hour, minute, second int)","Args":"jd float64"}],"Records":null}
{"Filepath":"calendar/util/julianday_test.go","Functions":[{"Uniquefunname":"func Test_GetDateFromJulianDay(t *testing.T)","Funname":"Test_GetDateFromJulianDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDateTimeFromJulianDay(t *testing.T)","Funname":"Test_GetDateTimeFromJulianDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetTimeFromJulianDay(t *testing.T)","Funname":"Test_GetTimeFromJulianDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDateFromJulianDay(t *testing.T)","Funname":"util.Test_GetDateFromJulianDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDateTimeFromJulianDay(t *testing.T)","Funname":"util.Test_GetDateTimeFromJulianDay","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetTimeFromJulianDay(t *testing.T)","Funname":"util.Test_GetTimeFromJulianDay","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/util/util.go","Functions":[{"Uniquefunname":"func GetDeltaT(year, month int) float64","Funname":"GetDeltaT","Returntype":"float64","Args":"year, month int"},{"Uniquefunname":"func GetJulianCentury(jd float64) float64","Funname":"GetJulianCentury","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetJulianThousandYears(jd float64) float64","Funname":"GetJulianThousandYears","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSolarMonthDays(year, month int) int","Funname":"GetSolarMonthDays","Returntype":"int","Args":"year, month int"},{"Uniquefunname":"func GetWeekday(y, m, d int) int","Funname":"GetWeekday","Returntype":"int","Args":"y, m, d int"},{"Uniquefunname":"func GetYearDaysCount(year int) int","Funname":"GetYearDaysCount","Returntype":"int","Args":"year int"},{"Uniquefunname":"func IsLeapYear(year int) bool","Funname":"IsLeapYear","Returntype":"bool","Args":"year int"},{"Uniquefunname":"func JDBeijingTime2UTC(bjtJD float64) float64","Funname":"JDBeijingTime2UTC","Returntype":"float64","Args":"bjtJD float64"},{"Uniquefunname":"func JDUTC2BeijingTime(utcJD float64) float64","Funname":"JDUTC2BeijingTime","Returntype":"float64","Args":"utcJD float64"},{"Uniquefunname":"func ToJulianDate(year, month, day int) int","Funname":"ToJulianDate","Returntype":"int","Args":"year, month, day int"},{"Uniquefunname":"func ToJulianDateHMS(year, month, day, hour, minute int, second float64) float64","Funname":"ToJulianDateHMS","Returntype":"float64","Args":"year, month, day, hour, minute int, second float64"},{"Uniquefunname":"func GetDeltaT(year, month int) float64","Funname":"util.GetDeltaT","Returntype":"float64","Args":"year, month int"},{"Uniquefunname":"func GetJulianCentury(jd float64) float64","Funname":"util.GetJulianCentury","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetJulianThousandYears(jd float64) float64","Funname":"util.GetJulianThousandYears","Returntype":"float64","Args":"jd float64"},{"Uniquefunname":"func GetSolarMonthDays(year, month int) int","Funname":"util.GetSolarMonthDays","Returntype":"int","Args":"year, month int"},{"Uniquefunname":"func GetWeekday(y, m, d int) int","Funname":"util.GetWeekday","Returntype":"int","Args":"y, m, d int"},{"Uniquefunname":"func GetYearDaysCount(year int) int","Funname":"util.GetYearDaysCount","Returntype":"int","Args":"year int"},{"Uniquefunname":"func IsLeapYear(year int) bool","Funname":"util.IsLeapYear","Returntype":"bool","Args":"year int"},{"Uniquefunname":"func JDBeijingTime2UTC(bjtJD float64) float64","Funname":"util.JDBeijingTime2UTC","Returntype":"float64","Args":"bjtJD float64"},{"Uniquefunname":"func JDUTC2BeijingTime(utcJD float64) float64","Funname":"util.JDUTC2BeijingTime","Returntype":"float64","Args":"utcJD float64"},{"Uniquefunname":"func ToJulianDate(year, month, day int) int","Funname":"util.ToJulianDate","Returntype":"int","Args":"year, month, day int"},{"Uniquefunname":"func ToJulianDateHMS(year, month, day, hour, minute int, second float64) float64","Funname":"util.ToJulianDateHMS","Returntype":"float64","Args":"year, month, day, hour, minute int, second float64"}],"Records":[{"Name":"const:util","Fields":["util.J2000"]},{"Name":"var:util","Fields":["util.monthDays"]}]}
{"Filepath":"calendar/util/util_test.go","Functions":[{"Uniquefunname":"func Test_GetJulianCentury(t *testing.T)","Funname":"Test_GetJulianCentury","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetJulianThousandYears(t *testing.T)","Funname":"Test_GetJulianThousandYears","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSolarMonthDays(t *testing.T)","Funname":"Test_GetSolarMonthDays","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetWeekday(t *testing.T)","Funname":"Test_GetWeekday","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsLeapYear(t *testing.T)","Funname":"Test_IsLeapYear","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_ToJulianDate(t *testing.T)","Funname":"Test_ToJulianDate","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_ToJulianDateHMS(t *testing.T)","Funname":"Test_ToJulianDateHMS","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetJulianCentury(t *testing.T)","Funname":"util.Test_GetJulianCentury","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetJulianThousandYears(t *testing.T)","Funname":"util.Test_GetJulianThousandYears","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetSolarMonthDays(t *testing.T)","Funname":"util.Test_GetSolarMonthDays","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetWeekday(t *testing.T)","Funname":"util.Test_GetWeekday","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsLeapYear(t *testing.T)","Funname":"util.Test_IsLeapYear","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_ToJulianDate(t *testing.T)","Funname":"util.Test_ToJulianDate","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_ToJulianDateHMS(t *testing.T)","Funname":"util.Test_ToJulianDateHMS","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"cgroup/cgroup.go","Functions":[{"Uniquefunname":"func (cg *Cgroup) AddController(name string) *Controller","Funname":"AddController","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) AllExist() bool","Funname":"AllExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachCurrentProcess() error","Funname":"AttachCurrentProcess","Returntype":"error","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachCurrentTask() error","Funname":"AttachCurrentTask","Returntype":"error","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachProcess(pid int) error","Funname":"AttachProcess","Returntype":"error","Args":"pid int"},{"Uniquefunname":"func (cg *Cgroup) AttachTask(tid int) error","Funname":"AttachTask","Returntype":"error","Args":"tid int"},{"Uniquefunname":"func (c *Controller) Cgroup() *Cgroup","Funname":"Cgroup","Returntype":"*Cgroup","Args":""},{"Uniquefunname":"func (cg *Cgroup) Create(ignoreOwnership bool) (err error)","Funname":"Create","Returntype":"(err error)","Args":"ignoreOwnership bool"},{"Uniquefunname":"func (cg *Cgroup) Delete(flags DeleteFlags) (err error)","Funname":"Delete","Returntype":"(err error)","Args":"flags DeleteFlags"},{"Uniquefunname":"func (cd *ControllerInfo) Enabled() bool","Funname":"Enabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (c *Controller) Exists() bool","Funname":"Exists","Returntype":"bool","Args":""},{"Uniquefunname":"func GetAllControllers() ([]*ControllerInfo, error)","Funname":"GetAllControllers","Returntype":"([]*ControllerInfo, error)","Args":""},{"Uniquefunname":"func (cg *Cgroup) GetChildren(controller string) ([]string, error)","Funname":"GetChildren","Returntype":"([]string, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) GetController(name string) *Controller","Funname":"GetController","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func GetControllers() []*MountTableItem","Funname":"GetControllers","Returntype":"[]*MountTableItem","Args":""},{"Uniquefunname":"func GetProcessControllerPath(pid int, controller string) (string, error)","Funname":"GetProcessControllerPath","Returntype":"(string, error)","Args":"pid int, controller string"},{"Uniquefunname":"func (cg *Cgroup) GetProcs(controller string) ([]int, error)","Funname":"GetProcs","Returntype":"([]int, error)","Args":"controller string"},{"Uniquefunname":"func GetProcs(name, controller string) ([]int, error)","Funname":"GetProcs","Returntype":"([]int, error)","Args":"name, controller string"},{"Uniquefunname":"func (c *Controller) GetStats(fields []string, args ...*uint64) (int, error)","Funname":"GetStats","Returntype":"(int, error)","Args":"fields []string, args ...*uint64"},{"Uniquefunname":"func (c *Controller) GetStatsAll() (map[string]uint64, error)","Funname":"GetStatsAll","Returntype":"(map[string]uint64, error)","Args":""},{"Uniquefunname":"func GetSubSysMountPoint(controller string) string","Funname":"GetSubSysMountPoint","Returntype":"string","Args":"controller string"},{"Uniquefunname":"func GetSubSysMountPoints(controller string) []string","Funname":"GetSubSysMountPoints","Returntype":"[]string","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) GetTasks(controller string) ([]int, error)","Funname":"GetTasks","Returntype":"([]int, error)","Args":"controller string"},{"Uniquefunname":"func GetTasks(name, controller string) ([]int, error)","Funname":"GetTasks","Returntype":"([]int, error)","Args":"name, controller string"},{"Uniquefunname":"func (cg *Cgroup) GetUidGid() (int, int, int, int)","Funname":"GetUidGid","Returntype":"(int, int, int, int)","Args":""},{"Uniquefunname":"func (c *Controller) GetValueBool(name string) (bool, error)","Funname":"GetValueBool","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueInt64(name string) (int64, error)","Funname":"GetValueInt64","Returntype":"(int64, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueString(name string) (string, error)","Funname":"GetValueString","Returntype":"(string, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueUint64(name string) (uint64, error)","Funname":"GetValueUint64","Returntype":"(uint64, error)","Args":"name string"},{"Uniquefunname":"func (cd *ControllerInfo) Hierarchy() int","Funname":"Hierarchy","Returntype":"int","Args":""},{"Uniquefunname":"func Init() error","Funname":"Init","Returntype":"error","Args":""},{"Uniquefunname":"func (item *MountTableItem) MountPoints() []string","Funname":"MountPoints","Returntype":"[]string","Args":""},{"Uniquefunname":"func (c *Controller) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (cd *ControllerInfo) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (cg *Cgroup) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func (item *MountTableItem) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewCgroup(name string) *Cgroup","Funname":"NewCgroup","Returntype":"*Cgroup","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) NewChildGroup(name string) *Cgroup","Funname":"NewChildGroup","Returntype":"*Cgroup","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) NewChildrenGroups(controller string) ([]*Cgroup, error)","Funname":"NewChildrenGroups","Returntype":"([]*Cgroup, error)","Args":"controller string"},{"Uniquefunname":"func (cd *ControllerInfo) NumCgroups() int","Funname":"NumCgroups","Returntype":"int","Args":""},{"Uniquefunname":"func (cg *Cgroup) SetPermissions(controlDirPerm, controlFilePerm, tasksFilePerm os.FileMode)","Funname":"SetPermissions","Returntype":"","Args":"controlDirPerm, controlFilePerm, tasksFilePerm os.FileMode"},{"Uniquefunname":"func (cg *Cgroup) SetUidGid(tasksUid, tasksGid, controlUid, controlGid int)","Funname":"SetUidGid","Returntype":"","Args":"tasksUid, tasksGid, controlUid, controlGid int"},{"Uniquefunname":"func (c *Controller) SetValueBool(name string, value bool) error","Funname":"SetValueBool","Returntype":"error","Args":"name string, value bool"},{"Uniquefunname":"func (c *Controller) SetValueInt64(name string, value int64) error","Funname":"SetValueInt64","Returntype":"error","Args":"name string, value int64"},{"Uniquefunname":"func (c *Controller) SetValueString(name, value string) error","Funname":"SetValueString","Returntype":"error","Args":"name, value string"},{"Uniquefunname":"func (c *Controller) SetValueUint64(name string, value uint64) error","Funname":"SetValueUint64","Returntype":"error","Args":"name string, value uint64"},{"Uniquefunname":"func (item *MountTableItem) addDuplicateMount(path string)","Funname":"addDuplicateMount","Returntype":"","Args":"path string"},{"Uniquefunname":"func attachTaskProc(path string, tid int) error","Funname":"attachTaskProc","Returntype":"error","Args":"path string, tid int"},{"Uniquefunname":"func buildPath(name, controller string) string","Funname":"buildPath","Returntype":"string","Args":"name, controller string"},{"Uniquefunname":"func (cg *Cgroup) AddController(name string) *Controller","Funname":"cgroup.Cgroup.AddController","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) AllExist() bool","Funname":"cgroup.Cgroup.AllExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachCurrentProcess() error","Funname":"cgroup.Cgroup.AttachCurrentProcess","Returntype":"error","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachCurrentTask() error","Funname":"cgroup.Cgroup.AttachCurrentTask","Returntype":"error","Args":""},{"Uniquefunname":"func (cg *Cgroup) AttachProcess(pid int) error","Funname":"cgroup.Cgroup.AttachProcess","Returntype":"error","Args":"pid int"},{"Uniquefunname":"func (cg *Cgroup) AttachTask(tid int) error","Funname":"cgroup.Cgroup.AttachTask","Returntype":"error","Args":"tid int"},{"Uniquefunname":"func (cg *Cgroup) Create(ignoreOwnership bool) (err error)","Funname":"cgroup.Cgroup.Create","Returntype":"(err error)","Args":"ignoreOwnership bool"},{"Uniquefunname":"func (cg *Cgroup) Delete(flags DeleteFlags) (err error)","Funname":"cgroup.Cgroup.Delete","Returntype":"(err error)","Args":"flags DeleteFlags"},{"Uniquefunname":"func (cg *Cgroup) GetChildren(controller string) ([]string, error)","Funname":"cgroup.Cgroup.GetChildren","Returntype":"([]string, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) GetController(name string) *Controller","Funname":"cgroup.Cgroup.GetController","Returntype":"*Controller","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) GetProcs(controller string) ([]int, error)","Funname":"cgroup.Cgroup.GetProcs","Returntype":"([]int, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) GetTasks(controller string) ([]int, error)","Funname":"cgroup.Cgroup.GetTasks","Returntype":"([]int, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) GetUidGid() (int, int, int, int)","Funname":"cgroup.Cgroup.GetUidGid","Returntype":"(int, int, int, int)","Args":""},{"Uniquefunname":"func (cg *Cgroup) Name() string","Funname":"cgroup.Cgroup.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (cg *Cgroup) NewChildGroup(name string) *Cgroup","Funname":"cgroup.Cgroup.NewChildGroup","Returntype":"*Cgroup","Args":"name string"},{"Uniquefunname":"func (cg *Cgroup) NewChildrenGroups(controller string) ([]*Cgroup, error)","Funname":"cgroup.Cgroup.NewChildrenGroups","Returntype":"([]*Cgroup, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) SetPermissions(controlDirPerm, controlFilePerm, tasksFilePerm os.FileMode)","Funname":"cgroup.Cgroup.SetPermissions","Returntype":"","Args":"controlDirPerm, controlFilePerm, tasksFilePerm os.FileMode"},{"Uniquefunname":"func (cg *Cgroup) SetUidGid(tasksUid, tasksGid, controlUid, controlGid int)","Funname":"cgroup.Cgroup.SetUidGid","Returntype":"","Args":"tasksUid, tasksGid, controlUid, controlGid int"},{"Uniquefunname":"func (cg *Cgroup) findParent(controller string) (string, error)","Funname":"cgroup.Cgroup.findParent","Returntype":"(string, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) getFirstControllerName() string","Funname":"cgroup.Cgroup.getFirstControllerName","Returntype":"string","Args":""},{"Uniquefunname":"func (cg *Cgroup) getParentName() string","Funname":"cgroup.Cgroup.getParentName","Returntype":"string","Args":""},{"Uniquefunname":"func (cg *Cgroup) init()","Funname":"cgroup.Cgroup.init","Returntype":"","Args":""},{"Uniquefunname":"func (c *Controller) Cgroup() *Cgroup","Funname":"cgroup.Controller.Cgroup","Returntype":"*Cgroup","Args":""},{"Uniquefunname":"func (c *Controller) Exists() bool","Funname":"cgroup.Controller.Exists","Returntype":"bool","Args":""},{"Uniquefunname":"func (c *Controller) GetStats(fields []string, args ...*uint64) (int, error)","Funname":"cgroup.Controller.GetStats","Returntype":"(int, error)","Args":"fields []string, args ...*uint64"},{"Uniquefunname":"func (c *Controller) GetStatsAll() (map[string]uint64, error)","Funname":"cgroup.Controller.GetStatsAll","Returntype":"(map[string]uint64, error)","Args":""},{"Uniquefunname":"func (c *Controller) GetValueBool(name string) (bool, error)","Funname":"cgroup.Controller.GetValueBool","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueInt64(name string) (int64, error)","Funname":"cgroup.Controller.GetValueInt64","Returntype":"(int64, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueString(name string) (string, error)","Funname":"cgroup.Controller.GetValueString","Returntype":"(string, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) GetValueUint64(name string) (uint64, error)","Funname":"cgroup.Controller.GetValueUint64","Returntype":"(uint64, error)","Args":"name string"},{"Uniquefunname":"func (c *Controller) Name() string","Funname":"cgroup.Controller.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Controller) SetValueBool(name string, value bool) error","Funname":"cgroup.Controller.SetValueBool","Returntype":"error","Args":"name string, value bool"},{"Uniquefunname":"func (c *Controller) SetValueInt64(name string, value int64) error","Funname":"cgroup.Controller.SetValueInt64","Returntype":"error","Args":"name string, value int64"},{"Uniquefunname":"func (c *Controller) SetValueString(name, value string) error","Funname":"cgroup.Controller.SetValueString","Returntype":"error","Args":"name, value string"},{"Uniquefunname":"func (c *Controller) SetValueUint64(name string, value uint64) error","Funname":"cgroup.Controller.SetValueUint64","Returntype":"error","Args":"name string, value uint64"},{"Uniquefunname":"func (c *Controller) exists() bool","Funname":"cgroup.Controller.exists","Returntype":"bool","Args":""},{"Uniquefunname":"func (c *Controller) getValueFile(name string) string","Funname":"cgroup.Controller.getValueFile","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (cd *ControllerInfo) Enabled() bool","Funname":"cgroup.ControllerInfo.Enabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (cd *ControllerInfo) Hierarchy() int","Funname":"cgroup.ControllerInfo.Hierarchy","Returntype":"int","Args":""},{"Uniquefunname":"func (cd *ControllerInfo) Name() string","Funname":"cgroup.ControllerInfo.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (cd *ControllerInfo) NumCgroups() int","Funname":"cgroup.ControllerInfo.NumCgroups","Returntype":"int","Args":""},{"Uniquefunname":"func GetAllControllers() ([]*ControllerInfo, error)","Funname":"cgroup.GetAllControllers","Returntype":"([]*ControllerInfo, error)","Args":""},{"Uniquefunname":"func GetControllers() []*MountTableItem","Funname":"cgroup.GetControllers","Returntype":"[]*MountTableItem","Args":""},{"Uniquefunname":"func GetProcessControllerPath(pid int, controller string) (string, error)","Funname":"cgroup.GetProcessControllerPath","Returntype":"(string, error)","Args":"pid int, controller string"},{"Uniquefunname":"func GetProcs(name, controller string) ([]int, error)","Funname":"cgroup.GetProcs","Returntype":"([]int, error)","Args":"name, controller string"},{"Uniquefunname":"func GetSubSysMountPoint(controller string) string","Funname":"cgroup.GetSubSysMountPoint","Returntype":"string","Args":"controller string"},{"Uniquefunname":"func GetSubSysMountPoints(controller string) []string","Funname":"cgroup.GetSubSysMountPoints","Returntype":"[]string","Args":"controller string"},{"Uniquefunname":"func GetTasks(name, controller string) ([]int, error)","Funname":"cgroup.GetTasks","Returntype":"([]int, error)","Args":"name, controller string"},{"Uniquefunname":"func Init() error","Funname":"cgroup.Init","Returntype":"error","Args":""},{"Uniquefunname":"func (me *MountEntry) hasOpt(opt string) string","Funname":"cgroup.MountEntry.hasOpt","Returntype":"string","Args":"opt string"},{"Uniquefunname":"func (item *MountTableItem) MountPoints() []string","Funname":"cgroup.MountTableItem.MountPoints","Returntype":"[]string","Args":""},{"Uniquefunname":"func (item *MountTableItem) Name() string","Funname":"cgroup.MountTableItem.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (item *MountTableItem) addDuplicateMount(path string)","Funname":"cgroup.MountTableItem.addDuplicateMount","Returntype":"","Args":"path string"},{"Uniquefunname":"func NewCgroup(name string) *Cgroup","Funname":"cgroup.NewCgroup","Returntype":"*Cgroup","Args":"name string"},{"Uniquefunname":"func attachTaskProc(path string, tid int) error","Funname":"cgroup.attachTaskProc","Returntype":"error","Args":"path string, tid int"},{"Uniquefunname":"func buildPath(name, controller string) string","Funname":"cgroup.buildPath","Returntype":"string","Args":"name, controller string"},{"Uniquefunname":"func cgroup.chmodFile(filename string, info os.FileInfo, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool)error","Funname":"cgroup.chmodFile","Returntype":"error","Args":"filename string, info os.FileInfo, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool"},{"Uniquefunname":"func chmodPath(path string, info os.FileInfo, mode os.FileMode, ownerIsUmask bool) error","Funname":"cgroup.chmodPath","Returntype":"error","Args":"path string, info os.FileInfo, mode os.FileMode, ownerIsUmask bool"},{"Uniquefunname":"func cgroup.chmodRecursiveController(path string, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool, ignoreList []string)error","Funname":"cgroup.chmodRecursiveController","Returntype":"error","Args":"path string, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool, ignoreList []string"},{"Uniquefunname":"func chown(filename string, owner, group int) error","Funname":"cgroup.chown","Returntype":"error","Args":"filename string, owner, group int"},{"Uniquefunname":"func chownRecursive(path string, owner, group int) error","Funname":"cgroup.chownRecursive","Returntype":"error","Args":"path string, owner, group int"},{"Uniquefunname":"func createControlGroup(path string) error","Funname":"cgroup.createControlGroup","Returntype":"error","Args":"path string"},{"Uniquefunname":"func cgroup.deleteCgroupController(cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags)(err error)","Funname":"cgroup.deleteCgroupController","Returntype":"(err error)","Args":"cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags"},{"Uniquefunname":"func cgroup.deleteCgroupControllerRecursive(cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags, deleteRoot bool)error","Funname":"cgroup.deleteCgroupControllerRecursive","Returntype":"error","Args":"cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags, deleteRoot bool"},{"Uniquefunname":"func getIntegers(name, controller, basename string) ([]int, error)","Funname":"cgroup.getIntegers","Returntype":"([]int, error)","Args":"name, controller, basename string"},{"Uniquefunname":"func getMountEntry(rd io.Reader) (*MountEntry, error)","Funname":"cgroup.getMountEntry","Returntype":"(*MountEntry, error)","Args":"rd io.Reader"},{"Uniquefunname":"func moveTaskFiles(inputTasksF, outputTasksF *os.File) error","Funname":"cgroup.moveTaskFiles","Returntype":"error","Args":"inputTasksF, outputTasksF *os.File"},{"Uniquefunname":"func panicIfNotInitialized()","Funname":"cgroup.panicIfNotInitialized","Returntype":"","Args":""},{"Uniquefunname":"func testMountedFs() bool","Funname":"cgroup.testMountedFs","Returntype":"bool","Args":""},{"Uniquefunname":"func testSubSysMounted(name string) bool","Funname":"cgroup.testSubSysMounted","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func chmodFile(filename string, info os.FileInfo, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool)error","Funname":"chmodFile","Returntype":"error","Args":"filename string, info os.FileInfo, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool"},{"Uniquefunname":"func chmodPath(path string, info os.FileInfo, mode os.FileMode, ownerIsUmask bool) error","Funname":"chmodPath","Returntype":"error","Args":"path string, info os.FileInfo, mode os.FileMode, ownerIsUmask bool"},{"Uniquefunname":"func chmodRecursiveController(path string, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool, ignoreList []string)error","Funname":"chmodRecursiveController","Returntype":"error","Args":"path string, dirMode os.FileMode, dirModeChange bool, fileMode os.FileMode, fileModeChange bool, ownerIsUmask bool, ignoreList []string"},{"Uniquefunname":"func chown(filename string, owner, group int) error","Funname":"chown","Returntype":"error","Args":"filename string, owner, group int"},{"Uniquefunname":"func chownRecursive(path string, owner, group int) error","Funname":"chownRecursive","Returntype":"error","Args":"path string, owner, group int"},{"Uniquefunname":"func createControlGroup(path string) error","Funname":"createControlGroup","Returntype":"error","Args":"path string"},{"Uniquefunname":"func deleteCgroupController(cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags)(err error)","Funname":"deleteCgroupController","Returntype":"(err error)","Args":"cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags"},{"Uniquefunname":"func deleteCgroupControllerRecursive(cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags, deleteRoot bool)error","Funname":"deleteCgroupControllerRecursive","Returntype":"error","Args":"cgroupName, controller string, targetTasksF *os.File, flags DeleteFlags, deleteRoot bool"},{"Uniquefunname":"func (c *Controller) exists() bool","Funname":"exists","Returntype":"bool","Args":""},{"Uniquefunname":"func (cg *Cgroup) findParent(controller string) (string, error)","Funname":"findParent","Returntype":"(string, error)","Args":"controller string"},{"Uniquefunname":"func (cg *Cgroup) getFirstControllerName() string","Funname":"getFirstControllerName","Returntype":"string","Args":""},{"Uniquefunname":"func getIntegers(name, controller, basename string) ([]int, error)","Funname":"getIntegers","Returntype":"([]int, error)","Args":"name, controller, basename string"},{"Uniquefunname":"func getMountEntry(rd io.Reader) (*MountEntry, error)","Funname":"getMountEntry","Returntype":"(*MountEntry, error)","Args":"rd io.Reader"},{"Uniquefunname":"func (cg *Cgroup) getParentName() string","Funname":"getParentName","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Controller) getValueFile(name string) string","Funname":"getValueFile","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (me *MountEntry) hasOpt(opt string) string","Funname":"hasOpt","Returntype":"string","Args":"opt string"},{"Uniquefunname":"func (cg *Cgroup) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func moveTaskFiles(inputTasksF, outputTasksF *os.File) error","Funname":"moveTaskFiles","Returntype":"error","Args":"inputTasksF, outputTasksF *os.File"},{"Uniquefunname":"func panicIfNotInitialized()","Funname":"panicIfNotInitialized","Returntype":"","Args":""},{"Uniquefunname":"func testMountedFs() bool","Funname":"testMountedFs","Returntype":"bool","Args":""},{"Uniquefunname":"func testSubSysMounted(name string) bool","Funname":"testSubSysMounted","Returntype":"bool","Args":"name string"}],"Records":[{"Name":"const:cgroup","Fields":["cgroup.Blkio","cgroup.Cpu","cgroup.Cpuacct","cgroup.Cpuset","cgroup.DeleteFlagEmptyOnly","cgroup.DeleteFlagIgnoreMigration","cgroup.DeleteFlagRecursive","cgroup.Devices","cgroup.Freezer","cgroup.Memory","cgroup.NetCLS","cgroup.NetPrio","cgroup.PerfEvent","cgroup.Pids","cgroup.noPerms","cgroup.noUidGid"]},{"Name":"struct:cgroup.Cgroup","Fields":["cgroup.Cgroup.controlDirPerm os.FileMode","cgroup.Cgroup.controlFilePerm os.FileMode","cgroup.Cgroup.controlGid int","cgroup.Cgroup.controlUid int","cgroup.Cgroup.controllers []*Controller","cgroup.Cgroup.name string","cgroup.Cgroup.tasksFilePerm os.FileMode","cgroup.Cgroup.tasksGid int","cgroup.Cgroup.tasksUid int"]},{"Name":"struct:cgroup.Controller","Fields":["cgroup.Controller.cgroup *Cgroup","cgroup.Controller.name string"]},{"Name":"struct:cgroup.ControllerInfo","Fields":["cgroup.ControllerInfo.enabled bool","cgroup.ControllerInfo.hierarchy int","cgroup.ControllerInfo.name string","cgroup.ControllerInfo.numCgroups int"]},{"Name":"var:cgroup","Fields":["cgroup.ErrCgroupNotMounted","cgroup.ErrInvalid","cgroup.ErrNonEmpty","cgroup.ErrSubSysNotMounted","cgroup.initialized","cgroup.logger","cgroup.mountTable"]},{"Name":"struct:cgroup.MountEntry","Fields":["cgroup.MountEntry.dir string","cgroup.MountEntry.freq int","cgroup.MountEntry.fsname string","cgroup.MountEntry.opts string","cgroup.MountEntry.passno int","cgroup.MountEntry.type0 string"]},{"Name":"struct:cgroup.MountTableItem","Fields":["cgroup.MountTableItem.mountPoints []string","cgroup.MountTableItem.name string"]}]}
{"Filepath":"dbusutil/dbusutil.go","Functions":[{"Uniquefunname":"func (pa *PropertyAccess) GetPID() (uint32, error)","Funname":"GetPID","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func (pa *PropertyAccess) GetUID() (uint32, error)","Funname":"GetUID","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func GetValueVariant(propRead *PropertyRead, signature dbus.Signature)(dbus.Variant, *dbus.Error)","Funname":"GetValueVariant","Returntype":"(dbus.Variant, *dbus.Error)","Args":"propRead *PropertyRead, signature dbus.Signature"},{"Uniquefunname":"func (p *fieldProp) SetValue(propWrite *PropertyWrite) (changed bool, err *dbus.Error)","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"propWrite *PropertyWrite"},{"Uniquefunname":"func (a accessType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (e emitType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (p *fieldProp) connectChanged(cb PropertyChangedCallback)","Funname":"connectChanged","Returntype":"","Args":"cb PropertyChangedCallback"},{"Uniquefunname":"func (pa *PropertyAccess) GetPID() (uint32, error)","Funname":"dbusutil.PropertyAccess.GetPID","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func (pa *PropertyAccess) GetUID() (uint32, error)","Funname":"dbusutil.PropertyAccess.GetUID","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func (a accessType) String() string","Funname":"dbusutil.accessType.String","Returntype":"string","Args":""},{"Uniquefunname":"func dbusutil.emitPropertiesChanged(conn *dbus.Conn, path dbus.ObjectPath, interfaceName string, propName string, value interface{}, emit emitType)(err error)","Funname":"dbusutil.emitPropertiesChanged","Returntype":"(err error)","Args":"conn *dbus.Conn, path dbus.ObjectPath, interfaceName string, propName string, value interface{}, emit emitType"},{"Uniquefunname":"func (e emitType) String() string","Funname":"dbusutil.emitType.String","Returntype":"string","Args":""},{"Uniquefunname":"func dbusutil.fieldProp.GetValueVariant(propRead *PropertyRead, signature dbus.Signature)(dbus.Variant, *dbus.Error)","Funname":"dbusutil.fieldProp.GetValueVariant","Returntype":"(dbus.Variant, *dbus.Error)","Args":"propRead *PropertyRead, signature dbus.Signature"},{"Uniquefunname":"func (p *fieldProp) SetValue(propWrite *PropertyWrite) (changed bool, err *dbus.Error)","Funname":"dbusutil.fieldProp.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"propWrite *PropertyWrite"},{"Uniquefunname":"func (p *fieldProp) connectChanged(cb PropertyChangedCallback)","Funname":"dbusutil.fieldProp.connectChanged","Returntype":"","Args":"cb PropertyChangedCallback"},{"Uniquefunname":"func (p *fieldProp) getReadCallback() PropertyReadCallback","Funname":"dbusutil.fieldProp.getReadCallback","Returntype":"PropertyReadCallback","Args":""},{"Uniquefunname":"func (p *fieldProp) getValue(propRead *PropertyRead) (value interface","Funname":"dbusutil.fieldProp.getValue","Returntype":"(value interface{}, err *dbus.Error)","Args":"propRead *PropertyRead"},{"Uniquefunname":"func (p *fieldProp) getWriteCallback() PropertyWriteCallback","Funname":"dbusutil.fieldProp.getWriteCallback","Returntype":"PropertyWriteCallback","Args":""},{"Uniquefunname":"func (p *fieldProp) notifyChanged(change *PropertyChanged)","Funname":"dbusutil.fieldProp.notifyChanged","Returntype":"","Args":"change *PropertyChanged"},{"Uniquefunname":"func (p *fieldProp) setReadCallback(cb PropertyReadCallback)","Funname":"dbusutil.fieldProp.setReadCallback","Returntype":"","Args":"cb PropertyReadCallback"},{"Uniquefunname":"func (p *fieldProp) setWriteCallback(cb PropertyWriteCallback)","Funname":"dbusutil.fieldProp.setWriteCallback","Returntype":"","Args":"cb PropertyWriteCallback"},{"Uniquefunname":"func getCorePropsMu(structValue reflect.Value) *sync.RWMutex","Funname":"dbusutil.getCorePropsMu","Returntype":"*sync.RWMutex","Args":"structValue reflect.Value"},{"Uniquefunname":"func dbusutil.getFieldPropMap(impl *implementer, implStatic *implementerStatic, structValue reflect.Value, s *Service, path dbus.ObjectPath)map[string]*fieldProp","Funname":"dbusutil.getFieldPropMap","Returntype":"map[string]*fieldProp","Args":"impl *implementer, implStatic *implementerStatic, structValue reflect.Value, s *Service, path dbus.ObjectPath"},{"Uniquefunname":"func dbusutil.getFieldPropStaticMap(structType reflect.Type, structValue reflect.Value)map[string]*fieldPropStatic","Funname":"dbusutil.getFieldPropStaticMap","Returntype":"map[string]*fieldPropStatic","Args":"structType reflect.Type, structValue reflect.Value"},{"Uniquefunname":"func getMethodDetailMap(structType reflect.Type) map[string]methodDetail","Funname":"dbusutil.getMethodDetailMap","Returntype":"map[string]methodDetail","Args":"structType reflect.Type"},{"Uniquefunname":"func getMethods(v interface","Funname":"dbusutil.getMethods","Returntype":"[]introspect.Method","Args":"v interface{}, methodDetailMap map[string]methodDetail"},{"Uniquefunname":"func getPropsIntrospection(props map[string]*fieldPropStatic) []introspect.Property","Funname":"dbusutil.getPropsIntrospection","Returntype":"[]introspect.Property","Args":"props map[string]*fieldPropStatic"},{"Uniquefunname":"func getSignals(structType reflect.Type) []introspect.Signal","Funname":"dbusutil.getSignals","Returntype":"[]introspect.Signal","Args":"structType reflect.Type"},{"Uniquefunname":"func getStructValue(m interface","Funname":"dbusutil.getStructValue","Returntype":"(reflect.Value, bool)","Args":"m interface{}"},{"Uniquefunname":"func init()","Funname":"dbusutil.init","Returntype":"","Args":""},{"Uniquefunname":"func (md methodDetail) getInArgName(index int, type0 reflect.Type, methodName string) string","Funname":"dbusutil.methodDetail.getInArgName","Returntype":"string","Args":"index int, type0 reflect.Type, methodName string"},{"Uniquefunname":"func (md methodDetail) getOutArgName(index int, type0 reflect.Type, methodName string) string","Funname":"dbusutil.methodDetail.getOutArgName","Returntype":"string","Args":"index int, type0 reflect.Type, methodName string"},{"Uniquefunname":"func dbusutil.newFieldPropStatic(field reflect.StructField, fieldValue reflect.Value, tag string)*fieldPropStatic","Funname":"dbusutil.newFieldPropStatic","Returntype":"*fieldPropStatic","Args":"field reflect.StructField, fieldValue reflect.Value, tag string"},{"Uniquefunname":"func dbusutil.newPropertyChanged(path dbus.ObjectPath, interfaceName, name string, value interface{})*PropertyChanged","Funname":"dbusutil.newPropertyChanged","Returntype":"*PropertyChanged","Args":"path dbus.ObjectPath, interfaceName, name string, value interface{}"},{"Uniquefunname":"func dbusutil.newPropertyRead(sender dbus.Sender, so *ServerObject, interfaceName, name string)*PropertyRead","Funname":"dbusutil.newPropertyRead","Returntype":"*PropertyRead","Args":"sender dbus.Sender, so *ServerObject, interfaceName, name string"},{"Uniquefunname":"func dbusutil.newPropertyWrite(sender dbus.Sender, so *ServerObject, interfaceName, name string, value interface{})*PropertyWrite","Funname":"dbusutil.newPropertyWrite","Returntype":"*PropertyWrite","Args":"sender dbus.Sender, so *ServerObject, interfaceName, name string, value interface{}"},{"Uniquefunname":"func parsePropTag(tag string) (accessType, emitType)","Funname":"dbusutil.parsePropTag","Returntype":"(accessType, emitType)","Args":"tag string"},{"Uniquefunname":"func splitArg(str string) (result []string)","Funname":"dbusutil.splitArg","Returntype":"(result []string)","Args":"str string"},{"Uniquefunname":"func toProperty(value reflect.Value) (Property, fieldPropValueType)","Funname":"dbusutil.toProperty","Returntype":"(Property, fieldPropValueType)","Args":"value reflect.Value"},{"Uniquefunname":"func valueFromBus(src interface","Funname":"dbusutil.valueFromBus","Returntype":"(reflect.Value, error)","Args":"src interface{}, valueRT reflect.Type"},{"Uniquefunname":"func emitPropertiesChanged(conn *dbus.Conn, path dbus.ObjectPath, interfaceName string, propName string, value interface{}, emit emitType)(err error)","Funname":"emitPropertiesChanged","Returntype":"(err error)","Args":"conn *dbus.Conn, path dbus.ObjectPath, interfaceName string, propName string, value interface{}, emit emitType"},{"Uniquefunname":"func getCorePropsMu(structValue reflect.Value) *sync.RWMutex","Funname":"getCorePropsMu","Returntype":"*sync.RWMutex","Args":"structValue reflect.Value"},{"Uniquefunname":"func getFieldPropMap(impl *implementer, implStatic *implementerStatic, structValue reflect.Value, s *Service, path dbus.ObjectPath)map[string]*fieldProp","Funname":"getFieldPropMap","Returntype":"map[string]*fieldProp","Args":"impl *implementer, implStatic *implementerStatic, structValue reflect.Value, s *Service, path dbus.ObjectPath"},{"Uniquefunname":"func getFieldPropStaticMap(structType reflect.Type, structValue reflect.Value)map[string]*fieldPropStatic","Funname":"getFieldPropStaticMap","Returntype":"map[string]*fieldPropStatic","Args":"structType reflect.Type, structValue reflect.Value"},{"Uniquefunname":"func (md methodDetail) getInArgName(index int, type0 reflect.Type, methodName string) string","Funname":"getInArgName","Returntype":"string","Args":"index int, type0 reflect.Type, methodName string"},{"Uniquefunname":"func getMethodDetailMap(structType reflect.Type) map[string]methodDetail","Funname":"getMethodDetailMap","Returntype":"map[string]methodDetail","Args":"structType reflect.Type"},{"Uniquefunname":"func getMethods(v interface","Funname":"getMethods","Returntype":"[]introspect.Method","Args":"v interface{}, methodDetailMap map[string]methodDetail"},{"Uniquefunname":"func (md methodDetail) getOutArgName(index int, type0 reflect.Type, methodName string) string","Funname":"getOutArgName","Returntype":"string","Args":"index int, type0 reflect.Type, methodName string"},{"Uniquefunname":"func getPropsIntrospection(props map[string]*fieldPropStatic) []introspect.Property","Funname":"getPropsIntrospection","Returntype":"[]introspect.Property","Args":"props map[string]*fieldPropStatic"},{"Uniquefunname":"func (p *fieldProp) getReadCallback() PropertyReadCallback","Funname":"getReadCallback","Returntype":"PropertyReadCallback","Args":""},{"Uniquefunname":"func getSignals(structType reflect.Type) []introspect.Signal","Funname":"getSignals","Returntype":"[]introspect.Signal","Args":"structType reflect.Type"},{"Uniquefunname":"func getStructValue(m interface","Funname":"getStructValue","Returntype":"(reflect.Value, bool)","Args":"m interface{}"},{"Uniquefunname":"func (p *fieldProp) getValue(propRead *PropertyRead) (value interface","Funname":"getValue","Returntype":"(value interface{}, err *dbus.Error)","Args":"propRead *PropertyRead"},{"Uniquefunname":"func (p *fieldProp) getWriteCallback() PropertyWriteCallback","Funname":"getWriteCallback","Returntype":"PropertyWriteCallback","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newFieldPropStatic(field reflect.StructField, fieldValue reflect.Value, tag string)*fieldPropStatic","Funname":"newFieldPropStatic","Returntype":"*fieldPropStatic","Args":"field reflect.StructField, fieldValue reflect.Value, tag string"},{"Uniquefunname":"func newPropertyChanged(path dbus.ObjectPath, interfaceName, name string, value interface{})*PropertyChanged","Funname":"newPropertyChanged","Returntype":"*PropertyChanged","Args":"path dbus.ObjectPath, interfaceName, name string, value interface{}"},{"Uniquefunname":"func newPropertyRead(sender dbus.Sender, so *ServerObject, interfaceName, name string)*PropertyRead","Funname":"newPropertyRead","Returntype":"*PropertyRead","Args":"sender dbus.Sender, so *ServerObject, interfaceName, name string"},{"Uniquefunname":"func newPropertyWrite(sender dbus.Sender, so *ServerObject, interfaceName, name string, value interface{})*PropertyWrite","Funname":"newPropertyWrite","Returntype":"*PropertyWrite","Args":"sender dbus.Sender, so *ServerObject, interfaceName, name string, value interface{}"},{"Uniquefunname":"func (p *fieldProp) notifyChanged(change *PropertyChanged)","Funname":"notifyChanged","Returntype":"","Args":"change *PropertyChanged"},{"Uniquefunname":"func parsePropTag(tag string) (accessType, emitType)","Funname":"parsePropTag","Returntype":"(accessType, emitType)","Args":"tag string"},{"Uniquefunname":"func (p *fieldProp) setReadCallback(cb PropertyReadCallback)","Funname":"setReadCallback","Returntype":"","Args":"cb PropertyReadCallback"},{"Uniquefunname":"func (p *fieldProp) setWriteCallback(cb PropertyWriteCallback)","Funname":"setWriteCallback","Returntype":"","Args":"cb PropertyWriteCallback"},{"Uniquefunname":"func splitArg(str string) (result []string)","Funname":"splitArg","Returntype":"(result []string)","Args":"str string"},{"Uniquefunname":"func toProperty(value reflect.Value) (Property, fieldPropValueType)","Funname":"toProperty","Returntype":"(Property, fieldPropValueType)","Args":"value reflect.Value"},{"Uniquefunname":"func valueFromBus(src interface","Funname":"valueFromBus","Returntype":"(reflect.Value, error)","Args":"src interface{}, valueRT reflect.Type"}],"Records":[{"Name":"interface","Fields":["dbusutil.Property"]},{"Name":"struct:dbusutil.PropertyAccess","Fields":["dbusutil.PropertyAccess.Sender dbus.Sender","dbusutil.PropertyAccess.service *Service"]},{"Name":"struct:dbusutil.PropertyChanged","Fields":["dbusutil.PropertyChanged.Value interface{}"]},{"Name":"struct:dbusutil.PropertyInfo","Fields":["dbusutil.PropertyInfo.Interface string","dbusutil.PropertyInfo.Name string","dbusutil.PropertyInfo.Path dbus.ObjectPath"]},{"Name":"struct:dbusutil.PropertyWrite","Fields":["dbusutil.PropertyWrite.Value interface{}"]},{"Name":"const:dbusutil","Fields":["dbusutil.accessRead","dbusutil.accessReadWrite","dbusutil.accessWrite","dbusutil.emitFalse","dbusutil.emitInvalidates","dbusutil.emitTrue","dbusutil.fieldPropValueImplProp","dbusutil.fieldPropValueNotProp","dbusutil.fieldPropValuePtrImplProp","dbusutil.orgFreedesktopDBus","dbusutil.propsMuField"]},{"Name":"struct:dbusutil.fieldProp","Fields":["dbusutil.fieldProp.cbMu sync.Mutex","dbusutil.fieldProp.changedCbs []PropertyChangedCallback","dbusutil.fieldProp.rValue reflect.Value","dbusutil.fieldProp.readCb PropertyReadCallback","dbusutil.fieldProp.valueMu *sync.RWMutex","dbusutil.fieldProp.writeCb PropertyWriteCallback"]},{"Name":"struct:dbusutil.fieldPropStatic","Fields":["dbusutil.fieldPropStatic.access accessType","dbusutil.fieldPropStatic.emit emitType","dbusutil.fieldPropStatic.hasStruct bool","dbusutil.fieldPropStatic.name string","dbusutil.fieldPropStatic.rType reflect.Type","dbusutil.fieldPropStatic.signature dbus.Signature","dbusutil.fieldPropStatic.valueType fieldPropValueType"]},{"Name":"var:dbusutil","Fields":["dbusutil.logger"]},{"Name":"struct:dbusutil.methodDetail","Fields":["dbusutil.methodDetail.In []string","dbusutil.methodDetail.Out []string"]}]}
{"Filepath":"dbusutil/err.go","Functions":[{"Uniquefunname":"func MakeError(v Implementer, name string, args ...interface","Funname":"MakeError","Returntype":"*dbus.Error","Args":"v Implementer, name string, args ...interface{}"},{"Uniquefunname":"func MakeErrorJSON(v Implementer, name string, detail interface","Funname":"MakeErrorJSON","Returntype":"*dbus.Error","Args":"v Implementer, name string, detail interface{}"},{"Uniquefunname":"func MakeErrorf(v Implementer, name, format string, args ...interface","Funname":"MakeErrorf","Returntype":"*dbus.Error","Args":"v Implementer, name, format string, args ...interface{}"},{"Uniquefunname":"func ToError(err error) *dbus.Error","Funname":"ToError","Returntype":"*dbus.Error","Args":"err error"},{"Uniquefunname":"func MakeError(v Implementer, name string, args ...interface","Funname":"dbusutil.MakeError","Returntype":"*dbus.Error","Args":"v Implementer, name string, args ...interface{}"},{"Uniquefunname":"func MakeErrorJSON(v Implementer, name string, detail interface","Funname":"dbusutil.MakeErrorJSON","Returntype":"*dbus.Error","Args":"v Implementer, name string, detail interface{}"},{"Uniquefunname":"func MakeErrorf(v Implementer, name, format string, args ...interface","Funname":"dbusutil.MakeErrorf","Returntype":"*dbus.Error","Args":"v Implementer, name, format string, args ...interface{}"},{"Uniquefunname":"func ToError(err error) *dbus.Error","Funname":"dbusutil.ToError","Returntype":"*dbus.Error","Args":"err error"}],"Records":[{"Name":"interface","Fields":["dbusutil.DBusError"]}]}
{"Filepath":"dbusutil/err_test.go","Functions":[{"Uniquefunname":"func (err namedError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err unnamedError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (*impl1) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (err namedError) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func TestMakeError(t *testing.T)","Funname":"TestMakeError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMakeErrorJSON(t *testing.T)","Funname":"TestMakeErrorJSON","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMakeErrorf(t *testing.T)","Funname":"TestMakeErrorf","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestToError(t *testing.T)","Funname":"TestToError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMakeError(t *testing.T)","Funname":"dbusutil.TestMakeError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMakeErrorJSON(t *testing.T)","Funname":"dbusutil.TestMakeErrorJSON","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMakeErrorf(t *testing.T)","Funname":"dbusutil.TestMakeErrorf","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestToError(t *testing.T)","Funname":"dbusutil.TestToError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*impl1) GetInterfaceName() string","Funname":"dbusutil.impl1.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (err namedError) Error() string","Funname":"dbusutil.namedError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err namedError) Name() string","Funname":"dbusutil.namedError.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (err unnamedError) Error() string","Funname":"dbusutil.unnamedError.Error","Returntype":"string","Args":""}],"Records":null}
{"Filepath":"dbusutil/implementer_static.go","Functions":[{"Uniquefunname":"func (is *implementerStatic) checkProperty(propName string) error","Funname":"checkProperty","Returntype":"error","Args":"propName string"},{"Uniquefunname":"func (is *implementerStatic) checkPropertyValue(propName string, value interface","Funname":"checkPropertyValue","Returntype":"error","Args":"propName string, value interface{}"},{"Uniquefunname":"func (is *implementerStatic) checkProperty(propName string) error","Funname":"dbusutil.implementerStatic.checkProperty","Returntype":"error","Args":"propName string"},{"Uniquefunname":"func (is *implementerStatic) checkPropertyValue(propName string, value interface","Funname":"dbusutil.implementerStatic.checkPropertyValue","Returntype":"error","Args":"propName string, value interface{}"},{"Uniquefunname":"func newImplementerStatic(impl Implementer, structValue reflect.Value) *implementerStatic","Funname":"dbusutil.newImplementerStatic","Returntype":"*implementerStatic","Args":"impl Implementer, structValue reflect.Value"},{"Uniquefunname":"func newImplementerStatic(impl Implementer, structValue reflect.Value) *implementerStatic","Funname":"newImplementerStatic","Returntype":"*implementerStatic","Args":"impl Implementer, structValue reflect.Value"}],"Records":[{"Name":"struct:dbusutil.implementerStatic","Fields":["dbusutil.implementerStatic.introspectInterface introspect.Interface","dbusutil.implementerStatic.props map[string]*fieldPropStatic"]}]}
{"Filepath":"dbusutil/implementor.go","Functions":[{"Uniquefunname":"func (impl *implementer) connectChanged(propertyName string, cb PropertyChangedCallback) error","Funname":"connectChanged","Returntype":"error","Args":"propertyName string, cb PropertyChangedCallback"},{"Uniquefunname":"func getImplementerPointer(impl Implementer) unsafe.Pointer","Funname":"dbusutil.getImplementerPointer","Returntype":"unsafe.Pointer","Args":"impl Implementer"},{"Uniquefunname":"func (impl *implementer) connectChanged(propertyName string, cb PropertyChangedCallback) error","Funname":"dbusutil.implementer.connectChanged","Returntype":"error","Args":"propertyName string, cb PropertyChangedCallback"},{"Uniquefunname":"func (impl *implementer) delayEmitPropChanged()","Funname":"dbusutil.implementer.delayEmitPropChanged","Returntype":"","Args":""},{"Uniquefunname":"func dbusutil.implementer.emitPropChanged(s *Service, path dbus.ObjectPath, propName string, value interface{})(err error)","Funname":"dbusutil.implementer.emitPropChanged","Returntype":"(err error)","Args":"s *Service, path dbus.ObjectPath, propName string, value interface{}"},{"Uniquefunname":"func (impl *implementer) getInterfaceName() string","Funname":"dbusutil.implementer.getInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (impl *implementer) getStatic(s *Service) *implementerStatic","Funname":"dbusutil.implementer.getStatic","Returntype":"*implementerStatic","Args":"s *Service"},{"Uniquefunname":"func dbusutil.implementer.notifyChanged(s *Service, path dbus.ObjectPath, p *fieldProp, propStatic *fieldPropStatic, value interface{})","Funname":"dbusutil.implementer.notifyChanged","Returntype":"","Args":"s *Service, path dbus.ObjectPath, p *fieldProp, propStatic *fieldPropStatic, value interface{}"},{"Uniquefunname":"func (impl *implementer) setReadCallback(propertyName string, cb PropertyReadCallback) error","Funname":"dbusutil.implementer.setReadCallback","Returntype":"error","Args":"propertyName string, cb PropertyReadCallback"},{"Uniquefunname":"func (impl *implementer) setWriteCallback(propertyName string, cb PropertyWriteCallback) error","Funname":"dbusutil.implementer.setWriteCallback","Returntype":"error","Args":"propertyName string, cb PropertyWriteCallback"},{"Uniquefunname":"func dbusutil.implementer.stopDelayEmitPropChanged(s *Service, path dbus.ObjectPath)(err error)","Funname":"dbusutil.implementer.stopDelayEmitPropChanged","Returntype":"(err error)","Args":"s *Service, path dbus.ObjectPath"},{"Uniquefunname":"func dbusutil.newImplementer(core Implementer, service *Service, path dbus.ObjectPath)(*implementer, error)","Funname":"dbusutil.newImplementer","Returntype":"(*implementer, error)","Args":"core Implementer, service *Service, path dbus.ObjectPath"},{"Uniquefunname":"func (impl *implementer) delayEmitPropChanged()","Funname":"delayEmitPropChanged","Returntype":"","Args":""},{"Uniquefunname":"func emitPropChanged(s *Service, path dbus.ObjectPath, propName string, value interface{})(err error)","Funname":"emitPropChanged","Returntype":"(err error)","Args":"s *Service, path dbus.ObjectPath, propName string, value interface{}"},{"Uniquefunname":"func getImplementerPointer(impl Implementer) unsafe.Pointer","Funname":"getImplementerPointer","Returntype":"unsafe.Pointer","Args":"impl Implementer"},{"Uniquefunname":"func (impl *implementer) getInterfaceName() string","Funname":"getInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (impl *implementer) getStatic(s *Service) *implementerStatic","Funname":"getStatic","Returntype":"*implementerStatic","Args":"s *Service"},{"Uniquefunname":"func newImplementer(core Implementer, service *Service, path dbus.ObjectPath)(*implementer, error)","Funname":"newImplementer","Returntype":"(*implementer, error)","Args":"core Implementer, service *Service, path dbus.ObjectPath"},{"Uniquefunname":"func notifyChanged(s *Service, path dbus.ObjectPath, p *fieldProp, propStatic *fieldPropStatic, value interface{})","Funname":"notifyChanged","Returntype":"","Args":"s *Service, path dbus.ObjectPath, p *fieldProp, propStatic *fieldPropStatic, value interface{}"},{"Uniquefunname":"func (impl *implementer) setReadCallback(propertyName string, cb PropertyReadCallback) error","Funname":"setReadCallback","Returntype":"error","Args":"propertyName string, cb PropertyReadCallback"},{"Uniquefunname":"func (impl *implementer) setWriteCallback(propertyName string, cb PropertyWriteCallback) error","Funname":"setWriteCallback","Returntype":"error","Args":"propertyName string, cb PropertyWriteCallback"},{"Uniquefunname":"func stopDelayEmitPropChanged(s *Service, path dbus.ObjectPath)(err error)","Funname":"stopDelayEmitPropChanged","Returntype":"(err error)","Args":"s *Service, path dbus.ObjectPath"}],"Records":[{"Name":"interface","Fields":["dbusutil.Implementer"]},{"Name":"struct:dbusutil.implPropChanged","Fields":["dbusutil.implPropChanged.name string","dbusutil.implPropChanged.value interface{}"]},{"Name":"struct:dbusutil.implementer","Fields":["dbusutil.implementer.core Implementer","dbusutil.implementer.propChanges propChanges","dbusutil.implementer.props map[string]*fieldProp"]},{"Name":"struct:dbusutil.propChanges","Fields":["dbusutil.propChanges.delayMode bool","dbusutil.propChanges.items []implPropChanged","dbusutil.propChanges.modeMu sync.Mutex","dbusutil.propChanges.mu sync.Mutex"]}]}
{"Filepath":"dbusutil/introspectable.go","Functions":[{"Uniquefunname":"func (so *ServerObject) getChildren() (children strv.Strv)","Funname":"dbusutil.ServerObject.getChildren","Returntype":"(children strv.Strv)","Args":""},{"Uniquefunname":"func (so *ServerObject) getInterfaces() []introspect.Interface","Funname":"dbusutil.ServerObject.getInterfaces","Returntype":"[]introspect.Interface","Args":""},{"Uniquefunname":"func (so *ServerObject) introspectableIntrospect() (string, *dbus.Error)","Funname":"dbusutil.ServerObject.introspectableIntrospect","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (so *ServerObject) getChildren() (children strv.Strv)","Funname":"getChildren","Returntype":"(children strv.Strv)","Args":""},{"Uniquefunname":"func (so *ServerObject) getInterfaces() []introspect.Interface","Funname":"getInterfaces","Returntype":"[]introspect.Interface","Args":""},{"Uniquefunname":"func (so *ServerObject) introspectableIntrospect() (string, *dbus.Error)","Funname":"introspectableIntrospect","Returntype":"(string, *dbus.Error)","Args":""}],"Records":[{"Name":"var:dbusutil","Fields":["dbusutil.peerIntrospectData"]}]}
{"Filepath":"dbusutil/match_rule.go","Functions":[{"Uniquefunname":"func (mr MatchRule) AddTo(conn *dbus.Conn) error","Funname":"AddTo","Returntype":"error","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (b *MatchRuleBuilder) Arg(idx int, value string) *MatchRuleBuilder","Funname":"Arg","Returntype":"*MatchRuleBuilder","Args":"idx int, value string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ArgNamespace(idx int, namespace string) *MatchRuleBuilder","Funname":"ArgNamespace","Returntype":"*MatchRuleBuilder","Args":"idx int, namespace string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ArgPath(idx int, path string) *MatchRuleBuilder","Funname":"ArgPath","Returntype":"*MatchRuleBuilder","Args":"idx int, path string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Build() MatchRule","Funname":"Build","Returntype":"MatchRule","Args":""},{"Uniquefunname":"func (b *MatchRuleBuilder) BuildStr() string","Funname":"BuildStr","Returntype":"string","Args":""},{"Uniquefunname":"func (b *MatchRuleBuilder) Destination(destination string) *MatchRuleBuilder","Funname":"Destination","Returntype":"*MatchRuleBuilder","Args":"destination string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Eavesdrop(eavesdrop bool) *MatchRuleBuilder","Funname":"Eavesdrop","Returntype":"*MatchRuleBuilder","Args":"eavesdrop bool"},{"Uniquefunname":"func (b *MatchRuleBuilder) ExtPropertiesChanged(path, interfaceName string) *MatchRuleBuilder","Funname":"ExtPropertiesChanged","Returntype":"*MatchRuleBuilder","Args":"path, interfaceName string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ExtSignal(path, interfaceName, name string) *MatchRuleBuilder","Funname":"ExtSignal","Returntype":"*MatchRuleBuilder","Args":"path, interfaceName, name string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Interface(interface0 string) *MatchRuleBuilder","Funname":"Interface","Returntype":"*MatchRuleBuilder","Args":"interface0 string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Member(member string) *MatchRuleBuilder","Funname":"Member","Returntype":"*MatchRuleBuilder","Args":"member string"},{"Uniquefunname":"func NewMatchRuleBuilder() *MatchRuleBuilder","Funname":"NewMatchRuleBuilder","Returntype":"*MatchRuleBuilder","Args":""},{"Uniquefunname":"func (b *MatchRuleBuilder) Path(path string) *MatchRuleBuilder","Funname":"Path","Returntype":"*MatchRuleBuilder","Args":"path string"},{"Uniquefunname":"func (b *MatchRuleBuilder) PathNamespace(pathNamespace string) *MatchRuleBuilder","Funname":"PathNamespace","Returntype":"*MatchRuleBuilder","Args":"pathNamespace string"},{"Uniquefunname":"func (mr MatchRule) RemoveFrom(conn *dbus.Conn) error","Funname":"RemoveFrom","Returntype":"error","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (b *MatchRuleBuilder) Sender(sender string) *MatchRuleBuilder","Funname":"Sender","Returntype":"*MatchRuleBuilder","Args":"sender string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Type(type0 string) *MatchRuleBuilder","Funname":"Type","Returntype":"*MatchRuleBuilder","Args":"type0 string"},{"Uniquefunname":"func (b *MatchRuleBuilder) addItem(k, v string)","Funname":"addItem","Returntype":"","Args":"k, v string"},{"Uniquefunname":"func (mr MatchRule) AddTo(conn *dbus.Conn) error","Funname":"dbusutil.MatchRule.AddTo","Returntype":"error","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (mr MatchRule) RemoveFrom(conn *dbus.Conn) error","Funname":"dbusutil.MatchRule.RemoveFrom","Returntype":"error","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (b *MatchRuleBuilder) Arg(idx int, value string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Arg","Returntype":"*MatchRuleBuilder","Args":"idx int, value string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ArgNamespace(idx int, namespace string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.ArgNamespace","Returntype":"*MatchRuleBuilder","Args":"idx int, namespace string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ArgPath(idx int, path string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.ArgPath","Returntype":"*MatchRuleBuilder","Args":"idx int, path string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Build() MatchRule","Funname":"dbusutil.MatchRuleBuilder.Build","Returntype":"MatchRule","Args":""},{"Uniquefunname":"func (b *MatchRuleBuilder) BuildStr() string","Funname":"dbusutil.MatchRuleBuilder.BuildStr","Returntype":"string","Args":""},{"Uniquefunname":"func (b *MatchRuleBuilder) Destination(destination string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Destination","Returntype":"*MatchRuleBuilder","Args":"destination string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Eavesdrop(eavesdrop bool) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Eavesdrop","Returntype":"*MatchRuleBuilder","Args":"eavesdrop bool"},{"Uniquefunname":"func (b *MatchRuleBuilder) ExtPropertiesChanged(path, interfaceName string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.ExtPropertiesChanged","Returntype":"*MatchRuleBuilder","Args":"path, interfaceName string"},{"Uniquefunname":"func (b *MatchRuleBuilder) ExtSignal(path, interfaceName, name string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.ExtSignal","Returntype":"*MatchRuleBuilder","Args":"path, interfaceName, name string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Interface(interface0 string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Interface","Returntype":"*MatchRuleBuilder","Args":"interface0 string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Member(member string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Member","Returntype":"*MatchRuleBuilder","Args":"member string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Path(path string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Path","Returntype":"*MatchRuleBuilder","Args":"path string"},{"Uniquefunname":"func (b *MatchRuleBuilder) PathNamespace(pathNamespace string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.PathNamespace","Returntype":"*MatchRuleBuilder","Args":"pathNamespace string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Sender(sender string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Sender","Returntype":"*MatchRuleBuilder","Args":"sender string"},{"Uniquefunname":"func (b *MatchRuleBuilder) Type(type0 string) *MatchRuleBuilder","Funname":"dbusutil.MatchRuleBuilder.Type","Returntype":"*MatchRuleBuilder","Args":"type0 string"},{"Uniquefunname":"func (b *MatchRuleBuilder) addItem(k, v string)","Funname":"dbusutil.MatchRuleBuilder.addItem","Returntype":"","Args":"k, v string"},{"Uniquefunname":"func NewMatchRuleBuilder() *MatchRuleBuilder","Funname":"dbusutil.NewMatchRuleBuilder","Returntype":"*MatchRuleBuilder","Args":""}],"Records":[{"Name":"struct:dbusutil.MatchRule","Fields":["dbusutil.MatchRule.Str string"]},{"Name":"struct:dbusutil.MatchRuleBuilder","Fields":["dbusutil.MatchRuleBuilder.items []matchRuleItem"]},{"Name":"struct:dbusutil.matchRuleItem","Fields":["dbusutil.matchRuleItem.key string","dbusutil.matchRuleItem.value string"]}]}
{"Filepath":"dbusutil/match_rule_test.go","Functions":[{"Uniquefunname":"func TestMatchRuleBuilder(t *testing.T)","Funname":"TestMatchRuleBuilder","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMatchRuleBuilder(t *testing.T)","Funname":"dbusutil.TestMatchRuleBuilder","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dbusutil/object.go","Functions":[{"Uniquefunname":"func ConnectChanged(v Implementer, propertyName string, cb PropertyChangedCallback)error","Funname":"ConnectChanged","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyChangedCallback"},{"Uniquefunname":"func (so *ServerObject) Export() error","Funname":"Export","Returntype":"error","Args":""},{"Uniquefunname":"func (so *ServerObject) Path() dbus.ObjectPath","Funname":"Path","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func SetReadCallback(v Implementer, propertyName string, cb PropertyReadCallback)error","Funname":"SetReadCallback","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyReadCallback"},{"Uniquefunname":"func SetWriteCallback(v Implementer, propertyName string, cb PropertyWriteCallback)error","Funname":"SetWriteCallback","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyWriteCallback"},{"Uniquefunname":"func (so *ServerObject) StopExport() error","Funname":"StopExport","Returntype":"error","Args":""},{"Uniquefunname":"func dbusutil.ServerObject.ConnectChanged(v Implementer, propertyName string, cb PropertyChangedCallback)error","Funname":"dbusutil.ServerObject.ConnectChanged","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyChangedCallback"},{"Uniquefunname":"func (so *ServerObject) Export() error","Funname":"dbusutil.ServerObject.Export","Returntype":"error","Args":""},{"Uniquefunname":"func (so *ServerObject) Path() dbus.ObjectPath","Funname":"dbusutil.ServerObject.Path","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func dbusutil.ServerObject.SetReadCallback(v Implementer, propertyName string, cb PropertyReadCallback)error","Funname":"dbusutil.ServerObject.SetReadCallback","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyReadCallback"},{"Uniquefunname":"func dbusutil.ServerObject.SetWriteCallback(v Implementer, propertyName string, cb PropertyWriteCallback)error","Funname":"dbusutil.ServerObject.SetWriteCallback","Returntype":"error","Args":"v Implementer, propertyName string, cb PropertyWriteCallback"},{"Uniquefunname":"func (so *ServerObject) StopExport() error","Funname":"dbusutil.ServerObject.StopExport","Returntype":"error","Args":""},{"Uniquefunname":"func (so *ServerObject) getImplementer(interfaceName string) *implementer","Funname":"dbusutil.ServerObject.getImplementer","Returntype":"*implementer","Args":"interfaceName string"},{"Uniquefunname":"func (so *ServerObject) getImplementer(interfaceName string) *implementer","Funname":"getImplementer","Returntype":"*implementer","Args":"interfaceName string"}],"Records":[{"Name":"struct:dbusutil.ServerObject","Fields":["dbusutil.ServerObject.implementers []*implementer","dbusutil.ServerObject.path dbus.ObjectPath","dbusutil.ServerObject.service *Service"]}]}
{"Filepath":"dbusutil/properties.go","Functions":[{"Uniquefunname":"func dbusutil.ServerObject.propertiesGet(sender dbus.Sender, interfaceName, propertyName string)(dbus.Variant, *dbus.Error)","Funname":"dbusutil.ServerObject.propertiesGet","Returntype":"(dbus.Variant, *dbus.Error)","Args":"sender dbus.Sender, interfaceName, propertyName string"},{"Uniquefunname":"func dbusutil.ServerObject.propertiesGetAll(sender dbus.Sender, interfaceName string)(map[string]dbus.Variant, *dbus.Error)","Funname":"dbusutil.ServerObject.propertiesGetAll","Returntype":"(map[string]dbus.Variant, *dbus.Error)","Args":"sender dbus.Sender, interfaceName string"},{"Uniquefunname":"func dbusutil.ServerObject.propertiesSet(sender dbus.Sender, interfaceName, propertyName string, newVar dbus.Variant)*dbus.Error","Funname":"dbusutil.ServerObject.propertiesSet","Returntype":"*dbus.Error","Args":"sender dbus.Sender, interfaceName, propertyName string, newVar dbus.Variant"},{"Uniquefunname":"func propertiesGet(sender dbus.Sender, interfaceName, propertyName string)(dbus.Variant, *dbus.Error)","Funname":"propertiesGet","Returntype":"(dbus.Variant, *dbus.Error)","Args":"sender dbus.Sender, interfaceName, propertyName string"},{"Uniquefunname":"func propertiesGetAll(sender dbus.Sender, interfaceName string)(map[string]dbus.Variant, *dbus.Error)","Funname":"propertiesGetAll","Returntype":"(map[string]dbus.Variant, *dbus.Error)","Args":"sender dbus.Sender, interfaceName string"},{"Uniquefunname":"func propertiesSet(sender dbus.Sender, interfaceName, propertyName string, newVar dbus.Variant)*dbus.Error","Funname":"propertiesSet","Returntype":"*dbus.Error","Args":"sender dbus.Sender, interfaceName, propertyName string, newVar dbus.Variant"}],"Records":null}
{"Filepath":"dbusutil/service.go","Functions":[{"Uniquefunname":"func (s *Service) Conn() *dbus.Conn","Funname":"Conn","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func (s *Service) DelayAutoQuit()","Funname":"DelayAutoQuit","Returntype":"","Args":""},{"Uniquefunname":"func (s *Service) DelayEmitPropertyChanged(v Implementer) func() error","Funname":"DelayEmitPropertyChanged","Returntype":"func() error","Args":"v Implementer"},{"Uniquefunname":"func (s *Service) DumpProperties(v Implementer) (string, error)","Funname":"DumpProperties","Returntype":"(string, error)","Args":"v Implementer"},{"Uniquefunname":"func (s *Service) Emit(v Implementer, signalName string, values ...interface","Funname":"Emit","Returntype":"error","Args":"v Implementer, signalName string, values ...interface{}"},{"Uniquefunname":"func EmitPropertiesChanged(v Implementer, propValMap map[string]interface{}, invalidatedProps ...string)error","Funname":"EmitPropertiesChanged","Returntype":"error","Args":"v Implementer, propValMap map[string]interface{}, invalidatedProps ...string"},{"Uniquefunname":"func EmitPropertyChanged(v Implementer, propertyName string, value interface{})error","Funname":"EmitPropertyChanged","Returntype":"error","Args":"v Implementer, propertyName string, value interface{}"},{"Uniquefunname":"func (s *Service) Export(path dbus.ObjectPath, implements ...Implementer) error","Funname":"Export","Returntype":"error","Args":"path dbus.ObjectPath, implements ...Implementer"},{"Uniquefunname":"func (s *Service) GetConnPID(name string) (pid uint32, err error)","Funname":"GetConnPID","Returntype":"(pid uint32, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetConnUID(name string) (uid uint32, err error)","Funname":"GetConnUID","Returntype":"(uid uint32, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetNameOwner(name string) (owner string, err error)","Funname":"GetNameOwner","Returntype":"(owner string, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetServerObject(impl Implementer) *ServerObject","Funname":"GetServerObject","Returntype":"*ServerObject","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) GetServerObjectByPath(path dbus.ObjectPath) *ServerObject","Funname":"GetServerObjectByPath","Returntype":"*ServerObject","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (s *Service) IsExported(impl Implementer) bool","Funname":"IsExported","Returntype":"bool","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) NameHasOwner(name string) (hasOwner bool, err error)","Funname":"NameHasOwner","Returntype":"(hasOwner bool, err error)","Args":"name string"},{"Uniquefunname":"func NewServerObject(path dbus.ObjectPath, implementers ...Implementer)(*ServerObject, error)","Funname":"NewServerObject","Returntype":"(*ServerObject, error)","Args":"path dbus.ObjectPath, implementers ...Implementer"},{"Uniquefunname":"func NewService(conn *dbus.Conn) *Service","Funname":"NewService","Returntype":"*Service","Args":"conn *dbus.Conn"},{"Uniquefunname":"func NewSessionService() (*Service, error)","Funname":"NewSessionService","Returntype":"(*Service, error)","Args":""},{"Uniquefunname":"func NewSystemService() (*Service, error)","Funname":"NewSystemService","Returntype":"(*Service, error)","Args":""},{"Uniquefunname":"func (s *Service) Quit()","Funname":"Quit","Returntype":"","Args":""},{"Uniquefunname":"func (s *Service) ReleaseName(name string) error","Funname":"ReleaseName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (s *Service) RequestName(name string) error","Funname":"RequestName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (s *Service) SetAutoQuitHandler(interval time.Duration, canQuit func() bool)","Funname":"SetAutoQuitHandler","Returntype":"","Args":"interval time.Duration, canQuit func() bool"},{"Uniquefunname":"func (s *Service) StopExport(impl Implementer) error","Funname":"StopExport","Returntype":"error","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) StopExportByPath(path dbus.ObjectPath) error","Funname":"StopExportByPath","Returntype":"error","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (s *Service) Wait()","Funname":"Wait","Returntype":"","Args":""},{"Uniquefunname":"func NewService(conn *dbus.Conn) *Service","Funname":"dbusutil.NewService","Returntype":"*Service","Args":"conn *dbus.Conn"},{"Uniquefunname":"func NewSessionService() (*Service, error)","Funname":"dbusutil.NewSessionService","Returntype":"(*Service, error)","Args":""},{"Uniquefunname":"func NewSystemService() (*Service, error)","Funname":"dbusutil.NewSystemService","Returntype":"(*Service, error)","Args":""},{"Uniquefunname":"func (s *Service) Conn() *dbus.Conn","Funname":"dbusutil.Service.Conn","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func (s *Service) DelayAutoQuit()","Funname":"dbusutil.Service.DelayAutoQuit","Returntype":"","Args":""},{"Uniquefunname":"func (s *Service) DelayEmitPropertyChanged(v Implementer) func() error","Funname":"dbusutil.Service.DelayEmitPropertyChanged","Returntype":"func() error","Args":"v Implementer"},{"Uniquefunname":"func (s *Service) DumpProperties(v Implementer) (string, error)","Funname":"dbusutil.Service.DumpProperties","Returntype":"(string, error)","Args":"v Implementer"},{"Uniquefunname":"func (s *Service) Emit(v Implementer, signalName string, values ...interface","Funname":"dbusutil.Service.Emit","Returntype":"error","Args":"v Implementer, signalName string, values ...interface{}"},{"Uniquefunname":"func dbusutil.Service.EmitPropertiesChanged(v Implementer, propValMap map[string]interface{}, invalidatedProps ...string)error","Funname":"dbusutil.Service.EmitPropertiesChanged","Returntype":"error","Args":"v Implementer, propValMap map[string]interface{}, invalidatedProps ...string"},{"Uniquefunname":"func dbusutil.Service.EmitPropertyChanged(v Implementer, propertyName string, value interface{})error","Funname":"dbusutil.Service.EmitPropertyChanged","Returntype":"error","Args":"v Implementer, propertyName string, value interface{}"},{"Uniquefunname":"func (s *Service) Export(path dbus.ObjectPath, implements ...Implementer) error","Funname":"dbusutil.Service.Export","Returntype":"error","Args":"path dbus.ObjectPath, implements ...Implementer"},{"Uniquefunname":"func (s *Service) GetConnPID(name string) (pid uint32, err error)","Funname":"dbusutil.Service.GetConnPID","Returntype":"(pid uint32, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetConnUID(name string) (uid uint32, err error)","Funname":"dbusutil.Service.GetConnUID","Returntype":"(uid uint32, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetNameOwner(name string) (owner string, err error)","Funname":"dbusutil.Service.GetNameOwner","Returntype":"(owner string, err error)","Args":"name string"},{"Uniquefunname":"func (s *Service) GetServerObject(impl Implementer) *ServerObject","Funname":"dbusutil.Service.GetServerObject","Returntype":"*ServerObject","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) GetServerObjectByPath(path dbus.ObjectPath) *ServerObject","Funname":"dbusutil.Service.GetServerObjectByPath","Returntype":"*ServerObject","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (s *Service) IsExported(impl Implementer) bool","Funname":"dbusutil.Service.IsExported","Returntype":"bool","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) NameHasOwner(name string) (hasOwner bool, err error)","Funname":"dbusutil.Service.NameHasOwner","Returntype":"(hasOwner bool, err error)","Args":"name string"},{"Uniquefunname":"func dbusutil.Service.NewServerObject(path dbus.ObjectPath, implementers ...Implementer)(*ServerObject, error)","Funname":"dbusutil.Service.NewServerObject","Returntype":"(*ServerObject, error)","Args":"path dbus.ObjectPath, implementers ...Implementer"},{"Uniquefunname":"func (s *Service) Quit()","Funname":"dbusutil.Service.Quit","Returntype":"","Args":""},{"Uniquefunname":"func (s *Service) ReleaseName(name string) error","Funname":"dbusutil.Service.ReleaseName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (s *Service) RequestName(name string) error","Funname":"dbusutil.Service.RequestName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (s *Service) SetAutoQuitHandler(interval time.Duration, canQuit func() bool)","Funname":"dbusutil.Service.SetAutoQuitHandler","Returntype":"","Args":"interval time.Duration, canQuit func() bool"},{"Uniquefunname":"func (s *Service) StopExport(impl Implementer) error","Funname":"dbusutil.Service.StopExport","Returntype":"error","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) StopExportByPath(path dbus.ObjectPath) error","Funname":"dbusutil.Service.StopExportByPath","Returntype":"error","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (s *Service) Wait()","Funname":"dbusutil.Service.Wait","Returntype":"","Args":""},{"Uniquefunname":"func (s *Service) getImplementerStatic(impl Implementer) *implementerStatic","Funname":"dbusutil.Service.getImplementerStatic","Returntype":"*implementerStatic","Args":"impl Implementer"},{"Uniquefunname":"func (s *Service) getImplementerStatic(impl Implementer) *implementerStatic","Funname":"getImplementerStatic","Returntype":"*implementerStatic","Args":"impl Implementer"}],"Records":[{"Name":"struct:dbusutil.Service","Fields":["dbusutil.Service.canQuit func() bool","dbusutil.Service.conn *dbus.Conn","dbusutil.Service.hasCall bool","dbusutil.Service.implObjMap map[unsafe.Pointer]*ServerObject","dbusutil.Service.implStaticMap map[string]*implementerStatic","dbusutil.Service.mu sync.RWMutex","dbusutil.Service.objMap map[dbus.ObjectPath]*ServerObject","dbusutil.Service.quit chan struct{}","dbusutil.Service.quitCheckInterval time.Duration"]}]}
{"Filepath":"dbusutil/service_test.go","Functions":[{"Uniquefunname":"func (*srvObject1) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject10) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject11) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject13) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject2) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject3) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject4) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject5) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject6) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject7) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject8) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject9) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (srvObject12) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (srvString) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (cp *customProperty) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (cp *customProperty) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (*srvObject1) Method1() (int, *dbus.Error)","Funname":"Method1","Returntype":"(int, *dbus.Error)","Args":""},{"Uniquefunname":"func (obj *srvObject5) Method1() *dbus.Error","Funname":"Method1","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (*customProperty) SetNotifyChangedFunc(func(val interface","Funname":"SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (*customProperty) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func TestService_AutoQuit(t *testing.T)","Funname":"TestService_AutoQuit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_ConnectChanged(t *testing.T)","Funname":"TestService_ConnectChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_DumpProperties(t *testing.T)","Funname":"TestService_DumpProperties","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_Emit(t *testing.T)","Funname":"TestService_Emit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_EmitPropertiesChanged(t *testing.T)","Funname":"TestService_EmitPropertiesChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_EmitPropertyChanged(t *testing.T)","Funname":"TestService_EmitPropertyChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_Export(t *testing.T)","Funname":"TestService_Export","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_GetConnPIDAndUID(t *testing.T)","Funname":"TestService_GetConnPIDAndUID","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_GetNameOwner(t *testing.T)","Funname":"TestService_GetNameOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_IntUintProp(t *testing.T)","Funname":"TestService_IntUintProp","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_NameHasOwner(t *testing.T)","Funname":"TestService_NameHasOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_PropTag(t *testing.T)","Funname":"TestService_PropTag","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_RequestName(t *testing.T)","Funname":"TestService_RequestName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_SetReadCallback(t *testing.T)","Funname":"TestService_SetReadCallback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_SetWriteCallback(t *testing.T)","Funname":"TestService_SetWriteCallback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_StructProp(t *testing.T)","Funname":"TestService_StructProp","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_AutoQuit(t *testing.T)","Funname":"dbusutil.TestService_AutoQuit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_ConnectChanged(t *testing.T)","Funname":"dbusutil.TestService_ConnectChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_DumpProperties(t *testing.T)","Funname":"dbusutil.TestService_DumpProperties","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_Emit(t *testing.T)","Funname":"dbusutil.TestService_Emit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_EmitPropertiesChanged(t *testing.T)","Funname":"dbusutil.TestService_EmitPropertiesChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_EmitPropertyChanged(t *testing.T)","Funname":"dbusutil.TestService_EmitPropertyChanged","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_Export(t *testing.T)","Funname":"dbusutil.TestService_Export","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_GetConnPIDAndUID(t *testing.T)","Funname":"dbusutil.TestService_GetConnPIDAndUID","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_GetNameOwner(t *testing.T)","Funname":"dbusutil.TestService_GetNameOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_IntUintProp(t *testing.T)","Funname":"dbusutil.TestService_IntUintProp","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_NameHasOwner(t *testing.T)","Funname":"dbusutil.TestService_NameHasOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_PropTag(t *testing.T)","Funname":"dbusutil.TestService_PropTag","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_RequestName(t *testing.T)","Funname":"dbusutil.TestService_RequestName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_SetReadCallback(t *testing.T)","Funname":"dbusutil.TestService_SetReadCallback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_SetWriteCallback(t *testing.T)","Funname":"dbusutil.TestService_SetWriteCallback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestService_StructProp(t *testing.T)","Funname":"dbusutil.TestService_StructProp","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (cp *customProperty) GetType() reflect.Type","Funname":"dbusutil.customProperty.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (cp *customProperty) GetValue() (val interface","Funname":"dbusutil.customProperty.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (*customProperty) SetNotifyChangedFunc(func(val interface","Funname":"dbusutil.customProperty.SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (*customProperty) SetValue(val interface","Funname":"dbusutil.customProperty.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func processSignal(conn *dbus.Conn, fn func(signal *dbus.Signal) bool)","Funname":"dbusutil.processSignal","Returntype":"","Args":"conn *dbus.Conn, fn func(signal *dbus.Signal) bool"},{"Uniquefunname":"func (*srvObject1) GetInterfaceName() string","Funname":"dbusutil.srvObject1.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject1) Method1() (int, *dbus.Error)","Funname":"dbusutil.srvObject1.Method1","Returntype":"(int, *dbus.Error)","Args":""},{"Uniquefunname":"func (*srvObject10) GetInterfaceName() string","Funname":"dbusutil.srvObject10.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject11) GetInterfaceName() string","Funname":"dbusutil.srvObject11.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (srvObject12) GetInterfaceName() string","Funname":"dbusutil.srvObject12.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject13) GetInterfaceName() string","Funname":"dbusutil.srvObject13.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject2) GetInterfaceName() string","Funname":"dbusutil.srvObject2.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject3) GetInterfaceName() string","Funname":"dbusutil.srvObject3.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject4) GetInterfaceName() string","Funname":"dbusutil.srvObject4.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject5) GetInterfaceName() string","Funname":"dbusutil.srvObject5.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (obj *srvObject5) Method1() *dbus.Error","Funname":"dbusutil.srvObject5.Method1","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (*srvObject6) GetInterfaceName() string","Funname":"dbusutil.srvObject6.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject7) GetInterfaceName() string","Funname":"dbusutil.srvObject7.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject8) GetInterfaceName() string","Funname":"dbusutil.srvObject8.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*srvObject9) GetInterfaceName() string","Funname":"dbusutil.srvObject9.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (srvString) GetInterfaceName() string","Funname":"dbusutil.srvString.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func processSignal(conn *dbus.Conn, fn func(signal *dbus.Signal) bool)","Funname":"processSignal","Returntype":"","Args":"conn *dbus.Conn, fn func(signal *dbus.Signal) bool"}],"Records":[{"Name":"struct:dbusutil.customProperty","Fields":["dbusutil.customProperty.value int32"]},{"Name":"struct:dbusutil.integers","Fields":["dbusutil.integers.A int","dbusutil.integers.B uint"]},{"Name":"struct:dbusutil.rect","Fields":["dbusutil.rect.H int32","dbusutil.rect.W int32","dbusutil.rect.X uint32","dbusutil.rect.Y uint32"]},{"Name":"var:dbusutil","Fields":["dbusutil.serviceEmitPropertiesChangedTest","dbusutil.serviceEmitPropertyChangedTests"]},{"Name":"struct:dbusutil.srvObject1","Fields":["dbusutil.srvObject1.methods *struct { Method1 func() `out:\"num\"`; }"]},{"Name":"struct:dbusutil.srvObject10","Fields":["dbusutil.srvObject10.Prop1 rect","dbusutil.srvObject10.Prop2 []rect","dbusutil.srvObject10.Prop3 map[string]rect","dbusutil.srvObject10.Prop4 twoRect","dbusutil.srvObject10.prop1ChangedCount int","dbusutil.srvObject10.prop2ChangedCount int","dbusutil.srvObject10.prop3ChangedCount int","dbusutil.srvObject10.prop4ChangedCount int"]},{"Name":"struct:dbusutil.srvObject11","Fields":["dbusutil.srvObject11.Prop1 uint32","dbusutil.srvObject11.Prop2 uint64","dbusutil.srvObject11.Prop3 string","dbusutil.srvObject11.Prop4 map[string]uint32","dbusutil.srvObject11.Prop4Mu sync.RWMutex","dbusutil.srvObject11.Prop5 *customProperty","dbusutil.srvObject11.PropsMu sync.RWMutex"]},{"Name":"struct:dbusutil.srvObject13","Fields":["dbusutil.srvObject13.Prop1 int","dbusutil.srvObject13.Prop2 uint","dbusutil.srvObject13.Prop3 integers","dbusutil.srvObject13.prop1ChangedCount int","dbusutil.srvObject13.prop2ChangedCount int","dbusutil.srvObject13.prop3ChangedCount int"]},{"Name":"struct:dbusutil.srvObject2","Fields":["dbusutil.srvObject2.signals *struct { Signal1 struct{}; Signal2 struct { Arg1 string; Arg2 uint32; }; }"]},{"Name":"struct:dbusutil.srvObject3","Fields":["dbusutil.srvObject3.Prop1 string","dbusutil.srvObject3.Prop2 uint32","dbusutil.srvObject3.PropsMu sync.RWMutex"]},{"Name":"struct:dbusutil.srvObject4","Fields":["dbusutil.srvObject4.Prop1 string","dbusutil.srvObject4.Prop2 uint32","dbusutil.srvObject4.PropsMu sync.RWMutex"]},{"Name":"struct:dbusutil.srvObject5","Fields":["dbusutil.srvObject5.s *Service"]},{"Name":"struct:dbusutil.srvObject6","Fields":["dbusutil.srvObject6.Prop1 string","dbusutil.srvObject6.prop1ReadCount int"]},{"Name":"struct:dbusutil.srvObject7","Fields":["dbusutil.srvObject7.Prop1 string","dbusutil.srvObject7.prop1WriteCount int"]},{"Name":"struct:dbusutil.srvObject8","Fields":["dbusutil.srvObject8.Prop1 string","dbusutil.srvObject8.changedCountA int","dbusutil.srvObject8.changedCountB int"]},{"Name":"struct:dbusutil.srvObject9","Fields":["dbusutil.srvObject9.Prop0 int32","dbusutil.srvObject9.Prop1 int32","dbusutil.srvObject9.Prop2 int32","dbusutil.srvObject9.Prop3 int32","dbusutil.srvObject9.Prop4 int32","dbusutil.srvObject9.Prop5 int32","dbusutil.srvObject9.Prop6 int32"]},{"Name":"struct:dbusutil.twoRect","Fields":["dbusutil.twoRect.A rect","dbusutil.twoRect.B rect"]}]}
{"Filepath":"dbusutil/signal.go","Functions":[{"Uniquefunname":"func (sl *SignalLoop) AddHandler(rule *SignalRule, cb SignalHandlerFunc) SignalHandlerId","Funname":"AddHandler","Returntype":"SignalHandlerId","Args":"rule *SignalRule, cb SignalHandlerFunc"},{"Uniquefunname":"func (sl *SignalLoop) Conn() *dbus.Conn","Funname":"Conn","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func NewSignalLoop(conn *dbus.Conn, bufSize int) *SignalLoop","Funname":"NewSignalLoop","Returntype":"*SignalLoop","Args":"conn *dbus.Conn, bufSize int"},{"Uniquefunname":"func (sl *SignalLoop) RemoveHandler(id SignalHandlerId)","Funname":"RemoveHandler","Returntype":"","Args":"id SignalHandlerId"},{"Uniquefunname":"func (sl *SignalLoop) Start()","Funname":"Start","Returntype":"","Args":""},{"Uniquefunname":"func (sl *SignalLoop) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func NewSignalLoop(conn *dbus.Conn, bufSize int) *SignalLoop","Funname":"dbusutil.NewSignalLoop","Returntype":"*SignalLoop","Args":"conn *dbus.Conn, bufSize int"},{"Uniquefunname":"func (sl *SignalLoop) AddHandler(rule *SignalRule, cb SignalHandlerFunc) SignalHandlerId","Funname":"dbusutil.SignalLoop.AddHandler","Returntype":"SignalHandlerId","Args":"rule *SignalRule, cb SignalHandlerFunc"},{"Uniquefunname":"func (sl *SignalLoop) Conn() *dbus.Conn","Funname":"dbusutil.SignalLoop.Conn","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func (sl *SignalLoop) RemoveHandler(id SignalHandlerId)","Funname":"dbusutil.SignalLoop.RemoveHandler","Returntype":"","Args":"id SignalHandlerId"},{"Uniquefunname":"func (sl *SignalLoop) Start()","Funname":"dbusutil.SignalLoop.Start","Returntype":"","Args":""},{"Uniquefunname":"func (sl *SignalLoop) Stop()","Funname":"dbusutil.SignalLoop.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (sl *SignalLoop) process(signal *dbus.Signal)","Funname":"dbusutil.SignalLoop.process","Returntype":"","Args":"signal *dbus.Signal"},{"Uniquefunname":"func (m *SignalRule) match(sig *dbus.Signal) bool","Funname":"dbusutil.SignalRule.match","Returntype":"bool","Args":"sig *dbus.Signal"},{"Uniquefunname":"func (m *SignalRule) match(sig *dbus.Signal) bool","Funname":"match","Returntype":"bool","Args":"sig *dbus.Signal"},{"Uniquefunname":"func (sl *SignalLoop) process(signal *dbus.Signal)","Funname":"process","Returntype":"","Args":"signal *dbus.Signal"}],"Records":[{"Name":"struct:dbusutil.SignalHandler","Fields":["dbusutil.SignalHandler.cb SignalHandlerFunc","dbusutil.SignalHandler.rule *SignalRule"]},{"Name":"struct:dbusutil.SignalLoop","Fields":["dbusutil.SignalLoop.bufSize int","dbusutil.SignalLoop.ch chan *dbus.Signal","dbusutil.SignalLoop.conn *dbus.Conn","dbusutil.SignalLoop.handlers map[SignalHandlerId]SignalHandler","dbusutil.SignalLoop.mu sync.Mutex","dbusutil.SignalLoop.nextHandlerId SignalHandlerId"]},{"Name":"struct:dbusutil.SignalRule","Fields":["dbusutil.SignalRule.Name string","dbusutil.SignalRule.Path dbus.ObjectPath","dbusutil.SignalRule.Sender string"]}]}
{"Filepath":"dbusutil/_tool/dbusutil-gen/main.go","Functions":[{"Uniquefunname":"func astNodeToStr(fset *token.FileSet, node interface","Funname":"astNodeToStr","Returntype":"(string, error)","Args":"fset *token.FileSet, node interface{}"},{"Uniquefunname":"func (g *Generator) format() []byte","Funname":"format","Returntype":"[]byte","Args":""},{"Uniquefunname":"func (g *Generator) generate()","Funname":"generate","Returntype":"","Args":""},{"Uniquefunname":"func getEqualFunc(option string) string","Funname":"getEqualFunc","Returntype":"string","Args":"option string"},{"Uniquefunname":"func getOptionFromComment(comment string) string","Funname":"getOptionFromComment","Returntype":"string","Args":"comment string"},{"Uniquefunname":"func getProps(fs *token.FileSet, structType *ast.StructType) []Property","Funname":"getProps","Returntype":"[]Property","Args":"fs *token.FileSet, structType *ast.StructType"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isExportField(fieldName string) bool","Funname":"isExportField","Returntype":"bool","Args":"fieldName string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (g *Generator) format() []byte","Funname":"main.Generator.format","Returntype":"[]byte","Args":""},{"Uniquefunname":"func (g *Generator) generate()","Funname":"main.Generator.generate","Returntype":"","Args":""},{"Uniquefunname":"func (g *Generator) parseFiles(names []string, types strv.Strv)","Funname":"main.Generator.parseFiles","Returntype":"","Args":"names []string, types strv.Strv"},{"Uniquefunname":"func (g *Generator) printf(format string, args ...interface","Funname":"main.Generator.printf","Returntype":"(int, error)","Args":"format string, args ...interface{}"},{"Uniquefunname":"func astNodeToStr(fset *token.FileSet, node interface","Funname":"main.astNodeToStr","Returntype":"(string, error)","Args":"fset *token.FileSet, node interface{}"},{"Uniquefunname":"func getEqualFunc(option string) string","Funname":"main.getEqualFunc","Returntype":"string","Args":"option string"},{"Uniquefunname":"func getOptionFromComment(comment string) string","Funname":"main.getOptionFromComment","Returntype":"string","Args":"comment string"},{"Uniquefunname":"func getProps(fs *token.FileSet, structType *ast.StructType) []Property","Funname":"main.getProps","Returntype":"[]Property","Args":"fs *token.FileSet, structType *ast.StructType"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func isExportField(fieldName string) bool","Funname":"main.isExportField","Returntype":"bool","Args":"fieldName string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func (g *Generator) parseFiles(names []string, types strv.Strv)","Funname":"parseFiles","Returntype":"","Args":"names []string, types strv.Strv"},{"Uniquefunname":"func (g *Generator) printf(format string, args ...interface","Funname":"printf","Returntype":"(int, error)","Args":"format string, args ...interface{}"}],"Records":[{"Name":"struct:main.Generator","Fields":["main.Generator.buf bytes.Buffer","main.Generator.pkg Package"]},{"Name":"struct:main.Package","Fields":["main.Package.extraImports []string","main.Package.name string","main.Package.typePropMap map[string][]Property"]},{"Name":"struct:main.Property","Fields":["main.Property.Equal string","main.Property.Name string","main.Property.Type string"]},{"Name":"var:main","Fields":["main.extraImports","main.outputFile","main.typeNames"]},{"Name":"const:main","Fields":["main.propsMuField"]}]}
{"Filepath":"dbusutil/gsprop/gsprop.go","Functions":[{"Uniquefunname":"func (b *Bool) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (d *Double) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (e *Enum) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (i *Int) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (s *String) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (s *Strv) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (u *Uint) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (u *Uint64) Bind(gs *gio.Settings, key string)","Funname":"Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (b *Bool) Get() bool","Funname":"Get","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *Double) Get() float64","Funname":"Get","Returntype":"float64","Args":""},{"Uniquefunname":"func (e *Enum) Get() int32","Funname":"Get","Returntype":"int32","Args":""},{"Uniquefunname":"func (i *Int) Get() int32","Funname":"Get","Returntype":"int32","Args":""},{"Uniquefunname":"func (s *String) Get() string","Funname":"Get","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Strv) Get() []string","Funname":"Get","Returntype":"[]string","Args":""},{"Uniquefunname":"func (u *Uint) Get() uint32","Funname":"Get","Returntype":"uint32","Args":""},{"Uniquefunname":"func (u *Uint64) Get() uint64","Funname":"Get","Returntype":"uint64","Args":""},{"Uniquefunname":"func (e *Enum) GetString() string","Funname":"GetString","Returntype":"string","Args":""},{"Uniquefunname":"func (*Bool) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*Double) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*Int) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*String) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*Strv) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*Uint) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (*Uint64) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (e *Enum) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (b *Bool) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (d *Double) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (e *Enum) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (i *Int) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (s *String) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Strv) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (u *Uint) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (u *Uint64) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bool) Set(val bool) bool","Funname":"Set","Returntype":"bool","Args":"val bool"},{"Uniquefunname":"func (d *Double) Set(val float64) bool","Funname":"Set","Returntype":"bool","Args":"val float64"},{"Uniquefunname":"func (e *Enum) Set(val int32) bool","Funname":"Set","Returntype":"bool","Args":"val int32"},{"Uniquefunname":"func (i *Int) Set(val int32) bool","Funname":"Set","Returntype":"bool","Args":"val int32"},{"Uniquefunname":"func (s *String) Set(val string) bool","Funname":"Set","Returntype":"bool","Args":"val string"},{"Uniquefunname":"func (s *Strv) Set(val []string) bool","Funname":"Set","Returntype":"bool","Args":"val []string"},{"Uniquefunname":"func (u *Uint) Set(val uint32) bool","Funname":"Set","Returntype":"bool","Args":"val uint32"},{"Uniquefunname":"func (u *Uint64) Set(val uint64) bool","Funname":"Set","Returntype":"bool","Args":"val uint64"},{"Uniquefunname":"func (b *base) SetNotifyChangedFunc(fn func(val interface","Funname":"SetNotifyChangedFunc","Returntype":"","Args":"fn func(val interface{})"},{"Uniquefunname":"func (e *Enum) SetString(val string) bool","Funname":"SetString","Returntype":"bool","Args":"val string"},{"Uniquefunname":"func (b *Bool) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (d *Double) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (e *Enum) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (i *Int) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (s *String) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (s *Strv) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (u *Uint) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (u *Uint64) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func bind(gs *gio.Settings, keyName string, getFn func() (interface{}, *dbus.Error))","Funname":"bind","Returntype":"","Args":"gs *gio.Settings, keyName string, getFn func() (interface{}, *dbus.Error)"},{"Uniquefunname":"func checkSet(setOk bool) *dbus.Error","Funname":"checkSet","Returntype":"*dbus.Error","Args":"setOk bool"},{"Uniquefunname":"func (b *Bool) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Bool.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (b *Bool) Get() bool","Funname":"gsprop.Bool.Get","Returntype":"bool","Args":""},{"Uniquefunname":"func (*Bool) GetType() reflect.Type","Funname":"gsprop.Bool.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (b *Bool) GetValue() (val interface","Funname":"gsprop.Bool.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bool) Set(val bool) bool","Funname":"gsprop.Bool.Set","Returntype":"bool","Args":"val bool"},{"Uniquefunname":"func (b *Bool) SetValue(val interface","Funname":"gsprop.Bool.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (d *Double) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Double.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (d *Double) Get() float64","Funname":"gsprop.Double.Get","Returntype":"float64","Args":""},{"Uniquefunname":"func (*Double) GetType() reflect.Type","Funname":"gsprop.Double.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (d *Double) GetValue() (val interface","Funname":"gsprop.Double.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (d *Double) Set(val float64) bool","Funname":"gsprop.Double.Set","Returntype":"bool","Args":"val float64"},{"Uniquefunname":"func (d *Double) SetValue(val interface","Funname":"gsprop.Double.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (e *Enum) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Enum.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (e *Enum) Get() int32","Funname":"gsprop.Enum.Get","Returntype":"int32","Args":""},{"Uniquefunname":"func (e *Enum) GetString() string","Funname":"gsprop.Enum.GetString","Returntype":"string","Args":""},{"Uniquefunname":"func (e *Enum) GetType() reflect.Type","Funname":"gsprop.Enum.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (e *Enum) GetValue() (val interface","Funname":"gsprop.Enum.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (e *Enum) Set(val int32) bool","Funname":"gsprop.Enum.Set","Returntype":"bool","Args":"val int32"},{"Uniquefunname":"func (e *Enum) SetString(val string) bool","Funname":"gsprop.Enum.SetString","Returntype":"bool","Args":"val string"},{"Uniquefunname":"func (e *Enum) SetValue(val interface","Funname":"gsprop.Enum.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (i *Int) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Int.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (i *Int) Get() int32","Funname":"gsprop.Int.Get","Returntype":"int32","Args":""},{"Uniquefunname":"func (*Int) GetType() reflect.Type","Funname":"gsprop.Int.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (i *Int) GetValue() (val interface","Funname":"gsprop.Int.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (i *Int) Set(val int32) bool","Funname":"gsprop.Int.Set","Returntype":"bool","Args":"val int32"},{"Uniquefunname":"func (i *Int) SetValue(val interface","Funname":"gsprop.Int.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (s *String) Bind(gs *gio.Settings, key string)","Funname":"gsprop.String.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (s *String) Get() string","Funname":"gsprop.String.Get","Returntype":"string","Args":""},{"Uniquefunname":"func (*String) GetType() reflect.Type","Funname":"gsprop.String.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (s *String) GetValue() (val interface","Funname":"gsprop.String.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (s *String) Set(val string) bool","Funname":"gsprop.String.Set","Returntype":"bool","Args":"val string"},{"Uniquefunname":"func (s *String) SetValue(val interface","Funname":"gsprop.String.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (s *Strv) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Strv.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (s *Strv) Get() []string","Funname":"gsprop.Strv.Get","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Strv) GetType() reflect.Type","Funname":"gsprop.Strv.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (s *Strv) GetValue() (val interface","Funname":"gsprop.Strv.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Strv) Set(val []string) bool","Funname":"gsprop.Strv.Set","Returntype":"bool","Args":"val []string"},{"Uniquefunname":"func (s *Strv) SetValue(val interface","Funname":"gsprop.Strv.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (u *Uint) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Uint.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (u *Uint) Get() uint32","Funname":"gsprop.Uint.Get","Returntype":"uint32","Args":""},{"Uniquefunname":"func (*Uint) GetType() reflect.Type","Funname":"gsprop.Uint.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (u *Uint) GetValue() (val interface","Funname":"gsprop.Uint.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (u *Uint) Set(val uint32) bool","Funname":"gsprop.Uint.Set","Returntype":"bool","Args":"val uint32"},{"Uniquefunname":"func (u *Uint) SetValue(val interface","Funname":"gsprop.Uint.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (u *Uint64) Bind(gs *gio.Settings, key string)","Funname":"gsprop.Uint64.Bind","Returntype":"","Args":"gs *gio.Settings, key string"},{"Uniquefunname":"func (u *Uint64) Get() uint64","Funname":"gsprop.Uint64.Get","Returntype":"uint64","Args":""},{"Uniquefunname":"func (*Uint64) GetType() reflect.Type","Funname":"gsprop.Uint64.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (u *Uint64) GetValue() (val interface","Funname":"gsprop.Uint64.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (u *Uint64) Set(val uint64) bool","Funname":"gsprop.Uint64.Set","Returntype":"bool","Args":"val uint64"},{"Uniquefunname":"func (u *Uint64) SetValue(val interface","Funname":"gsprop.Uint64.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (b *base) SetNotifyChangedFunc(fn func(val interface","Funname":"gsprop.base.SetNotifyChangedFunc","Returntype":"","Args":"fn func(val interface{})"},{"Uniquefunname":"func gsprop.base.bind(gs *gio.Settings, keyName string, getFn func() (interface{}, *dbus.Error))","Funname":"gsprop.base.bind","Returntype":"","Args":"gs *gio.Settings, keyName string, getFn func() (interface{}, *dbus.Error)"},{"Uniquefunname":"func checkSet(setOk bool) *dbus.Error","Funname":"gsprop.checkSet","Returntype":"*dbus.Error","Args":"setOk bool"},{"Uniquefunname":"func strvEqual(a []string, b []string) bool","Funname":"gsprop.strvEqual","Returntype":"bool","Args":"a []string, b []string"},{"Uniquefunname":"func strvEqual(a []string, b []string) bool","Funname":"strvEqual","Returntype":"bool","Args":"a []string, b []string"}],"Records":[{"Name":"struct:gsprop.base","Fields":["gsprop.base.gs *gio.Settings","gsprop.base.key string","gsprop.base.mu sync.Mutex","gsprop.base.notifyChanged func(val interface{})"]}]}
{"Filepath":"dbusutil/gsprop/gsprop_test.go","Functions":[{"Uniquefunname":"func (*srvObject1) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func TestAll(t *testing.T)","Funname":"TestAll","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAll(t *testing.T)","Funname":"gsprop.TestAll","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func processSignal(conn *dbus.Conn, fn func(signal *dbus.Signal) bool)","Funname":"gsprop.processSignal","Returntype":"","Args":"conn *dbus.Conn, fn func(signal *dbus.Signal) bool"},{"Uniquefunname":"func (*srvObject1) GetInterfaceName() string","Funname":"gsprop.srvObject1.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func processSignal(conn *dbus.Conn, fn func(signal *dbus.Signal) bool)","Funname":"processSignal","Returntype":"","Args":"conn *dbus.Conn, fn func(signal *dbus.Signal) bool"}],"Records":[{"Name":"const:gsprop","Fields":["gsprop.demoSchemaId","gsprop.srvObj1Interface"]},{"Name":"struct:gsprop.srvObject1","Fields":["gsprop.srvObject1.Bool Bool","gsprop.srvObject1.Double Double","gsprop.srvObject1.Enum Enum","gsprop.srvObject1.Int Int","gsprop.srvObject1.String String","gsprop.srvObject1.Strv Strv","gsprop.srvObject1.Uint Uint"]}]}
{"Filepath":"dbusutil/proxy/object.go","Functions":[{"Uniquefunname":"func ConnectPropertiesChanged(cb func(interfaceName string, changedProperties map[string]dbus.Variant, invalidatedProperties []string))(dbusutil.SignalHandlerId, error)","Funname":"ConnectPropertiesChanged","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"cb func(interfaceName string, changedProperties map[string]dbus.Variant, invalidatedProperties []string)"},{"Uniquefunname":"func ConnectPropertyChanged_(interfaceName, propName string, callback PropChangedCallback)error","Funname":"ConnectPropertyChanged_","Returntype":"error","Args":"interfaceName, propName string, callback PropChangedCallback"},{"Uniquefunname":"func ConnectSignal_(rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc)(dbusutil.SignalHandlerId, error)","Funname":"ConnectSignal_","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc"},{"Uniquefunname":"func (o *Object) GetExtra(key string) (interface","Funname":"GetExtra","Returntype":"(interface{}, bool)","Args":"key string"},{"Uniquefunname":"func GetProperty_(flags dbus.Flags, interfaceName, propName string, value interface{})error","Funname":"GetProperty_","Returntype":"error","Args":"flags dbus.Flags, interfaceName, propName string, value interface{}"},{"Uniquefunname":"func Go_(method string, flags dbus.Flags, ch chan *dbus.Call, args ...interface{})*dbus.Call","Funname":"Go_","Returntype":"*dbus.Call","Args":"method string, flags dbus.Flags, ch chan *dbus.Call, args ...interface{}"},{"Uniquefunname":"func (o *Object) InitSignalExt(sigLoop *dbusutil.SignalLoop, ruleAuto bool)","Funname":"InitSignalExt","Returntype":"","Args":"sigLoop *dbusutil.SignalLoop, ruleAuto bool"},{"Uniquefunname":"func Init_(conn *dbus.Conn, serviceName string, path dbus.ObjectPath)","Funname":"Init_","Returntype":"","Args":"conn *dbus.Conn, serviceName string, path dbus.ObjectPath"},{"Uniquefunname":"func (o *Object) Path_() dbus.ObjectPath","Funname":"Path_","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (o *Object) RemoveAllHandlers()","Funname":"RemoveAllHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (o *Object) RemoveHandler(handlerId dbusutil.SignalHandlerId)","Funname":"RemoveHandler","Returntype":"","Args":"handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) ServiceName_() string","Funname":"ServiceName_","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) SetExtra(key string, v interface","Funname":"SetExtra","Returntype":"","Args":"key string, v interface{}"},{"Uniquefunname":"func SetProperty_(flags dbus.Flags, interfaceName, propName string, value interface{})error","Funname":"SetProperty_","Returntype":"error","Args":"flags dbus.Flags, interfaceName, propName string, value interface{}"},{"Uniquefunname":"func (o *Object) addMatch(rule string) error","Funname":"addMatch","Returntype":"error","Args":"rule string"},{"Uniquefunname":"func (o *Object) addRuleHandlerId(rule string, handlerId dbusutil.SignalHandlerId)","Funname":"addRuleHandlerId","Returntype":"","Args":"rule string, handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) checkSignalExt()","Funname":"checkSignalExt","Returntype":"","Args":""},{"Uniquefunname":"func connectSignal(rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc)(dbusutil.SignalHandlerId, error)","Funname":"connectSignal","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc"},{"Uniquefunname":"func (o *Object) getMatchRulePropertiesChanged() string","Funname":"getMatchRulePropertiesChanged","Returntype":"string","Args":""},{"Uniquefunname":"func handlerIdSliceDelete(slice []dbusutil.SignalHandlerId, index int)[]dbusutil.SignalHandlerId","Funname":"handlerIdSliceDelete","Returntype":"[]dbusutil.SignalHandlerId","Args":"slice []dbusutil.SignalHandlerId, index int"},{"Uniquefunname":"func handlerIdSliceIndex(slice []dbusutil.SignalHandlerId, hId dbusutil.SignalHandlerId) int","Funname":"handlerIdSliceIndex","Returntype":"int","Args":"slice []dbusutil.SignalHandlerId, hId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) initPropertiesChangedHandler() error","Funname":"initPropertiesChangedHandler","Returntype":"error","Args":""},{"Uniquefunname":"func (o *Object) propChangedHandler(sig *dbus.Signal)","Funname":"propChangedHandler","Returntype":"","Args":"sig *dbus.Signal"},{"Uniquefunname":"func proxy.Object.ConnectPropertiesChanged(cb func(interfaceName string, changedProperties map[string]dbus.Variant, invalidatedProperties []string))(dbusutil.SignalHandlerId, error)","Funname":"proxy.Object.ConnectPropertiesChanged","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"cb func(interfaceName string, changedProperties map[string]dbus.Variant, invalidatedProperties []string)"},{"Uniquefunname":"func proxy.Object.ConnectPropertyChanged_(interfaceName, propName string, callback PropChangedCallback)error","Funname":"proxy.Object.ConnectPropertyChanged_","Returntype":"error","Args":"interfaceName, propName string, callback PropChangedCallback"},{"Uniquefunname":"func proxy.Object.ConnectSignal_(rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc)(dbusutil.SignalHandlerId, error)","Funname":"proxy.Object.ConnectSignal_","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc"},{"Uniquefunname":"func (o *Object) GetExtra(key string) (interface","Funname":"proxy.Object.GetExtra","Returntype":"(interface{}, bool)","Args":"key string"},{"Uniquefunname":"func proxy.Object.GetProperty_(flags dbus.Flags, interfaceName, propName string, value interface{})error","Funname":"proxy.Object.GetProperty_","Returntype":"error","Args":"flags dbus.Flags, interfaceName, propName string, value interface{}"},{"Uniquefunname":"func proxy.Object.Go_(method string, flags dbus.Flags, ch chan *dbus.Call, args ...interface{})*dbus.Call","Funname":"proxy.Object.Go_","Returntype":"*dbus.Call","Args":"method string, flags dbus.Flags, ch chan *dbus.Call, args ...interface{}"},{"Uniquefunname":"func (o *Object) InitSignalExt(sigLoop *dbusutil.SignalLoop, ruleAuto bool)","Funname":"proxy.Object.InitSignalExt","Returntype":"","Args":"sigLoop *dbusutil.SignalLoop, ruleAuto bool"},{"Uniquefunname":"func proxy.Object.Init_(conn *dbus.Conn, serviceName string, path dbus.ObjectPath)","Funname":"proxy.Object.Init_","Returntype":"","Args":"conn *dbus.Conn, serviceName string, path dbus.ObjectPath"},{"Uniquefunname":"func (o *Object) Path_() dbus.ObjectPath","Funname":"proxy.Object.Path_","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (o *Object) RemoveAllHandlers()","Funname":"proxy.Object.RemoveAllHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (o *Object) RemoveHandler(handlerId dbusutil.SignalHandlerId)","Funname":"proxy.Object.RemoveHandler","Returntype":"","Args":"handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) ServiceName_() string","Funname":"proxy.Object.ServiceName_","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) SetExtra(key string, v interface","Funname":"proxy.Object.SetExtra","Returntype":"","Args":"key string, v interface{}"},{"Uniquefunname":"func proxy.Object.SetProperty_(flags dbus.Flags, interfaceName, propName string, value interface{})error","Funname":"proxy.Object.SetProperty_","Returntype":"error","Args":"flags dbus.Flags, interfaceName, propName string, value interface{}"},{"Uniquefunname":"func (o *Object) addMatch(rule string) error","Funname":"proxy.Object.addMatch","Returntype":"error","Args":"rule string"},{"Uniquefunname":"func (o *Object) addRuleHandlerId(rule string, handlerId dbusutil.SignalHandlerId)","Funname":"proxy.Object.addRuleHandlerId","Returntype":"","Args":"rule string, handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) checkSignalExt()","Funname":"proxy.Object.checkSignalExt","Returntype":"","Args":""},{"Uniquefunname":"func proxy.Object.connectSignal(rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc)(dbusutil.SignalHandlerId, error)","Funname":"proxy.Object.connectSignal","Returntype":"(dbusutil.SignalHandlerId, error)","Args":"rule string, sigRule *dbusutil.SignalRule, cb dbusutil.SignalHandlerFunc"},{"Uniquefunname":"func (o *Object) getMatchRulePropertiesChanged() string","Funname":"proxy.Object.getMatchRulePropertiesChanged","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) initPropertiesChangedHandler() error","Funname":"proxy.Object.initPropertiesChangedHandler","Returntype":"error","Args":""},{"Uniquefunname":"func (o *Object) propChangedHandler(sig *dbus.Signal)","Funname":"proxy.Object.propChangedHandler","Returntype":"","Args":"sig *dbus.Signal"},{"Uniquefunname":"func (o *Object) removeAllHandlers()","Funname":"proxy.Object.removeAllHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (o *Object) removeHandler(handlerId dbusutil.SignalHandlerId)","Funname":"proxy.Object.removeHandler","Returntype":"","Args":"handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) removePropertiesChangedHandler()","Funname":"proxy.Object.removePropertiesChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func proxy.handlerIdSliceDelete(slice []dbusutil.SignalHandlerId, index int)[]dbusutil.SignalHandlerId","Funname":"proxy.handlerIdSliceDelete","Returntype":"[]dbusutil.SignalHandlerId","Args":"slice []dbusutil.SignalHandlerId, index int"},{"Uniquefunname":"func handlerIdSliceIndex(slice []dbusutil.SignalHandlerId, hId dbusutil.SignalHandlerId) int","Funname":"proxy.handlerIdSliceIndex","Returntype":"int","Args":"slice []dbusutil.SignalHandlerId, hId dbusutil.SignalHandlerId"},{"Uniquefunname":"func storeGetProperty(call *dbus.Call, value interface","Funname":"proxy.storeGetProperty","Returntype":"error","Args":"call *dbus.Call, value interface{}"},{"Uniquefunname":"func (o *Object) removeAllHandlers()","Funname":"removeAllHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (o *Object) removeHandler(handlerId dbusutil.SignalHandlerId)","Funname":"removeHandler","Returntype":"","Args":"handlerId dbusutil.SignalHandlerId"},{"Uniquefunname":"func (o *Object) removePropertiesChangedHandler()","Funname":"removePropertiesChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func storeGetProperty(call *dbus.Call, value interface","Funname":"storeGetProperty","Returntype":"error","Args":"call *dbus.Call, value interface{}"}],"Records":[{"Name":"interface","Fields":["proxy.Implementer"]},{"Name":"struct:proxy.Object","Fields":["proxy.Object.conn *dbus.Conn","proxy.Object.extraMap map[string]interface{}","proxy.Object.mu sync.Mutex","proxy.Object.obj dbus.BusObject"]},{"Name":"const:proxy","Fields":["proxy.RemoveAllHandlers","proxy.RemovePropertiesChangedHandler"]},{"Name":"struct:proxy.objectSignalExt","Fields":["proxy.objectSignalExt.handleIds []dbusutil.SignalHandlerId","proxy.objectSignalExt.propChangedCallbacks map[propChangedKey][]PropChangedCallback","proxy.objectSignalExt.propChangedHandlerId dbusutil.SignalHandlerId","proxy.objectSignalExt.ruleAuto bool","proxy.objectSignalExt.ruleHandlersMap map[string][]dbusutil.SignalHandlerId","proxy.objectSignalExt.sigLoop *dbusutil.SignalLoop"]},{"Name":"struct:proxy.propChangedKey","Fields":["proxy.propChangedKey.interfaceName string","proxy.propChangedKey.propName string"]}]}
{"Filepath":"dbusutil/proxy/prop.go","Functions":[{"Uniquefunname":"func (p PropBool) ConnectChanged(cb func(hasValue bool, value bool)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value bool)"},{"Uniquefunname":"func (p PropBoolArray) ConnectChanged(cb func(hasValue bool, value []bool)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []bool)"},{"Uniquefunname":"func (p PropByte) ConnectChanged(cb func(hasValue bool, value byte)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value byte)"},{"Uniquefunname":"func (p PropByteArray) ConnectChanged(cb func(hasValue bool, value []byte)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []byte)"},{"Uniquefunname":"func (p PropDouble) ConnectChanged(cb func(hasValue bool, value float64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value float64)"},{"Uniquefunname":"func (p PropDoubleArray) ConnectChanged(cb func(hasValue bool, value []float64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []float64)"},{"Uniquefunname":"func (p PropInt16) ConnectChanged(cb func(hasValue bool, value int16)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int16)"},{"Uniquefunname":"func (p PropInt16Array) ConnectChanged(cb func(hasValue bool, value []int16)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int16)"},{"Uniquefunname":"func (p PropInt32) ConnectChanged(cb func(hasValue bool, value int32)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int32)"},{"Uniquefunname":"func (p PropInt32Array) ConnectChanged(cb func(hasValue bool, value []int32)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int32)"},{"Uniquefunname":"func (p PropInt64) ConnectChanged(cb func(hasValue bool, value int64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int64)"},{"Uniquefunname":"func (p PropInt64Array) ConnectChanged(cb func(hasValue bool, value []int64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int64)"},{"Uniquefunname":"func (p PropObjectPath) ConnectChanged(cb func(hasValue bool, value dbus.ObjectPath)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value dbus.ObjectPath)"},{"Uniquefunname":"func ConnectChanged(cb func(hasValue bool, value []dbus.ObjectPath))error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []dbus.ObjectPath)"},{"Uniquefunname":"func (p PropString) ConnectChanged(cb func(hasValue bool, value string)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value string)"},{"Uniquefunname":"func (p PropStringArray) ConnectChanged(cb func(hasValue bool, value []string)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []string)"},{"Uniquefunname":"func (p PropUint16) ConnectChanged(cb func(hasValue bool, value uint16)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint16)"},{"Uniquefunname":"func (p PropUint16Array) ConnectChanged(cb func(hasValue bool, value []uint16)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint16)"},{"Uniquefunname":"func (p PropUint32) ConnectChanged(cb func(hasValue bool, value uint32)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint32)"},{"Uniquefunname":"func (p PropUint32Array) ConnectChanged(cb func(hasValue bool, value []uint32)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint32)"},{"Uniquefunname":"func (p PropUint64) ConnectChanged(cb func(hasValue bool, value uint64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint64)"},{"Uniquefunname":"func (p PropUint64Array) ConnectChanged(cb func(hasValue bool, value []uint64)) error","Funname":"ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint64)"},{"Uniquefunname":"func (p PropBool) Get(flags dbus.Flags) (value bool, err error)","Funname":"Get","Returntype":"(value bool, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropBoolArray) Get(flags dbus.Flags) (value []bool, err error)","Funname":"Get","Returntype":"(value []bool, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropByte) Get(flags dbus.Flags) (value byte, err error)","Funname":"Get","Returntype":"(value byte, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropByteArray) Get(flags dbus.Flags) (value []byte, err error)","Funname":"Get","Returntype":"(value []byte, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropDouble) Get(flags dbus.Flags) (value float64, err error)","Funname":"Get","Returntype":"(value float64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropDoubleArray) Get(flags dbus.Flags) (value []float64, err error)","Funname":"Get","Returntype":"(value []float64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt16) Get(flags dbus.Flags) (value int16, err error)","Funname":"Get","Returntype":"(value int16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt16Array) Get(flags dbus.Flags) (value []int16, err error)","Funname":"Get","Returntype":"(value []int16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt32) Get(flags dbus.Flags) (value int32, err error)","Funname":"Get","Returntype":"(value int32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt32Array) Get(flags dbus.Flags) (value []int32, err error)","Funname":"Get","Returntype":"(value []int32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt64) Get(flags dbus.Flags) (value int64, err error)","Funname":"Get","Returntype":"(value int64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt64Array) Get(flags dbus.Flags) (value []int64, err error)","Funname":"Get","Returntype":"(value []int64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropObjectPath) Get(flags dbus.Flags) (value dbus.ObjectPath, err error)","Funname":"Get","Returntype":"(value dbus.ObjectPath, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropObjectPathArray) Get(flags dbus.Flags) (value []dbus.ObjectPath, err error)","Funname":"Get","Returntype":"(value []dbus.ObjectPath, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropString) Get(flags dbus.Flags) (value string, err error)","Funname":"Get","Returntype":"(value string, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropStringArray) Get(flags dbus.Flags) (value []string, err error)","Funname":"Get","Returntype":"(value []string, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint16) Get(flags dbus.Flags) (value uint16, err error)","Funname":"Get","Returntype":"(value uint16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint16Array) Get(flags dbus.Flags) (value []uint16, err error)","Funname":"Get","Returntype":"(value []uint16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint32) Get(flags dbus.Flags) (value uint32, err error)","Funname":"Get","Returntype":"(value uint32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint32Array) Get(flags dbus.Flags) (value []uint32, err error)","Funname":"Get","Returntype":"(value []uint32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint64) Get(flags dbus.Flags) (value uint64, err error)","Funname":"Get","Returntype":"(value uint64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint64Array) Get(flags dbus.Flags) (value []uint64, err error)","Funname":"Get","Returntype":"(value []uint64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropBool) Set(flags dbus.Flags, value bool) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value bool"},{"Uniquefunname":"func (p PropBoolArray) Set(flags dbus.Flags, value []bool) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []bool"},{"Uniquefunname":"func (p PropByte) Set(flags dbus.Flags, value byte) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value byte"},{"Uniquefunname":"func (p PropByteArray) Set(flags dbus.Flags, value []byte) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []byte"},{"Uniquefunname":"func (p PropDouble) Set(flags dbus.Flags, value float64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value float64"},{"Uniquefunname":"func (p PropDoubleArray) Set(flags dbus.Flags, value []float64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []float64"},{"Uniquefunname":"func (p PropInt16) Set(flags dbus.Flags, value int16) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value int16"},{"Uniquefunname":"func (p PropInt16Array) Set(flags dbus.Flags, value []int16) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []int16"},{"Uniquefunname":"func (p PropInt32) Set(flags dbus.Flags, value int32) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value int32"},{"Uniquefunname":"func (p PropInt32Array) Set(flags dbus.Flags, value []int32) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []int32"},{"Uniquefunname":"func (p PropInt64) Set(flags dbus.Flags, value int64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value int64"},{"Uniquefunname":"func (p PropInt64Array) Set(flags dbus.Flags, value []int64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []int64"},{"Uniquefunname":"func (p PropObjectPath) Set(flags dbus.Flags, value dbus.ObjectPath) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value dbus.ObjectPath"},{"Uniquefunname":"func (p PropObjectPathArray) Set(flags dbus.Flags, value []dbus.ObjectPath) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []dbus.ObjectPath"},{"Uniquefunname":"func (p PropString) Set(flags dbus.Flags, value string) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value string"},{"Uniquefunname":"func (p PropStringArray) Set(flags dbus.Flags, value []string) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []string"},{"Uniquefunname":"func (p PropUint16) Set(flags dbus.Flags, value uint16) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value uint16"},{"Uniquefunname":"func (p PropUint16Array) Set(flags dbus.Flags, value []uint16) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []uint16"},{"Uniquefunname":"func (p PropUint32) Set(flags dbus.Flags, value uint32) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value uint32"},{"Uniquefunname":"func (p PropUint32Array) Set(flags dbus.Flags, value []uint32) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []uint32"},{"Uniquefunname":"func (p PropUint64) Set(flags dbus.Flags, value uint64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value uint64"},{"Uniquefunname":"func (p PropUint64Array) Set(flags dbus.Flags, value []uint64) error","Funname":"Set","Returntype":"error","Args":"flags dbus.Flags, value []uint64"},{"Uniquefunname":"func (p PropBool) ConnectChanged(cb func(hasValue bool, value bool)) error","Funname":"proxy.PropBool.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value bool)"},{"Uniquefunname":"func (p PropBool) Get(flags dbus.Flags) (value bool, err error)","Funname":"proxy.PropBool.Get","Returntype":"(value bool, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropBool) Set(flags dbus.Flags, value bool) error","Funname":"proxy.PropBool.Set","Returntype":"error","Args":"flags dbus.Flags, value bool"},{"Uniquefunname":"func (p PropBoolArray) ConnectChanged(cb func(hasValue bool, value []bool)) error","Funname":"proxy.PropBoolArray.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []bool)"},{"Uniquefunname":"func (p PropBoolArray) Get(flags dbus.Flags) (value []bool, err error)","Funname":"proxy.PropBoolArray.Get","Returntype":"(value []bool, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropBoolArray) Set(flags dbus.Flags, value []bool) error","Funname":"proxy.PropBoolArray.Set","Returntype":"error","Args":"flags dbus.Flags, value []bool"},{"Uniquefunname":"func (p PropByte) ConnectChanged(cb func(hasValue bool, value byte)) error","Funname":"proxy.PropByte.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value byte)"},{"Uniquefunname":"func (p PropByte) Get(flags dbus.Flags) (value byte, err error)","Funname":"proxy.PropByte.Get","Returntype":"(value byte, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropByte) Set(flags dbus.Flags, value byte) error","Funname":"proxy.PropByte.Set","Returntype":"error","Args":"flags dbus.Flags, value byte"},{"Uniquefunname":"func (p PropByteArray) ConnectChanged(cb func(hasValue bool, value []byte)) error","Funname":"proxy.PropByteArray.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []byte)"},{"Uniquefunname":"func (p PropByteArray) Get(flags dbus.Flags) (value []byte, err error)","Funname":"proxy.PropByteArray.Get","Returntype":"(value []byte, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropByteArray) Set(flags dbus.Flags, value []byte) error","Funname":"proxy.PropByteArray.Set","Returntype":"error","Args":"flags dbus.Flags, value []byte"},{"Uniquefunname":"func (p PropDouble) ConnectChanged(cb func(hasValue bool, value float64)) error","Funname":"proxy.PropDouble.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value float64)"},{"Uniquefunname":"func (p PropDouble) Get(flags dbus.Flags) (value float64, err error)","Funname":"proxy.PropDouble.Get","Returntype":"(value float64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropDouble) Set(flags dbus.Flags, value float64) error","Funname":"proxy.PropDouble.Set","Returntype":"error","Args":"flags dbus.Flags, value float64"},{"Uniquefunname":"func (p PropDoubleArray) ConnectChanged(cb func(hasValue bool, value []float64)) error","Funname":"proxy.PropDoubleArray.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []float64)"},{"Uniquefunname":"func (p PropDoubleArray) Get(flags dbus.Flags) (value []float64, err error)","Funname":"proxy.PropDoubleArray.Get","Returntype":"(value []float64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropDoubleArray) Set(flags dbus.Flags, value []float64) error","Funname":"proxy.PropDoubleArray.Set","Returntype":"error","Args":"flags dbus.Flags, value []float64"},{"Uniquefunname":"func (p PropInt16) ConnectChanged(cb func(hasValue bool, value int16)) error","Funname":"proxy.PropInt16.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int16)"},{"Uniquefunname":"func (p PropInt16) Get(flags dbus.Flags) (value int16, err error)","Funname":"proxy.PropInt16.Get","Returntype":"(value int16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt16) Set(flags dbus.Flags, value int16) error","Funname":"proxy.PropInt16.Set","Returntype":"error","Args":"flags dbus.Flags, value int16"},{"Uniquefunname":"func (p PropInt16Array) ConnectChanged(cb func(hasValue bool, value []int16)) error","Funname":"proxy.PropInt16Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int16)"},{"Uniquefunname":"func (p PropInt16Array) Get(flags dbus.Flags) (value []int16, err error)","Funname":"proxy.PropInt16Array.Get","Returntype":"(value []int16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt16Array) Set(flags dbus.Flags, value []int16) error","Funname":"proxy.PropInt16Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []int16"},{"Uniquefunname":"func (p PropInt32) ConnectChanged(cb func(hasValue bool, value int32)) error","Funname":"proxy.PropInt32.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int32)"},{"Uniquefunname":"func (p PropInt32) Get(flags dbus.Flags) (value int32, err error)","Funname":"proxy.PropInt32.Get","Returntype":"(value int32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt32) Set(flags dbus.Flags, value int32) error","Funname":"proxy.PropInt32.Set","Returntype":"error","Args":"flags dbus.Flags, value int32"},{"Uniquefunname":"func (p PropInt32Array) ConnectChanged(cb func(hasValue bool, value []int32)) error","Funname":"proxy.PropInt32Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int32)"},{"Uniquefunname":"func (p PropInt32Array) Get(flags dbus.Flags) (value []int32, err error)","Funname":"proxy.PropInt32Array.Get","Returntype":"(value []int32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt32Array) Set(flags dbus.Flags, value []int32) error","Funname":"proxy.PropInt32Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []int32"},{"Uniquefunname":"func (p PropInt64) ConnectChanged(cb func(hasValue bool, value int64)) error","Funname":"proxy.PropInt64.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value int64)"},{"Uniquefunname":"func (p PropInt64) Get(flags dbus.Flags) (value int64, err error)","Funname":"proxy.PropInt64.Get","Returntype":"(value int64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt64) Set(flags dbus.Flags, value int64) error","Funname":"proxy.PropInt64.Set","Returntype":"error","Args":"flags dbus.Flags, value int64"},{"Uniquefunname":"func (p PropInt64Array) ConnectChanged(cb func(hasValue bool, value []int64)) error","Funname":"proxy.PropInt64Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []int64)"},{"Uniquefunname":"func (p PropInt64Array) Get(flags dbus.Flags) (value []int64, err error)","Funname":"proxy.PropInt64Array.Get","Returntype":"(value []int64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropInt64Array) Set(flags dbus.Flags, value []int64) error","Funname":"proxy.PropInt64Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []int64"},{"Uniquefunname":"func (p PropObjectPath) ConnectChanged(cb func(hasValue bool, value dbus.ObjectPath)) error","Funname":"proxy.PropObjectPath.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value dbus.ObjectPath)"},{"Uniquefunname":"func (p PropObjectPath) Get(flags dbus.Flags) (value dbus.ObjectPath, err error)","Funname":"proxy.PropObjectPath.Get","Returntype":"(value dbus.ObjectPath, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropObjectPath) Set(flags dbus.Flags, value dbus.ObjectPath) error","Funname":"proxy.PropObjectPath.Set","Returntype":"error","Args":"flags dbus.Flags, value dbus.ObjectPath"},{"Uniquefunname":"func proxy.PropObjectPathArray.ConnectChanged(cb func(hasValue bool, value []dbus.ObjectPath))error","Funname":"proxy.PropObjectPathArray.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []dbus.ObjectPath)"},{"Uniquefunname":"func (p PropObjectPathArray) Get(flags dbus.Flags) (value []dbus.ObjectPath, err error)","Funname":"proxy.PropObjectPathArray.Get","Returntype":"(value []dbus.ObjectPath, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropObjectPathArray) Set(flags dbus.Flags, value []dbus.ObjectPath) error","Funname":"proxy.PropObjectPathArray.Set","Returntype":"error","Args":"flags dbus.Flags, value []dbus.ObjectPath"},{"Uniquefunname":"func (p PropString) ConnectChanged(cb func(hasValue bool, value string)) error","Funname":"proxy.PropString.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value string)"},{"Uniquefunname":"func (p PropString) Get(flags dbus.Flags) (value string, err error)","Funname":"proxy.PropString.Get","Returntype":"(value string, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropString) Set(flags dbus.Flags, value string) error","Funname":"proxy.PropString.Set","Returntype":"error","Args":"flags dbus.Flags, value string"},{"Uniquefunname":"func (p PropStringArray) ConnectChanged(cb func(hasValue bool, value []string)) error","Funname":"proxy.PropStringArray.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []string)"},{"Uniquefunname":"func (p PropStringArray) Get(flags dbus.Flags) (value []string, err error)","Funname":"proxy.PropStringArray.Get","Returntype":"(value []string, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropStringArray) Set(flags dbus.Flags, value []string) error","Funname":"proxy.PropStringArray.Set","Returntype":"error","Args":"flags dbus.Flags, value []string"},{"Uniquefunname":"func (p PropUint16) ConnectChanged(cb func(hasValue bool, value uint16)) error","Funname":"proxy.PropUint16.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint16)"},{"Uniquefunname":"func (p PropUint16) Get(flags dbus.Flags) (value uint16, err error)","Funname":"proxy.PropUint16.Get","Returntype":"(value uint16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint16) Set(flags dbus.Flags, value uint16) error","Funname":"proxy.PropUint16.Set","Returntype":"error","Args":"flags dbus.Flags, value uint16"},{"Uniquefunname":"func (p PropUint16Array) ConnectChanged(cb func(hasValue bool, value []uint16)) error","Funname":"proxy.PropUint16Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint16)"},{"Uniquefunname":"func (p PropUint16Array) Get(flags dbus.Flags) (value []uint16, err error)","Funname":"proxy.PropUint16Array.Get","Returntype":"(value []uint16, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint16Array) Set(flags dbus.Flags, value []uint16) error","Funname":"proxy.PropUint16Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []uint16"},{"Uniquefunname":"func (p PropUint32) ConnectChanged(cb func(hasValue bool, value uint32)) error","Funname":"proxy.PropUint32.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint32)"},{"Uniquefunname":"func (p PropUint32) Get(flags dbus.Flags) (value uint32, err error)","Funname":"proxy.PropUint32.Get","Returntype":"(value uint32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint32) Set(flags dbus.Flags, value uint32) error","Funname":"proxy.PropUint32.Set","Returntype":"error","Args":"flags dbus.Flags, value uint32"},{"Uniquefunname":"func (p PropUint32Array) ConnectChanged(cb func(hasValue bool, value []uint32)) error","Funname":"proxy.PropUint32Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint32)"},{"Uniquefunname":"func (p PropUint32Array) Get(flags dbus.Flags) (value []uint32, err error)","Funname":"proxy.PropUint32Array.Get","Returntype":"(value []uint32, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint32Array) Set(flags dbus.Flags, value []uint32) error","Funname":"proxy.PropUint32Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []uint32"},{"Uniquefunname":"func (p PropUint64) ConnectChanged(cb func(hasValue bool, value uint64)) error","Funname":"proxy.PropUint64.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value uint64)"},{"Uniquefunname":"func (p PropUint64) Get(flags dbus.Flags) (value uint64, err error)","Funname":"proxy.PropUint64.Get","Returntype":"(value uint64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint64) Set(flags dbus.Flags, value uint64) error","Funname":"proxy.PropUint64.Set","Returntype":"error","Args":"flags dbus.Flags, value uint64"},{"Uniquefunname":"func (p PropUint64Array) ConnectChanged(cb func(hasValue bool, value []uint64)) error","Funname":"proxy.PropUint64Array.ConnectChanged","Returntype":"error","Args":"cb func(hasValue bool, value []uint64)"},{"Uniquefunname":"func (p PropUint64Array) Get(flags dbus.Flags) (value []uint64, err error)","Funname":"proxy.PropUint64Array.Get","Returntype":"(value []uint64, err error)","Args":"flags dbus.Flags"},{"Uniquefunname":"func (p PropUint64Array) Set(flags dbus.Flags, value []uint64) error","Funname":"proxy.PropUint64Array.Set","Returntype":"error","Args":"flags dbus.Flags, value []uint64"}],"Records":[{"Name":"struct:proxy.PropBool","Fields":["proxy.PropBool.Impl Implementer","proxy.PropBool.Name string"]},{"Name":"struct:proxy.PropBoolArray","Fields":["proxy.PropBoolArray.Impl Implementer","proxy.PropBoolArray.Name string"]},{"Name":"struct:proxy.PropByte","Fields":["proxy.PropByte.Impl Implementer","proxy.PropByte.Name string"]},{"Name":"struct:proxy.PropByteArray","Fields":["proxy.PropByteArray.Impl Implementer","proxy.PropByteArray.Name string"]},{"Name":"struct:proxy.PropDouble","Fields":["proxy.PropDouble.Impl Implementer","proxy.PropDouble.Name string"]},{"Name":"struct:proxy.PropDoubleArray","Fields":["proxy.PropDoubleArray.Impl Implementer","proxy.PropDoubleArray.Name string"]},{"Name":"struct:proxy.PropInt16","Fields":["proxy.PropInt16.Impl Implementer","proxy.PropInt16.Name string"]},{"Name":"struct:proxy.PropInt16Array","Fields":["proxy.PropInt16Array.Impl Implementer","proxy.PropInt16Array.Name string"]},{"Name":"struct:proxy.PropInt32","Fields":["proxy.PropInt32.Impl Implementer","proxy.PropInt32.Name string"]},{"Name":"struct:proxy.PropInt32Array","Fields":["proxy.PropInt32Array.Impl Implementer","proxy.PropInt32Array.Name string"]},{"Name":"struct:proxy.PropInt64","Fields":["proxy.PropInt64.Impl Implementer","proxy.PropInt64.Name string"]},{"Name":"struct:proxy.PropInt64Array","Fields":["proxy.PropInt64Array.Impl Implementer","proxy.PropInt64Array.Name string"]},{"Name":"struct:proxy.PropObjectPath","Fields":["proxy.PropObjectPath.Impl Implementer","proxy.PropObjectPath.Name string"]},{"Name":"struct:proxy.PropObjectPathArray","Fields":["proxy.PropObjectPathArray.Impl Implementer","proxy.PropObjectPathArray.Name string"]},{"Name":"struct:proxy.PropString","Fields":["proxy.PropString.Impl Implementer","proxy.PropString.Name string"]},{"Name":"struct:proxy.PropStringArray","Fields":["proxy.PropStringArray.Impl Implementer","proxy.PropStringArray.Name string"]},{"Name":"struct:proxy.PropUint16","Fields":["proxy.PropUint16.Impl Implementer","proxy.PropUint16.Name string"]},{"Name":"struct:proxy.PropUint16Array","Fields":["proxy.PropUint16Array.Impl Implementer","proxy.PropUint16Array.Name string"]},{"Name":"struct:proxy.PropUint32","Fields":["proxy.PropUint32.Impl Implementer","proxy.PropUint32.Name string"]},{"Name":"struct:proxy.PropUint32Array","Fields":["proxy.PropUint32Array.Impl Implementer","proxy.PropUint32Array.Name string"]},{"Name":"struct:proxy.PropUint64","Fields":["proxy.PropUint64.Impl Implementer","proxy.PropUint64.Name string"]},{"Name":"struct:proxy.PropUint64Array","Fields":["proxy.PropUint64Array.Impl Implementer","proxy.PropUint64Array.Name string"]},{"Name":"var:proxy","Fields":["proxy.errNilCallback"]}]}
{"Filepath":"dbusutil/proxy/rule_counter.go","Functions":[{"Uniquefunname":"func DeleteConn(conn *dbus.Conn)","Funname":"DeleteConn","Returntype":"","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (rc *ruleCounter) addMatch(conn *dbus.Conn, rule string) error","Funname":"addMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"},{"Uniquefunname":"func (rc *ruleCounter) deleteConn(conn *dbus.Conn)","Funname":"deleteConn","Returntype":"","Args":"conn *dbus.Conn"},{"Uniquefunname":"func getConnName(conn *dbus.Conn) string","Funname":"getConnName","Returntype":"string","Args":"conn *dbus.Conn"},{"Uniquefunname":"func DeleteConn(conn *dbus.Conn)","Funname":"proxy.DeleteConn","Returntype":"","Args":"conn *dbus.Conn"},{"Uniquefunname":"func getConnName(conn *dbus.Conn) string","Funname":"proxy.getConnName","Returntype":"string","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (rc *ruleCounter) addMatch(conn *dbus.Conn, rule string) error","Funname":"proxy.ruleCounter.addMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"},{"Uniquefunname":"func (rc *ruleCounter) deleteConn(conn *dbus.Conn)","Funname":"proxy.ruleCounter.deleteConn","Returntype":"","Args":"conn *dbus.Conn"},{"Uniquefunname":"func (rc *ruleCounter) removeMatch(conn *dbus.Conn, rule string) error","Funname":"proxy.ruleCounter.removeMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"},{"Uniquefunname":"func (rc *ruleCounter) removeMatch(conn *dbus.Conn, rule string) error","Funname":"removeMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"}],"Records":[{"Name":"var:proxy","Fields":["proxy.globalRuleCounter"]},{"Name":"struct:proxy.ruleCounter","Fields":["proxy.ruleCounter.connRuleCount map[string]map[string]uint","proxy.ruleCounter.mu sync.Mutex"]}]}
{"Filepath":"encoding/kv/reader.go","Functions":[{"Uniquefunname":"func NewReader(r io.Reader) *Reader","Funname":"NewReader","Returntype":"*Reader","Args":"r io.Reader"},{"Uniquefunname":"func (r *Reader) Read() (pair *Pair, err error)","Funname":"Read","Returntype":"(pair *Pair, err error)","Args":""},{"Uniquefunname":"func (r *Reader) ReadAll() (pairs []*Pair, err error)","Funname":"ReadAll","Returntype":"(pairs []*Pair, err error)","Args":""},{"Uniquefunname":"func NewReader(r io.Reader) *Reader","Funname":"kv.NewReader","Returntype":"*Reader","Args":"r io.Reader"},{"Uniquefunname":"func (r *Reader) Read() (pair *Pair, err error)","Funname":"kv.Reader.Read","Returntype":"(pair *Pair, err error)","Args":""},{"Uniquefunname":"func (r *Reader) ReadAll() (pairs []*Pair, err error)","Funname":"kv.Reader.ReadAll","Returntype":"(pairs []*Pair, err error)","Args":""},{"Uniquefunname":"func (r *Reader) parseLine() (*Pair, error)","Funname":"kv.Reader.parseLine","Returntype":"(*Pair, error)","Args":""},{"Uniquefunname":"func (r *Reader) parseLine() (*Pair, error)","Funname":"parseLine","Returntype":"(*Pair, error)","Args":""}],"Records":[{"Name":"var:kv","Fields":["kv.ErrBadLine"]},{"Name":"struct:kv.Pair","Fields":["kv.Pair.Key string","kv.Pair.Value string"]},{"Name":"struct:kv.Reader","Fields":["kv.Reader.Comment byte","kv.Reader.Delim byte","kv.Reader.TrimSpace TrimSpaceFlag","kv.Reader.r *bufio.Reader"]},{"Name":"const:kv","Fields":["kv.TrimAllSpace","kv.TrimDelimLeftSpace","kv.TrimDelimLeftSpace","kv.TrimDelimRightSpace","kv.TrimLeadingSpace","kv.TrimLeadingTailingSpace","kv.TrimTailingSpace"]}]}
{"Filepath":"encoding/kv/reader_test.go","Functions":[{"Uniquefunname":"func TestReader(t *testing.T)","Funname":"TestReader","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestReader(t *testing.T)","Funname":"kv.TestReader","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"event/event.go","Functions":[{"Uniquefunname":"func New(f interface","Funname":"New","Returntype":"*Event","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) Off(f interface","Funname":"Off","Returntype":"error","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) On(f interface","Funname":"On","Returntype":"error","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) Trigger(args ...interface","Funname":"Trigger","Returntype":"error","Args":"args ...interface{}"},{"Uniquefunname":"func (e *Event) checkFuncSignature(f interface","Funname":"checkFuncSignature","Returntype":"(*reflect.Value, error)","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) Off(f interface","Funname":"event.Event.Off","Returntype":"error","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) On(f interface","Funname":"event.Event.On","Returntype":"error","Args":"f interface{}"},{"Uniquefunname":"func (e *Event) Trigger(args ...interface","Funname":"event.Event.Trigger","Returntype":"error","Args":"args ...interface{}"},{"Uniquefunname":"func (e *Event) checkFuncSignature(f interface","Funname":"event.Event.checkFuncSignature","Returntype":"(*reflect.Value, error)","Args":"f interface{}"},{"Uniquefunname":"func New(f interface","Funname":"event.New","Returntype":"*Event","Args":"f interface{}"}],"Records":[{"Name":"struct:event.Event","Fields":["event.Event.argTypes []reflect.Type","event.Event.listeners []reflect.Value","event.Event.lmu sync.RWMutex"]}]}
{"Filepath":"gdkpixbuf/blur.go","Functions":[{"Uniquefunname":"func Blur(pixbuf *C.GdkPixbuf, sigma, numSteps float64) (err error)","Funname":"Blur","Returntype":"(err error)","Args":"pixbuf *C.GdkPixbuf, sigma, numSteps float64"},{"Uniquefunname":"func BlurImage(srcFile, dstFile string, sigma, numSteps float64, f Format) (err error)","Funname":"BlurImage","Returntype":"(err error)","Args":"srcFile, dstFile string, sigma, numSteps float64, f Format"},{"Uniquefunname":"func BlurImageCache(srcFile string, sigma, numSteps float64, f Format)(dstFile string, useCache bool, err error)","Funname":"BlurImageCache","Returntype":"(dstFile string, useCache bool, err error)","Args":"srcFile string, sigma, numSteps float64, f Format"},{"Uniquefunname":"func Blur(pixbuf *C.GdkPixbuf, sigma, numSteps float64) (err error)","Funname":"gdkpixbuf.Blur","Returntype":"(err error)","Args":"pixbuf *C.GdkPixbuf, sigma, numSteps float64"},{"Uniquefunname":"func BlurImage(srcFile, dstFile string, sigma, numSteps float64, f Format) (err error)","Funname":"gdkpixbuf.BlurImage","Returntype":"(err error)","Args":"srcFile, dstFile string, sigma, numSteps float64, f Format"},{"Uniquefunname":"func gdkpixbuf.BlurImageCache(srcFile string, sigma, numSteps float64, f Format)(dstFile string, useCache bool, err error)","Funname":"gdkpixbuf.BlurImageCache","Returntype":"(dstFile string, useCache bool, err error)","Args":"srcFile string, sigma, numSteps float64, f Format"}],"Records":null}
{"Filepath":"gdkpixbuf/constants.go","Functions":null,"Records":[{"Name":"const:gdkpixbuf","Fields":["gdkpixbuf.GDK_COLORSPACE_RGB","gdkpixbuf.GDK_INTERP_BILINEAR","gdkpixbuf.GDK_INTERP_HYPER","gdkpixbuf.GDK_INTERP_NEAREST","gdkpixbuf.GDK_INTERP_TILES","gdkpixbuf.GDK_PIXBUF_ALPHA_BILEVEL","gdkpixbuf.GDK_PIXBUF_ALPHA_FULL","gdkpixbuf.GDK_PIXBUF_ERROR_BAD_OPTION","gdkpixbuf.GDK_PIXBUF_ERROR_CORRUPT_IMAGE","gdkpixbuf.GDK_PIXBUF_ERROR_FAILED","gdkpixbuf.GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY","gdkpixbuf.GDK_PIXBUF_ERROR_UNKNOWN_TYPE","gdkpixbuf.GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION","gdkpixbuf.GDK_PIXBUF_ROTATE_CLOCKWISE","gdkpixbuf.GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE","gdkpixbuf.GDK_PIXBUF_ROTATE_NONE","gdkpixbuf.GDK_PIXBUF_ROTATE_UPSIDEDOWN","gdkpixbuf.GDK_PIXDATA_COLOR_TYPE_MASK","gdkpixbuf.GDK_PIXDATA_COLOR_TYPE_RGB","gdkpixbuf.GDK_PIXDATA_COLOR_TYPE_RGBA","gdkpixbuf.GDK_PIXDATA_DUMP_CONST","gdkpixbuf.GDK_PIXDATA_DUMP_CTYPES","gdkpixbuf.GDK_PIXDATA_DUMP_GTYPES","gdkpixbuf.GDK_PIXDATA_DUMP_MACROS","gdkpixbuf.GDK_PIXDATA_DUMP_PIXDATA_STREAM","gdkpixbuf.GDK_PIXDATA_DUMP_PIXDATA_STRUCT","gdkpixbuf.GDK_PIXDATA_DUMP_RLE_DECODER","gdkpixbuf.GDK_PIXDATA_DUMP_STATIC","gdkpixbuf.GDK_PIXDATA_ENCODING_MASK","gdkpixbuf.GDK_PIXDATA_ENCODING_RAW","gdkpixbuf.GDK_PIXDATA_ENCODING_RLE","gdkpixbuf.GDK_PIXDATA_SAMPLE_WIDTH_8","gdkpixbuf.GDK_PIXDATA_SAMPLE_WIDTH_MASK"]}]}
{"Filepath":"gdkpixbuf/gdkpixbuf.go","Functions":[{"Uniquefunname":"func ClipImage(srcFile, destFile string, srcX, srcY, width, height int, f Format) (err error)","Funname":"ClipImage","Returntype":"(err error)","Args":"srcFile, destFile string, srcX, srcY, width, height int, f Format"},{"Uniquefunname":"func ConvertImage(srcFile, destFile string, f Format) (err error)","Funname":"ConvertImage","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func ConvertImageToXpixmap(imgFile string) (xpixmap x.Pixmap, err error)","Funname":"ConvertImageToXpixmap","Returntype":"(xpixmap x.Pixmap, err error)","Args":"imgFile string"},{"Uniquefunname":"func ConvertPixbufToXpixmap(pixbuf *C.GdkPixbuf) (xpixmap x.Pixmap, err error)","Funname":"ConvertPixbufToXpixmap","Returntype":"(xpixmap x.Pixmap, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func ConvertXpixmapToPixbuf(xpixmap x.Pixmap, width, height int)(pixbuf *C.GdkPixbuf, err error)","Funname":"ConvertXpixmapToPixbuf","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":"xpixmap x.Pixmap, width, height int"},{"Uniquefunname":"func CopyArea(srcPixbuf, destPixbuf *C.GdkPixbuf, srcX, srcY, width, height, destX, destY int)(err error)","Funname":"CopyArea","Returntype":"(err error)","Args":"srcPixbuf, destPixbuf *C.GdkPixbuf, srcX, srcY, width, height, destX, destY int"},{"Uniquefunname":"func CopyAreaSimple(srcPixbuf *C.GdkPixbuf, srcX, srcY, width, height int)(destPixbuf *C.GdkPixbuf, err error)","Funname":"CopyAreaSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, srcX, srcY, width, height int"},{"Uniquefunname":"func Flip(srcPixbuf *C.GdkPixbuf, horizontal bool) (destPixbuf *C.GdkPixbuf, err error)","Funname":"Flip","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, horizontal bool"},{"Uniquefunname":"func FlipImageHorizontal(srcFile, destFile string, f Format) (err error)","Funname":"FlipImageHorizontal","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func FlipImageVertical(srcFile, destFile string, f Format) (err error)","Funname":"FlipImageVertical","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func FreePixbuf(pixbuf *C.GdkPixbuf)","Funname":"FreePixbuf","Returntype":"","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetDominantColor(pixbuf *C.GdkPixbuf) (h, s, v float64, err error)","Funname":"GetDominantColor","Returntype":"(h, s, v float64, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetDominantColorOfImage(imgFile string) (h, s, v float64, err error)","Funname":"GetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetImageFormat(imgFile string) (f Format, err error)","Funname":"GetImageFormat","Returntype":"(f Format, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetImageSize(imgFile string) (w, h int, err error)","Funname":"GetImageSize","Returntype":"(w, h int, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetPixels(pixbuf *C.GdkPixbuf) []byte","Funname":"GetPixels","Returntype":"[]byte","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetSize(pixbuf *C.GdkPixbuf) (w, h int, err error)","Funname":"GetSize","Returntype":"(w, h int, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func InitGdk() (err error)","Funname":"InitGdk","Returntype":"(err error)","Args":""},{"Uniquefunname":"func InitGdkXlib() (err error)","Funname":"InitGdkXlib","Returntype":"(err error)","Args":""},{"Uniquefunname":"func IsSupportedImage(imgFile string) bool","Funname":"IsSupportedImage","Returntype":"bool","Args":"imgFile string"},{"Uniquefunname":"func NewPixbufFromFile(imgFile string) (pixbuf *C.GdkPixbuf, err error)","Funname":"NewPixbufFromFile","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":"imgFile string"},{"Uniquefunname":"func RotateImageLeft(srcFile, destFile string, f Format) (err error)","Funname":"RotateImageLeft","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func RotateImageRight(srcFile, destFile string, f Format) (err error)","Funname":"RotateImageRight","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func RotateImageUpsizedown(srcFile, destFile string, f Format) (err error)","Funname":"RotateImageUpsizedown","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func RotateSimple(srcPixbuf *C.GdkPixbuf, angle GdkPixbufRotation)(destPixbuf *C.GdkPixbuf, err error)","Funname":"RotateSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, angle GdkPixbufRotation"},{"Uniquefunname":"func Save(pixbuf *C.GdkPixbuf, destFile string, f Format) (err error)","Funname":"Save","Returntype":"(err error)","Args":"pixbuf *C.GdkPixbuf, destFile string, f Format"},{"Uniquefunname":"func ScaleImage(srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(err error)","Funname":"ScaleImage","Returntype":"(err error)","Args":"srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ScaleImageCache(srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(destFile string, useCache bool, err error)","Funname":"ScaleImageCache","Returntype":"(destFile string, useCache bool, err error)","Args":"srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ScaleImagePrefer(srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(err error)","Funname":"ScaleImagePrefer","Returntype":"(err error)","Args":"srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ScaleImagePreferCache(srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(destFile string, useCache bool, err error)","Funname":"ScaleImagePreferCache","Returntype":"(destFile string, useCache bool, err error)","Args":"srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ScalePrefer(srcPixbuf *C.GdkPixbuf, newWidth, newHeight int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"ScalePrefer","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, newWidth, newHeight int, interpType GdkInterpType"},{"Uniquefunname":"func ScaleSimple(srcPixbuf *C.GdkPixbuf, newWidth, newHeght int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"ScaleSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, newWidth, newHeght int, interpType GdkInterpType"},{"Uniquefunname":"func Screenshot() (pixbuf *C.GdkPixbuf, err error)","Funname":"Screenshot","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":""},{"Uniquefunname":"func ScreenshotImage(file string, f Format) (err error)","Funname":"ScreenshotImage","Returntype":"(err error)","Args":"file string, f Format"},{"Uniquefunname":"func Thumbnail(srcPixbuf *C.GdkPixbuf, maxWidth, maxHeight int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"Thumbnail","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, maxWidth, maxHeight int, interpType GdkInterpType"},{"Uniquefunname":"func ThumbnailImage(srcFile, destFile string, maxWidth, maxHeight int, interpType GdkInterpType, f Format)(err error)","Funname":"ThumbnailImage","Returntype":"(err error)","Args":"srcFile, destFile string, maxWidth, maxHeight int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ToImage(pixbuf *C.GdkPixbuf) (image.Image, error)","Funname":"ToImage","Returntype":"(image.Image, error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func doFlipImage(srcFile, destFile string, horizontal bool, f Format) (err error)","Funname":"doFlipImage","Returntype":"(err error)","Args":"srcFile, destFile string, horizontal bool, f Format"},{"Uniquefunname":"func doRotateImage(srcFile, destFile string, angle GdkPixbufRotation, f Format) (err error)","Funname":"doRotateImage","Returntype":"(err error)","Args":"srcFile, destFile string, angle GdkPixbufRotation, f Format"},{"Uniquefunname":"func ClipImage(srcFile, destFile string, srcX, srcY, width, height int, f Format) (err error)","Funname":"gdkpixbuf.ClipImage","Returntype":"(err error)","Args":"srcFile, destFile string, srcX, srcY, width, height int, f Format"},{"Uniquefunname":"func ConvertImage(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.ConvertImage","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func ConvertImageToXpixmap(imgFile string) (xpixmap x.Pixmap, err error)","Funname":"gdkpixbuf.ConvertImageToXpixmap","Returntype":"(xpixmap x.Pixmap, err error)","Args":"imgFile string"},{"Uniquefunname":"func ConvertPixbufToXpixmap(pixbuf *C.GdkPixbuf) (xpixmap x.Pixmap, err error)","Funname":"gdkpixbuf.ConvertPixbufToXpixmap","Returntype":"(xpixmap x.Pixmap, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func gdkpixbuf.ConvertXpixmapToPixbuf(xpixmap x.Pixmap, width, height int)(pixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.ConvertXpixmapToPixbuf","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":"xpixmap x.Pixmap, width, height int"},{"Uniquefunname":"func gdkpixbuf.CopyArea(srcPixbuf, destPixbuf *C.GdkPixbuf, srcX, srcY, width, height, destX, destY int)(err error)","Funname":"gdkpixbuf.CopyArea","Returntype":"(err error)","Args":"srcPixbuf, destPixbuf *C.GdkPixbuf, srcX, srcY, width, height, destX, destY int"},{"Uniquefunname":"func gdkpixbuf.CopyAreaSimple(srcPixbuf *C.GdkPixbuf, srcX, srcY, width, height int)(destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.CopyAreaSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, srcX, srcY, width, height int"},{"Uniquefunname":"func Flip(srcPixbuf *C.GdkPixbuf, horizontal bool) (destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.Flip","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, horizontal bool"},{"Uniquefunname":"func FlipImageHorizontal(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.FlipImageHorizontal","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func FlipImageVertical(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.FlipImageVertical","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func FreePixbuf(pixbuf *C.GdkPixbuf)","Funname":"gdkpixbuf.FreePixbuf","Returntype":"","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetDominantColor(pixbuf *C.GdkPixbuf) (h, s, v float64, err error)","Funname":"gdkpixbuf.GetDominantColor","Returntype":"(h, s, v float64, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetDominantColorOfImage(imgFile string) (h, s, v float64, err error)","Funname":"gdkpixbuf.GetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetImageFormat(imgFile string) (f Format, err error)","Funname":"gdkpixbuf.GetImageFormat","Returntype":"(f Format, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetImageSize(imgFile string) (w, h int, err error)","Funname":"gdkpixbuf.GetImageSize","Returntype":"(w, h int, err error)","Args":"imgFile string"},{"Uniquefunname":"func GetPixels(pixbuf *C.GdkPixbuf) []byte","Funname":"gdkpixbuf.GetPixels","Returntype":"[]byte","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func GetSize(pixbuf *C.GdkPixbuf) (w, h int, err error)","Funname":"gdkpixbuf.GetSize","Returntype":"(w, h int, err error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func InitGdk() (err error)","Funname":"gdkpixbuf.InitGdk","Returntype":"(err error)","Args":""},{"Uniquefunname":"func InitGdkXlib() (err error)","Funname":"gdkpixbuf.InitGdkXlib","Returntype":"(err error)","Args":""},{"Uniquefunname":"func IsSupportedImage(imgFile string) bool","Funname":"gdkpixbuf.IsSupportedImage","Returntype":"bool","Args":"imgFile string"},{"Uniquefunname":"func NewPixbufFromFile(imgFile string) (pixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.NewPixbufFromFile","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":"imgFile string"},{"Uniquefunname":"func RotateImageLeft(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.RotateImageLeft","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func RotateImageRight(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.RotateImageRight","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func RotateImageUpsizedown(srcFile, destFile string, f Format) (err error)","Funname":"gdkpixbuf.RotateImageUpsizedown","Returntype":"(err error)","Args":"srcFile, destFile string, f Format"},{"Uniquefunname":"func gdkpixbuf.RotateSimple(srcPixbuf *C.GdkPixbuf, angle GdkPixbufRotation)(destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.RotateSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, angle GdkPixbufRotation"},{"Uniquefunname":"func Save(pixbuf *C.GdkPixbuf, destFile string, f Format) (err error)","Funname":"gdkpixbuf.Save","Returntype":"(err error)","Args":"pixbuf *C.GdkPixbuf, destFile string, f Format"},{"Uniquefunname":"func gdkpixbuf.ScaleImage(srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(err error)","Funname":"gdkpixbuf.ScaleImage","Returntype":"(err error)","Args":"srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func gdkpixbuf.ScaleImageCache(srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(destFile string, useCache bool, err error)","Funname":"gdkpixbuf.ScaleImageCache","Returntype":"(destFile string, useCache bool, err error)","Args":"srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func gdkpixbuf.ScaleImagePrefer(srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(err error)","Funname":"gdkpixbuf.ScaleImagePrefer","Returntype":"(err error)","Args":"srcFile, destFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func gdkpixbuf.ScaleImagePreferCache(srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format)(destFile string, useCache bool, err error)","Funname":"gdkpixbuf.ScaleImagePreferCache","Returntype":"(destFile string, useCache bool, err error)","Args":"srcFile string, newWidth, newHeght int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func gdkpixbuf.ScalePrefer(srcPixbuf *C.GdkPixbuf, newWidth, newHeight int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.ScalePrefer","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, newWidth, newHeight int, interpType GdkInterpType"},{"Uniquefunname":"func gdkpixbuf.ScaleSimple(srcPixbuf *C.GdkPixbuf, newWidth, newHeght int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.ScaleSimple","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, newWidth, newHeght int, interpType GdkInterpType"},{"Uniquefunname":"func Screenshot() (pixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.Screenshot","Returntype":"(pixbuf *C.GdkPixbuf, err error)","Args":""},{"Uniquefunname":"func ScreenshotImage(file string, f Format) (err error)","Funname":"gdkpixbuf.ScreenshotImage","Returntype":"(err error)","Args":"file string, f Format"},{"Uniquefunname":"func gdkpixbuf.Thumbnail(srcPixbuf *C.GdkPixbuf, maxWidth, maxHeight int, interpType GdkInterpType)(destPixbuf *C.GdkPixbuf, err error)","Funname":"gdkpixbuf.Thumbnail","Returntype":"(destPixbuf *C.GdkPixbuf, err error)","Args":"srcPixbuf *C.GdkPixbuf, maxWidth, maxHeight int, interpType GdkInterpType"},{"Uniquefunname":"func gdkpixbuf.ThumbnailImage(srcFile, destFile string, maxWidth, maxHeight int, interpType GdkInterpType, f Format)(err error)","Funname":"gdkpixbuf.ThumbnailImage","Returntype":"(err error)","Args":"srcFile, destFile string, maxWidth, maxHeight int, interpType GdkInterpType, f Format"},{"Uniquefunname":"func ToImage(pixbuf *C.GdkPixbuf) (image.Image, error)","Funname":"gdkpixbuf.ToImage","Returntype":"(image.Image, error)","Args":"pixbuf *C.GdkPixbuf"},{"Uniquefunname":"func doFlipImage(srcFile, destFile string, horizontal bool, f Format) (err error)","Funname":"gdkpixbuf.doFlipImage","Returntype":"(err error)","Args":"srcFile, destFile string, horizontal bool, f Format"},{"Uniquefunname":"func doRotateImage(srcFile, destFile string, angle GdkPixbufRotation, f Format) (err error)","Funname":"gdkpixbuf.doRotateImage","Returntype":"(err error)","Args":"srcFile, destFile string, angle GdkPixbufRotation, f Format"}],"Records":[{"Name":"const:gdkpixbuf","Fields":["gdkpixbuf.FormatBmp","gdkpixbuf.FormatIco","gdkpixbuf.FormatJpeg","gdkpixbuf.FormatPng","gdkpixbuf.FormatTiff"]}]}
{"Filepath":"gdkpixbuf/gdkpixbuf_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) BenchmarkBlurImage(c *C.C)","Funname":"BenchmarkBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) ManualTestScreenshotImage(c *C.C)","Funname":"ManualTestScreenshotImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestBlurImage(c *C.C)","Funname":"TestBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestBlurImageCache(c *C.C)","Funname":"TestBlurImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestClipImage(c *C.C)","Funname":"TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertImage(c *C.C)","Funname":"TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFlipImageHorizontal(c *C.C)","Funname":"TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFlipImageVertical(c *C.C)","Funname":"TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDominantColor(c *C.C)","Funname":"TestGetDominantColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetImageFormat(c *C.C)","Funname":"TestGetImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetImageSize(c *C.C)","Funname":"TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsSupportedImage(c *C.C)","Funname":"TestIsSupportedImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageLeft(c *C.C)","Funname":"TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageRight(c *C.C)","Funname":"TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageUpsizedown(c *C.C)","Funname":"TestRotateImageUpsizedown","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImage(c *C.C)","Funname":"TestScaleImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImageCache(c *C.C)","Funname":"TestScaleImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImagePrefer(c *C.C)","Funname":"TestScaleImagePrefer","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImagePreferCache(c *C.C)","Funname":"TestScaleImagePreferCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestThumbnailImage(c *C.C)","Funname":"TestThumbnailImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"delta","Returntype":"float64","Args":"x, y float64"},{"Uniquefunname":"func gdkpixbuf.Test(t *testing.T)","Funname":"gdkpixbuf.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"gdkpixbuf.delta","Returntype":"float64","Args":"x, y float64"},{"Uniquefunname":"func (*testWrapper) BenchmarkBlurImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.BenchmarkBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) ManualTestScreenshotImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.ManualTestScreenshotImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestBlurImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestBlurImageCache(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestBlurImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestClipImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFlipImageHorizontal(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFlipImageVertical(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDominantColor(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestGetDominantColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetImageFormat(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestGetImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetImageSize(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsSupportedImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestIsSupportedImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageLeft(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageRight(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRotateImageUpsizedown(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestRotateImageUpsizedown","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestScaleImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImageCache(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestScaleImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImagePrefer(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestScaleImagePrefer","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestScaleImagePreferCache(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestScaleImagePreferCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestThumbnailImage(c *C.C)","Funname":"gdkpixbuf.testWrapper.TestThumbnailImage","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:gdkpixbuf","Fields":["gdkpixbuf._"]},{"Name":"const:gdkpixbuf","Fields":["gdkpixbuf.originImg","gdkpixbuf.originImgDominantColorH","gdkpixbuf.originImgDominantColorS","gdkpixbuf.originImgDominantColorV","gdkpixbuf.originImgHeight","gdkpixbuf.originImgIconBmp","gdkpixbuf.originImgIconGif","gdkpixbuf.originImgIconPng1","gdkpixbuf.originImgIconTxt","gdkpixbuf.originImgNotImage","gdkpixbuf.originImgPngSmall","gdkpixbuf.originImgWidth"]}]}
{"Filepath":"gdkpixbuf/utils.go","Functions":[{"Uniquefunname":"func GetPreferScaleClipRect(refWidth, refHeight, imgWidth, imgHeight int)(x, y, w, h int, err error)","Funname":"GetPreferScaleClipRect","Returntype":"(x, y, w, h int, err error)","Args":"refWidth, refHeight, imgWidth, imgHeight int"},{"Uniquefunname":"func Hsv2Rgb(h, s, v float64) (r, g, b uint8)","Funname":"Hsv2Rgb","Returntype":"(r, g, b uint8)","Args":"h, s, v float64"},{"Uniquefunname":"func Rgb2Hsv(r, g, b uint8) (h, s, v float64)","Funname":"Rgb2Hsv","Returntype":"(h, s, v float64)","Args":"r, g, b uint8"},{"Uniquefunname":"func gdkpixbuf.GetPreferScaleClipRect(refWidth, refHeight, imgWidth, imgHeight int)(x, y, w, h int, err error)","Funname":"gdkpixbuf.GetPreferScaleClipRect","Returntype":"(x, y, w, h int, err error)","Args":"refWidth, refHeight, imgWidth, imgHeight int"},{"Uniquefunname":"func Hsv2Rgb(h, s, v float64) (r, g, b uint8)","Funname":"gdkpixbuf.Hsv2Rgb","Returntype":"(r, g, b uint8)","Args":"h, s, v float64"},{"Uniquefunname":"func Rgb2Hsv(r, g, b uint8) (h, s, v float64)","Funname":"gdkpixbuf.Rgb2Hsv","Returntype":"(h, s, v float64)","Args":"r, g, b uint8"},{"Uniquefunname":"func generateCacheFilePath(keyword string) string","Funname":"gdkpixbuf.generateCacheFilePath","Returntype":"string","Args":"keyword string"},{"Uniquefunname":"func generateCacheFilePath(keyword string) string","Funname":"generateCacheFilePath","Returntype":"string","Args":"keyword string"}],"Records":null}
{"Filepath":"gettext/gettext.go","Functions":[{"Uniquefunname":"func Bindtextdomain(domain, dirname string) string","Funname":"Bindtextdomain","Returntype":"string","Args":"domain, dirname string"},{"Uniquefunname":"func DGettext(domain, id string) string","Funname":"DGettext","Returntype":"string","Args":"domain, id string"},{"Uniquefunname":"func DNGettext(domain, msgid, plural string, n int) string","Funname":"DNGettext","Returntype":"string","Args":"domain, msgid, plural string, n int"},{"Uniquefunname":"func InitI18n()","Funname":"InitI18n","Returntype":"","Args":""},{"Uniquefunname":"func NTr(msgid, plural string, n int) string","Funname":"NTr","Returntype":"string","Args":"msgid, plural string, n int"},{"Uniquefunname":"func QueryLang() string","Funname":"QueryLang","Returntype":"string","Args":""},{"Uniquefunname":"func QueryLangs() []string","Funname":"QueryLangs","Returntype":"[]string","Args":""},{"Uniquefunname":"func SetLocale(category int, locale string) string","Funname":"SetLocale","Returntype":"string","Args":"category int, locale string"},{"Uniquefunname":"func Textdomain(domain string)","Funname":"Textdomain","Returntype":"","Args":"domain string"},{"Uniquefunname":"func Tr(id string) string","Funname":"Tr","Returntype":"string","Args":"id string"},{"Uniquefunname":"func Bindtextdomain(domain, dirname string) string","Funname":"gettext.Bindtextdomain","Returntype":"string","Args":"domain, dirname string"},{"Uniquefunname":"func DGettext(domain, id string) string","Funname":"gettext.DGettext","Returntype":"string","Args":"domain, id string"},{"Uniquefunname":"func DNGettext(domain, msgid, plural string, n int) string","Funname":"gettext.DNGettext","Returntype":"string","Args":"domain, msgid, plural string, n int"},{"Uniquefunname":"func InitI18n()","Funname":"gettext.InitI18n","Returntype":"","Args":""},{"Uniquefunname":"func NTr(msgid, plural string, n int) string","Funname":"gettext.NTr","Returntype":"string","Args":"msgid, plural string, n int"},{"Uniquefunname":"func QueryLang() string","Funname":"gettext.QueryLang","Returntype":"string","Args":""},{"Uniquefunname":"func QueryLangs() []string","Funname":"gettext.QueryLangs","Returntype":"[]string","Args":""},{"Uniquefunname":"func SetLocale(category int, locale string) string","Funname":"gettext.SetLocale","Returntype":"string","Args":"category int, locale string"},{"Uniquefunname":"func Textdomain(domain string)","Funname":"gettext.Textdomain","Returntype":"","Args":"domain string"},{"Uniquefunname":"func Tr(id string) string","Funname":"gettext.Tr","Returntype":"string","Args":"id string"}],"Records":[{"Name":"var:gettext","Fields":["gettext.LcAll","gettext.LcCollate","gettext.LcCtype","gettext.LcMessages","gettext.LcMonetary","gettext.LcNumeric","gettext.LcTime"]}]}
{"Filepath":"gettext/gettext_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*gettext) TestDGettext(c *C.C)","Funname":"TestDGettext","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestDNGettext(c *C.C)","Funname":"TestDNGettext","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestFailed(c *C.C)","Funname":"TestFailed","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestNTr(c *C.C)","Funname":"TestNTr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestQueryLang(c *C.C)","Funname":"TestQueryLang","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestTr(c *C.C)","Funname":"TestTr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func gettext.Test(t *testing.T)","Funname":"gettext.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*gettext) TestDGettext(c *C.C)","Funname":"gettext.gettext.TestDGettext","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestDNGettext(c *C.C)","Funname":"gettext.gettext.TestDNGettext","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestFailed(c *C.C)","Funname":"gettext.gettext.TestFailed","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestNTr(c *C.C)","Funname":"gettext.gettext.TestNTr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestQueryLang(c *C.C)","Funname":"gettext.gettext.TestQueryLang","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*gettext) TestTr(c *C.C)","Funname":"gettext.gettext.TestTr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"gettext.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"gettext/testdata/plural/t.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"graphic/clip.go","Functions":[{"Uniquefunname":"func Clip(srcimg image.Image, x, y, w, h int) (dstimg *image.RGBA)","Funname":"Clip","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, x, y, w, h int"},{"Uniquefunname":"func ClipImage(srcfile, dstfile string, x, y, w, h int, f Format) (err error)","Funname":"ClipImage","Returntype":"(err error)","Args":"srcfile, dstfile string, x, y, w, h int, f Format"},{"Uniquefunname":"func ClipImageCache(srcfile string, x, y, w, h int, f Format)(dstfile string, useCache bool, err error)","Funname":"ClipImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, x, y, w, h int, f Format"},{"Uniquefunname":"func Clip(srcimg image.Image, x, y, w, h int) (dstimg *image.RGBA)","Funname":"graphic.Clip","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, x, y, w, h int"},{"Uniquefunname":"func ClipImage(srcfile, dstfile string, x, y, w, h int, f Format) (err error)","Funname":"graphic.ClipImage","Returntype":"(err error)","Args":"srcfile, dstfile string, x, y, w, h int, f Format"},{"Uniquefunname":"func graphic.ClipImageCache(srcfile string, x, y, w, h int, f Format)(dstfile string, useCache bool, err error)","Funname":"graphic.ClipImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, x, y, w, h int, f Format"}],"Records":null}
{"Filepath":"graphic/composite.go","Functions":[{"Uniquefunname":"func Composite(dstimg draw.Image, compimg image.Image, x, y int)","Funname":"Composite","Returntype":"","Args":"dstimg draw.Image, compimg image.Image, x, y int"},{"Uniquefunname":"func CompositeImage(srcfile, compfile, dstfile string, x, y int, f Format) (err error)","Funname":"CompositeImage","Returntype":"(err error)","Args":"srcfile, compfile, dstfile string, x, y int, f Format"},{"Uniquefunname":"func CompositeImageSet(srcfile string, compinfos []CompositeInfo, dstfile string, f Format)(err error)","Funname":"CompositeImageSet","Returntype":"(err error)","Args":"srcfile string, compinfos []CompositeInfo, dstfile string, f Format"},{"Uniquefunname":"func CompositeImageUri(srcDatauri, compDataUri string, x, y int, f Format)(dstDataUri string, err error)","Funname":"CompositeImageUri","Returntype":"(dstDataUri string, err error)","Args":"srcDatauri, compDataUri string, x, y int, f Format"},{"Uniquefunname":"func Len()int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func Less(i, j int)bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func Composite(dstimg draw.Image, compimg image.Image, x, y int)","Funname":"graphic.Composite","Returntype":"","Args":"dstimg draw.Image, compimg image.Image, x, y int"},{"Uniquefunname":"func CompositeImage(srcfile, compfile, dstfile string, x, y int, f Format) (err error)","Funname":"graphic.CompositeImage","Returntype":"(err error)","Args":"srcfile, compfile, dstfile string, x, y int, f Format"},{"Uniquefunname":"func graphic.CompositeImageSet(srcfile string, compinfos []CompositeInfo, dstfile string, f Format)(err error)","Funname":"graphic.CompositeImageSet","Returntype":"(err error)","Args":"srcfile string, compinfos []CompositeInfo, dstfile string, f Format"},{"Uniquefunname":"func graphic.CompositeImageUri(srcDatauri, compDataUri string, x, y int, f Format)(dstDataUri string, err error)","Funname":"graphic.CompositeImageUri","Returntype":"(dstDataUri string, err error)","Args":"srcDatauri, compDataUri string, x, y int, f Format"},{"Uniquefunname":"func graphic.compositeInfoSorter.Len()int","Funname":"graphic.compositeInfoSorter.Len","Returntype":"int","Args":""},{"Uniquefunname":"func graphic.compositeInfoSorter.Less(i, j int)bool","Funname":"graphic.compositeInfoSorter.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func graphic.compositeInfoSorter.Swap(i, j int)","Funname":"graphic.compositeInfoSorter.Swap","Returntype":"","Args":"i, j int"}],"Records":[{"Name":"struct:graphic.CompositeInfo","Fields":["graphic.CompositeInfo.File string","graphic.CompositeInfo.X int","graphic.CompositeInfo.Y int","graphic.CompositeInfo.Z int"]}]}
{"Filepath":"graphic/convert.go","Functions":[{"Uniquefunname":"func ConvertImage(srcfile, dstfile string, f Format) (err error)","Funname":"ConvertImage","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func ConvertImageCache(srcfile string, f Format) (dstfile string, useCache bool, err error)","Funname":"ConvertImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, f Format"},{"Uniquefunname":"func ConvertImage(srcfile, dstfile string, f Format) (err error)","Funname":"graphic.ConvertImage","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func ConvertImageCache(srcfile string, f Format) (dstfile string, useCache bool, err error)","Funname":"graphic.ConvertImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, f Format"}],"Records":null}
{"Filepath":"graphic/data_uri.go","Functions":[{"Uniquefunname":"func ConvertDataUriToImage(dataUri string, dstfile string, f Format) (err error)","Funname":"ConvertDataUriToImage","Returntype":"(err error)","Args":"dataUri string, dstfile string, f Format"},{"Uniquefunname":"func ConvertImageObjectToDataUri(img image.Image, f Format) (dataUri string, err error)","Funname":"ConvertImageObjectToDataUri","Returntype":"(dataUri string, err error)","Args":"img image.Image, f Format"},{"Uniquefunname":"func ConvertImageToDataUri(imgfile string) (dataUri string, err error)","Funname":"ConvertImageToDataUri","Returntype":"(dataUri string, err error)","Args":"imgfile string"},{"Uniquefunname":"func LoadImageFromDataUri(dataUri string) (img image.Image, err error)","Funname":"LoadImageFromDataUri","Returntype":"(img image.Image, err error)","Args":"dataUri string"},{"Uniquefunname":"func ConvertDataUriToImage(dataUri string, dstfile string, f Format) (err error)","Funname":"graphic.ConvertDataUriToImage","Returntype":"(err error)","Args":"dataUri string, dstfile string, f Format"},{"Uniquefunname":"func ConvertImageObjectToDataUri(img image.Image, f Format) (dataUri string, err error)","Funname":"graphic.ConvertImageObjectToDataUri","Returntype":"(dataUri string, err error)","Args":"img image.Image, f Format"},{"Uniquefunname":"func ConvertImageToDataUri(imgfile string) (dataUri string, err error)","Funname":"graphic.ConvertImageToDataUri","Returntype":"(dataUri string, err error)","Args":"imgfile string"},{"Uniquefunname":"func LoadImageFromDataUri(dataUri string) (img image.Image, err error)","Funname":"graphic.LoadImageFromDataUri","Returntype":"(img image.Image, err error)","Args":"dataUri string"},{"Uniquefunname":"func imageFormatToDataUriContentType(f Format) (contentType string)","Funname":"graphic.imageFormatToDataUriContentType","Returntype":"(contentType string)","Args":"f Format"},{"Uniquefunname":"func imageFormatToDataUriContentType(f Format) (contentType string)","Funname":"imageFormatToDataUriContentType","Returntype":"(contentType string)","Args":"f Format"}],"Records":null}
{"Filepath":"graphic/dominant_color.go","Functions":[{"Uniquefunname":"func GetDominantColorOfImage(imgfile string) (h, s, v float64, err error)","Funname":"GetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"imgfile string"},{"Uniquefunname":"func doGetDominantColorOfImage(img image.Image) (h, s, v float64, err error)","Funname":"doGetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"img image.Image"},{"Uniquefunname":"func GetDominantColorOfImage(imgfile string) (h, s, v float64, err error)","Funname":"graphic.GetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"imgfile string"},{"Uniquefunname":"func doGetDominantColorOfImage(img image.Image) (h, s, v float64, err error)","Funname":"graphic.doGetDominantColorOfImage","Returntype":"(h, s, v float64, err error)","Args":"img image.Image"}],"Records":null}
{"Filepath":"graphic/fill.go","Functions":[{"Uniquefunname":"func Fill(srcimg image.Image, width, height int, style FillStyle)(dstimg *image.RGBA, err error)","Funname":"Fill","Returntype":"(dstimg *image.RGBA, err error)","Args":"srcimg image.Image, width, height int, style FillStyle"},{"Uniquefunname":"func FillImage(srcfile, dstfile string, width, height int, style FillStyle, f Format)(err error)","Funname":"FillImage","Returntype":"(err error)","Args":"srcfile, dstfile string, width, height int, style FillStyle, f Format"},{"Uniquefunname":"func FillImageCache(srcfile string, width, height int, style FillStyle, f Format)(dstfile string, useCache bool, err error)","Funname":"FillImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, width, height int, style FillStyle, f Format"},{"Uniquefunname":"func doFillImageInCenterStyle(srcimg image.Image, width, height int) (dstimg *image.RGBA)","Funname":"doFillImageInCenterStyle","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, width, height int"},{"Uniquefunname":"func doFillImageInTileStyle(srcimg image.Image, width, height int) (dstimg *image.RGBA)","Funname":"doFillImageInTileStyle","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, width, height int"},{"Uniquefunname":"func graphic.Fill(srcimg image.Image, width, height int, style FillStyle)(dstimg *image.RGBA, err error)","Funname":"graphic.Fill","Returntype":"(dstimg *image.RGBA, err error)","Args":"srcimg image.Image, width, height int, style FillStyle"},{"Uniquefunname":"func graphic.FillImage(srcfile, dstfile string, width, height int, style FillStyle, f Format)(err error)","Funname":"graphic.FillImage","Returntype":"(err error)","Args":"srcfile, dstfile string, width, height int, style FillStyle, f Format"},{"Uniquefunname":"func graphic.FillImageCache(srcfile string, width, height int, style FillStyle, f Format)(dstfile string, useCache bool, err error)","Funname":"graphic.FillImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, width, height int, style FillStyle, f Format"},{"Uniquefunname":"func doFillImageInCenterStyle(srcimg image.Image, width, height int) (dstimg *image.RGBA)","Funname":"graphic.doFillImageInCenterStyle","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, width, height int"},{"Uniquefunname":"func doFillImageInTileStyle(srcimg image.Image, width, height int) (dstimg *image.RGBA)","Funname":"graphic.doFillImageInTileStyle","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, width, height int"}],"Records":[{"Name":"const:graphic","Fields":["graphic.FillCenter","graphic.FillTile"]}]}
{"Filepath":"graphic/flip.go","Functions":[{"Uniquefunname":"func FlipImageHorizontal(srcfile, dstfile string, f Format) (err error)","Funname":"FlipImageHorizontal","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func FlipImageVertical(srcfile, dstfile string, f Format) (err error)","Funname":"FlipImageVertical","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func doFlipImageHorizontal(srcimg image.Image) (dstimg *image.RGBA)","Funname":"doFlipImageHorizontal","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func doFlipImageVertical(srcimg image.Image) (dstimg *image.RGBA)","Funname":"doFlipImageVertical","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func FlipImageHorizontal(srcfile, dstfile string, f Format) (err error)","Funname":"graphic.FlipImageHorizontal","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func FlipImageVertical(srcfile, dstfile string, f Format) (err error)","Funname":"graphic.FlipImageVertical","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func doFlipImageHorizontal(srcimg image.Image) (dstimg *image.RGBA)","Funname":"graphic.doFlipImageHorizontal","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func doFlipImageVertical(srcimg image.Image) (dstimg *image.RGBA)","Funname":"graphic.doFlipImageVertical","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"}],"Records":null}
{"Filepath":"graphic/format_sniff.go","Functions":[{"Uniquefunname":"func SniffImageFormat(file string) (string, error)","Funname":"SniffImageFormat","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func SniffImageFormat(file string) (string, error)","Funname":"graphic.SniffImageFormat","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func match(magic string, b []byte) bool","Funname":"graphic.match","Returntype":"bool","Args":"magic string, b []byte"},{"Uniquefunname":"func sniff(r *bufio.Reader) format","Funname":"graphic.sniff","Returntype":"format","Args":"r *bufio.Reader"},{"Uniquefunname":"func match(magic string, b []byte) bool","Funname":"match","Returntype":"bool","Args":"magic string, b []byte"},{"Uniquefunname":"func sniff(r *bufio.Reader) format","Funname":"sniff","Returntype":"format","Args":"r *bufio.Reader"}],"Records":[{"Name":"struct:graphic.format","Fields":["graphic.format.magic string","graphic.format.name string"]},{"Name":"var:graphic","Fields":["graphic.formats"]}]}
{"Filepath":"graphic/graphic.go","Functions":null,"Records":[{"Name":"const:graphic","Fields":["graphic.FormatBmp","graphic.FormatJpeg","graphic.FormatPng","graphic.FormatTiff"]}]}
{"Filepath":"graphic/graphic_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (g *testWrapper) TestClipImage(c *C.C)","Funname":"TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImage(c *C.C)","Funname":"TestCompositeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImageSet(c *C.C)","Funname":"TestCompositeImageSet","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImageUri(c *C.C)","Funname":"TestCompositeImageUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertDataUriToImage(c *C.C)","Funname":"TestConvertDataUriToImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertImage(c *C.C)","Funname":"TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertImageToDataUri(c *C.C)","Funname":"TestConvertImageToDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFillImage(c *C.C)","Funname":"TestFillImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFillImageCache(c *C.C)","Funname":"TestFillImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFlipImageHorizontal(c *C.C)","Funname":"TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFlipImageVertical(c *C.C)","Funname":"TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetDominantColor(c *C.C)","Funname":"TestGetDominantColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetIcons(c *C.C)","Funname":"TestGetIcons","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetImageFormat(c *C.C)","Funname":"TestGetImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetImageSize(c *C.C)","Funname":"TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPreferScaleClipRect(c *C.C)","Funname":"TestGetPreferScaleClipRect","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestHsv(c *C.C)","Funname":"TestHsv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestIsSupportedImage(c *C.C)","Funname":"TestIsSupportedImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestLoadImage(c *C.C)","Funname":"TestLoadImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestLoadImageFromDataUri(c *C.C)","Funname":"TestLoadImageFromDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestNewImageWithColor(c *C.C)","Funname":"TestNewImageWithColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestRotateImageLeft(c *C.C)","Funname":"TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestRotateImageRight(c *C.C)","Funname":"TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImage(c *C.C)","Funname":"TestScaleImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImageCache(c *C.C)","Funname":"TestScaleImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImagePrefer(c *C.C)","Funname":"TestScaleImagePrefer","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestSniffImageFormat(c *C.C)","Funname":"TestSniffImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestThumbnailImage(c *C.C)","Funname":"TestThumbnailImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestThumbnailImageCache(c *C.C)","Funname":"TestThumbnailImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"delta","Returntype":"float64","Args":"x, y float64"},{"Uniquefunname":"func graphic.Test(t *testing.T)","Funname":"graphic.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"graphic.delta","Returntype":"float64","Args":"x, y float64"},{"Uniquefunname":"func (g *testWrapper) TestClipImage(c *C.C)","Funname":"graphic.testWrapper.TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImage(c *C.C)","Funname":"graphic.testWrapper.TestCompositeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImageSet(c *C.C)","Funname":"graphic.testWrapper.TestCompositeImageSet","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestCompositeImageUri(c *C.C)","Funname":"graphic.testWrapper.TestCompositeImageUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertDataUriToImage(c *C.C)","Funname":"graphic.testWrapper.TestConvertDataUriToImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertImage(c *C.C)","Funname":"graphic.testWrapper.TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestConvertImageToDataUri(c *C.C)","Funname":"graphic.testWrapper.TestConvertImageToDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFillImage(c *C.C)","Funname":"graphic.testWrapper.TestFillImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFillImageCache(c *C.C)","Funname":"graphic.testWrapper.TestFillImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFlipImageHorizontal(c *C.C)","Funname":"graphic.testWrapper.TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestFlipImageVertical(c *C.C)","Funname":"graphic.testWrapper.TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetDominantColor(c *C.C)","Funname":"graphic.testWrapper.TestGetDominantColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetIcons(c *C.C)","Funname":"graphic.testWrapper.TestGetIcons","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetImageFormat(c *C.C)","Funname":"graphic.testWrapper.TestGetImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestGetImageSize(c *C.C)","Funname":"graphic.testWrapper.TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPreferScaleClipRect(c *C.C)","Funname":"graphic.testWrapper.TestGetPreferScaleClipRect","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestHsv(c *C.C)","Funname":"graphic.testWrapper.TestHsv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestIsSupportedImage(c *C.C)","Funname":"graphic.testWrapper.TestIsSupportedImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestLoadImage(c *C.C)","Funname":"graphic.testWrapper.TestLoadImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestLoadImageFromDataUri(c *C.C)","Funname":"graphic.testWrapper.TestLoadImageFromDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestNewImageWithColor(c *C.C)","Funname":"graphic.testWrapper.TestNewImageWithColor","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestRotateImageLeft(c *C.C)","Funname":"graphic.testWrapper.TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestRotateImageRight(c *C.C)","Funname":"graphic.testWrapper.TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImage(c *C.C)","Funname":"graphic.testWrapper.TestScaleImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImageCache(c *C.C)","Funname":"graphic.testWrapper.TestScaleImageCache","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestScaleImagePrefer(c *C.C)","Funname":"graphic.testWrapper.TestScaleImagePrefer","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestSniffImageFormat(c *C.C)","Funname":"graphic.testWrapper.TestSniffImageFormat","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestThumbnailImage(c *C.C)","Funname":"graphic.testWrapper.TestThumbnailImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *testWrapper) TestThumbnailImageCache(c *C.C)","Funname":"graphic.testWrapper.TestThumbnailImageCache","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:graphic","Fields":["graphic._"]},{"Name":"const:graphic","Fields":["graphic.originIconHeight","graphic.originIconWidth","graphic.originImg","graphic.originImgDominantColorH","graphic.originImgDominantColorS","graphic.originImgDominantColorV","graphic.originImgHeight","graphic.originImgNotImage","graphic.originImgPngIcon1","graphic.originImgPngIcon2","graphic.originImgPngSmall","graphic.originImgWidth","graphic.testDataUri"]}]}
{"Filepath":"graphic/hsv.go","Functions":[{"Uniquefunname":"func Hsv2Rgb(h, s, v float64) (r, g, b uint8)","Funname":"Hsv2Rgb","Returntype":"(r, g, b uint8)","Args":"h, s, v float64"},{"Uniquefunname":"func Rgb2Hsv(r, g, b uint8) (h, s, v float64)","Funname":"Rgb2Hsv","Returntype":"(h, s, v float64)","Args":"r, g, b uint8"},{"Uniquefunname":"func Hsv2Rgb(h, s, v float64) (r, g, b uint8)","Funname":"graphic.Hsv2Rgb","Returntype":"(r, g, b uint8)","Args":"h, s, v float64"},{"Uniquefunname":"func Rgb2Hsv(r, g, b uint8) (h, s, v float64)","Funname":"graphic.Rgb2Hsv","Returntype":"(h, s, v float64)","Args":"r, g, b uint8"}],"Records":null}
{"Filepath":"graphic/info.go","Functions":[{"Uniquefunname":"func GetImageFormat(imgfile string) (format Format, err error)","Funname":"GetImageFormat","Returntype":"(format Format, err error)","Args":"imgfile string"},{"Uniquefunname":"func GetImageSize(imgfile string) (w, h int, err error)","Funname":"GetImageSize","Returntype":"(w, h int, err error)","Args":"imgfile string"},{"Uniquefunname":"func GetImagesInDir(dir string) ([]string, error)","Funname":"GetImagesInDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func GetSize(img image.Image) (w, h int)","Funname":"GetSize","Returntype":"(w, h int)","Args":"img image.Image"},{"Uniquefunname":"func IsSupportedImage(imgfile string) bool","Funname":"IsSupportedImage","Returntype":"bool","Args":"imgfile string"},{"Uniquefunname":"func GetImageFormat(imgfile string) (format Format, err error)","Funname":"graphic.GetImageFormat","Returntype":"(format Format, err error)","Args":"imgfile string"},{"Uniquefunname":"func GetImageSize(imgfile string) (w, h int, err error)","Funname":"graphic.GetImageSize","Returntype":"(w, h int, err error)","Args":"imgfile string"},{"Uniquefunname":"func GetImagesInDir(dir string) ([]string, error)","Funname":"graphic.GetImagesInDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func GetSize(img image.Image) (w, h int)","Funname":"graphic.GetSize","Returntype":"(w, h int)","Args":"img image.Image"},{"Uniquefunname":"func IsSupportedImage(imgfile string) bool","Funname":"graphic.IsSupportedImage","Returntype":"bool","Args":"imgfile string"}],"Records":null}
{"Filepath":"graphic/new.go","Functions":[{"Uniquefunname":"func NewImageWithColor(dstfile string, width, height int, r, g, b, a uint8, f Format)(err error)","Funname":"NewImageWithColor","Returntype":"(err error)","Args":"dstfile string, width, height int, r, g, b, a uint8, f Format"},{"Uniquefunname":"func NewWithColor(width, height int, r, g, b, a uint8) (dstimg *image.RGBA, err error)","Funname":"NewWithColor","Returntype":"(dstimg *image.RGBA, err error)","Args":"width, height int, r, g, b, a uint8"},{"Uniquefunname":"func graphic.NewImageWithColor(dstfile string, width, height int, r, g, b, a uint8, f Format)(err error)","Funname":"graphic.NewImageWithColor","Returntype":"(err error)","Args":"dstfile string, width, height int, r, g, b, a uint8, f Format"},{"Uniquefunname":"func NewWithColor(width, height int, r, g, b, a uint8) (dstimg *image.RGBA, err error)","Funname":"graphic.NewWithColor","Returntype":"(dstimg *image.RGBA, err error)","Args":"width, height int, r, g, b, a uint8"}],"Records":null}
{"Filepath":"graphic/rotate.go","Functions":[{"Uniquefunname":"func RotateImageLeft(srcfile, dstfile string, f Format) (err error)","Funname":"RotateImageLeft","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func RotateImageRight(srcfile, dstfile string, f Format) (err error)","Funname":"RotateImageRight","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func doRotateImageLeft(srcimg image.Image) (dstimg *image.RGBA)","Funname":"doRotateImageLeft","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func doRotateImageRight(srcimg image.Image) (dstimg *image.RGBA)","Funname":"doRotateImageRight","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func RotateImageLeft(srcfile, dstfile string, f Format) (err error)","Funname":"graphic.RotateImageLeft","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func RotateImageRight(srcfile, dstfile string, f Format) (err error)","Funname":"graphic.RotateImageRight","Returntype":"(err error)","Args":"srcfile, dstfile string, f Format"},{"Uniquefunname":"func doRotateImageLeft(srcimg image.Image) (dstimg *image.RGBA)","Funname":"graphic.doRotateImageLeft","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"},{"Uniquefunname":"func doRotateImageRight(srcimg image.Image) (dstimg *image.RGBA)","Funname":"graphic.doRotateImageRight","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image"}],"Records":null}
{"Filepath":"graphic/save_load.go","Functions":[{"Uniquefunname":"func LoadImage(imgfile string) (img image.Image, err error)","Funname":"LoadImage","Returntype":"(img image.Image, err error)","Args":"imgfile string"},{"Uniquefunname":"func SaveImage(dstfile string, m image.Image, f Format) (err error)","Funname":"SaveImage","Returntype":"(err error)","Args":"dstfile string, m image.Image, f Format"},{"Uniquefunname":"func doSaveImage(w io.Writer, m image.Image, f Format) (err error)","Funname":"doSaveImage","Returntype":"(err error)","Args":"w io.Writer, m image.Image, f Format"},{"Uniquefunname":"func LoadImage(imgfile string) (img image.Image, err error)","Funname":"graphic.LoadImage","Returntype":"(img image.Image, err error)","Args":"imgfile string"},{"Uniquefunname":"func SaveImage(dstfile string, m image.Image, f Format) (err error)","Funname":"graphic.SaveImage","Returntype":"(err error)","Args":"dstfile string, m image.Image, f Format"},{"Uniquefunname":"func doSaveImage(w io.Writer, m image.Image, f Format) (err error)","Funname":"graphic.doSaveImage","Returntype":"(err error)","Args":"w io.Writer, m image.Image, f Format"}],"Records":null}
{"Filepath":"graphic/scale.go","Functions":[{"Uniquefunname":"func GetPreferScaleClipRect(refWidth, refHeight, imgWidth, imgHeight int)(x, y, w, h int, err error)","Funname":"GetPreferScaleClipRect","Returntype":"(x, y, w, h int, err error)","Args":"refWidth, refHeight, imgWidth, imgHeight int"},{"Uniquefunname":"func Scale(srcimg image.Image, newWidth, newHeight int) (dstimg *image.RGBA)","Funname":"Scale","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, newWidth, newHeight int"},{"Uniquefunname":"func ScaleImage(srcfile, dstfile string, newWidth, newHeight int, f Format) (err error)","Funname":"ScaleImage","Returntype":"(err error)","Args":"srcfile, dstfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func ScaleImageCache(srcfile string, newWidth, newHeight int, f Format)(dstfile string, useCache bool, err error)","Funname":"ScaleImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func ScaleImagePrefer(srcfile, dstfile string, newWidth, newHeight int, f Format) (err error)","Funname":"ScaleImagePrefer","Returntype":"(err error)","Args":"srcfile, dstfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func ScalePrefer(srcimg image.Image, newWidth, newHeight int) (dstimg *image.RGBA, err error)","Funname":"ScalePrefer","Returntype":"(dstimg *image.RGBA, err error)","Args":"srcimg image.Image, newWidth, newHeight int"},{"Uniquefunname":"func Thumbnail(srcimg image.Image, maxWidth, maxHeight int) (dstimg *image.RGBA)","Funname":"Thumbnail","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, maxWidth, maxHeight int"},{"Uniquefunname":"func ThumbnailImage(srcfile, dstfile string, maxWidth, maxHeight int, f Format) (err error)","Funname":"ThumbnailImage","Returntype":"(err error)","Args":"srcfile, dstfile string, maxWidth, maxHeight int, f Format"},{"Uniquefunname":"func ThumbnailImageCache(srcfile string, maxWidth, maxHeight int, f Format)(dstfile string, useCache bool, err error)","Funname":"ThumbnailImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, maxWidth, maxHeight int, f Format"},{"Uniquefunname":"func doScaleNearestNeighbor(img image.Image, newWidth, newHeight int) (newimg *image.RGBA)","Funname":"doScaleNearestNeighbor","Returntype":"(newimg *image.RGBA)","Args":"img image.Image, newWidth, newHeight int"},{"Uniquefunname":"func graphic.GetPreferScaleClipRect(refWidth, refHeight, imgWidth, imgHeight int)(x, y, w, h int, err error)","Funname":"graphic.GetPreferScaleClipRect","Returntype":"(x, y, w, h int, err error)","Args":"refWidth, refHeight, imgWidth, imgHeight int"},{"Uniquefunname":"func Scale(srcimg image.Image, newWidth, newHeight int) (dstimg *image.RGBA)","Funname":"graphic.Scale","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, newWidth, newHeight int"},{"Uniquefunname":"func ScaleImage(srcfile, dstfile string, newWidth, newHeight int, f Format) (err error)","Funname":"graphic.ScaleImage","Returntype":"(err error)","Args":"srcfile, dstfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func graphic.ScaleImageCache(srcfile string, newWidth, newHeight int, f Format)(dstfile string, useCache bool, err error)","Funname":"graphic.ScaleImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func ScaleImagePrefer(srcfile, dstfile string, newWidth, newHeight int, f Format) (err error)","Funname":"graphic.ScaleImagePrefer","Returntype":"(err error)","Args":"srcfile, dstfile string, newWidth, newHeight int, f Format"},{"Uniquefunname":"func ScalePrefer(srcimg image.Image, newWidth, newHeight int) (dstimg *image.RGBA, err error)","Funname":"graphic.ScalePrefer","Returntype":"(dstimg *image.RGBA, err error)","Args":"srcimg image.Image, newWidth, newHeight int"},{"Uniquefunname":"func Thumbnail(srcimg image.Image, maxWidth, maxHeight int) (dstimg *image.RGBA)","Funname":"graphic.Thumbnail","Returntype":"(dstimg *image.RGBA)","Args":"srcimg image.Image, maxWidth, maxHeight int"},{"Uniquefunname":"func ThumbnailImage(srcfile, dstfile string, maxWidth, maxHeight int, f Format) (err error)","Funname":"graphic.ThumbnailImage","Returntype":"(err error)","Args":"srcfile, dstfile string, maxWidth, maxHeight int, f Format"},{"Uniquefunname":"func graphic.ThumbnailImageCache(srcfile string, maxWidth, maxHeight int, f Format)(dstfile string, useCache bool, err error)","Funname":"graphic.ThumbnailImageCache","Returntype":"(dstfile string, useCache bool, err error)","Args":"srcfile string, maxWidth, maxHeight int, f Format"},{"Uniquefunname":"func doScaleNearestNeighbor(img image.Image, newWidth, newHeight int) (newimg *image.RGBA)","Funname":"graphic.doScaleNearestNeighbor","Returntype":"(newimg *image.RGBA)","Args":"img image.Image, newWidth, newHeight int"}],"Records":null}
{"Filepath":"graphic/utils.go","Functions":[{"Uniquefunname":"func convertToRGBA(img image.Image) (rgba *image.RGBA)","Funname":"convertToRGBA","Returntype":"(rgba *image.RGBA)","Args":"img image.Image"},{"Uniquefunname":"func generateCacheFilePath(keyword string) (dstfile string)","Funname":"generateCacheFilePath","Returntype":"(dstfile string)","Args":"keyword string"},{"Uniquefunname":"func convertToRGBA(img image.Image) (rgba *image.RGBA)","Funname":"graphic.convertToRGBA","Returntype":"(rgba *image.RGBA)","Args":"img image.Image"},{"Uniquefunname":"func generateCacheFilePath(keyword string) (dstfile string)","Funname":"graphic.generateCacheFilePath","Returntype":"(dstfile string)","Args":"keyword string"},{"Uniquefunname":"func isFileExists(file string) bool","Funname":"graphic.isFileExists","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func openFileOrCreate(file string) (*os.File, error)","Funname":"graphic.openFileOrCreate","Returntype":"(*os.File, error)","Args":"file string"},{"Uniquefunname":"func isFileExists(file string) bool","Funname":"isFileExists","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func openFileOrCreate(file string) (*os.File, error)","Funname":"openFileOrCreate","Returntype":"(*os.File, error)","Args":"file string"}],"Records":null}
{"Filepath":"gsettings/monitor.go","Functions":[{"Uniquefunname":"func ConnectChanged(schemaOrPath, key string, fn ChangedCallbackFunc)","Funname":"ConnectChanged","Returntype":"","Args":"schemaOrPath, key string, fn ChangedCallbackFunc"},{"Uniquefunname":"func StartMonitor() error","Funname":"StartMonitor","Returntype":"error","Args":""},{"Uniquefunname":"func addMatch(bus *dbus.Conn, rule string) error","Funname":"addMatch","Returntype":"error","Args":"bus *dbus.Conn, rule string"},{"Uniquefunname":"func ConnectChanged(schemaOrPath, key string, fn ChangedCallbackFunc)","Funname":"gsettings.ConnectChanged","Returntype":"","Args":"schemaOrPath, key string, fn ChangedCallbackFunc"},{"Uniquefunname":"func StartMonitor() error","Funname":"gsettings.StartMonitor","Returntype":"error","Args":""},{"Uniquefunname":"func addMatch(bus *dbus.Conn, rule string) error","Funname":"gsettings.addMatch","Returntype":"error","Args":"bus *dbus.Conn, rule string"},{"Uniquefunname":"func handleSignal(keyPath string)","Funname":"gsettings.handleSignal","Returntype":"","Args":"keyPath string"},{"Uniquefunname":"func initBus() (*dbus.Conn, error)","Funname":"gsettings.initBus","Returntype":"(*dbus.Conn, error)","Args":""},{"Uniquefunname":"func toPath(schemaOrPath string) string","Funname":"gsettings.toPath","Returntype":"string","Args":"schemaOrPath string"},{"Uniquefunname":"func handleSignal(keyPath string)","Funname":"handleSignal","Returntype":"","Args":"keyPath string"},{"Uniquefunname":"func initBus() (*dbus.Conn, error)","Funname":"initBus","Returntype":"(*dbus.Conn, error)","Args":""},{"Uniquefunname":"func toPath(schemaOrPath string) string","Funname":"toPath","Returntype":"string","Args":"schemaOrPath string"}],"Records":[{"Name":"struct:gsettings.changedCallback","Fields":["gsettings.changedCallback.all bool","gsettings.changedCallback.fns []ChangedCallbackFunc"]},{"Name":"var:gsettings","Fields":["gsettings.changedCallbackMap","gsettings.changedCallbackMapMu","gsettings.started","gsettings.startedMu"]}]}
{"Filepath":"imgutil/format_sniff.go","Functions":[{"Uniquefunname":"func SniffFormat(file string) (string, error)","Funname":"SniffFormat","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func SniffFormat(file string) (string, error)","Funname":"imgutil.SniffFormat","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func match(magic string, b []byte) bool","Funname":"imgutil.match","Returntype":"bool","Args":"magic string, b []byte"},{"Uniquefunname":"func sniff(r *bufio.Reader) format","Funname":"imgutil.sniff","Returntype":"format","Args":"r *bufio.Reader"},{"Uniquefunname":"func match(magic string, b []byte) bool","Funname":"match","Returntype":"bool","Args":"magic string, b []byte"},{"Uniquefunname":"func sniff(r *bufio.Reader) format","Funname":"sniff","Returntype":"format","Args":"r *bufio.Reader"}],"Records":[{"Name":"struct:imgutil.format","Fields":["imgutil.format.magic string","imgutil.format.name string"]},{"Name":"var:imgutil","Fields":["imgutil.formats"]}]}
{"Filepath":"imgutil/imgutil.go","Functions":[{"Uniquefunname":"func CanDecodeConfig(filename string) bool","Funname":"CanDecodeConfig","Returntype":"bool","Args":"filename string"},{"Uniquefunname":"func GetSupportedFormats() strv.Strv","Funname":"GetSupportedFormats","Returntype":"strv.Strv","Args":""},{"Uniquefunname":"func IsSupported(filename string) bool","Funname":"IsSupported","Returntype":"bool","Args":"filename string"},{"Uniquefunname":"func Load(filename string) (image.Image, error)","Funname":"Load","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func SavePng(img image.Image, filename string, enc *png.Encoder) error","Funname":"SavePng","Returntype":"error","Args":"img image.Image, filename string, enc *png.Encoder"},{"Uniquefunname":"func CanDecodeConfig(filename string) bool","Funname":"imgutil.CanDecodeConfig","Returntype":"bool","Args":"filename string"},{"Uniquefunname":"func GetSupportedFormats() strv.Strv","Funname":"imgutil.GetSupportedFormats","Returntype":"strv.Strv","Args":""},{"Uniquefunname":"func IsSupported(filename string) bool","Funname":"imgutil.IsSupported","Returntype":"bool","Args":"filename string"},{"Uniquefunname":"func Load(filename string) (image.Image, error)","Funname":"imgutil.Load","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func SavePng(img image.Image, filename string, enc *png.Encoder) error","Funname":"imgutil.SavePng","Returntype":"error","Args":"img image.Image, filename string, enc *png.Encoder"},{"Uniquefunname":"func loadCommon(filename string) (image.Image, error)","Funname":"imgutil.loadCommon","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadViaGdkPixbuf(filename string) (image.Image, error)","Funname":"imgutil.loadViaGdkPixbuf","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadCommon(filename string) (image.Image, error)","Funname":"loadCommon","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadViaGdkPixbuf(filename string) (image.Image, error)","Funname":"loadViaGdkPixbuf","Returntype":"(image.Image, error)","Args":"filename string"}],"Records":[{"Name":"const:imgutil","Fields":["imgutil.FormatBMP","imgutil.FormatGIF","imgutil.FormatJPEG","imgutil.FormatPNG","imgutil.FormatTIFF"]},{"Name":"var:imgutil","Fields":["imgutil.supportedFormats"]}]}
{"Filepath":"imgutil/imgutil_test.go","Functions":[{"Uniquefunname":"func TestCanDecodeConfig(t *testing.T)","Funname":"TestCanDecodeConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsSupported(t *testing.T)","Funname":"TestIsSupported","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoad(t *testing.T)","Funname":"TestLoad","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSavePng(t *testing.T)","Funname":"TestSavePng","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSniffFormat(t *testing.T)","Funname":"TestSniffFormat","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCanDecodeConfig(t *testing.T)","Funname":"imgutil.TestCanDecodeConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsSupported(t *testing.T)","Funname":"imgutil.TestIsSupported","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoad(t *testing.T)","Funname":"imgutil.TestLoad","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSavePng(t *testing.T)","Funname":"imgutil.TestSavePng","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSniffFormat(t *testing.T)","Funname":"imgutil.TestSniffFormat","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"initializer/initializer.go","Functions":[{"Uniquefunname":"func (i *Initializer) GetError() error","Funname":"GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (i *Initializer) Init(fn func(interface","Funname":"Init","Returntype":"*Initializer","Args":"fn func(interface{}) (interface{}, error)"},{"Uniquefunname":"func NewInitializer() *Initializer","Funname":"NewInitializer","Returntype":"*Initializer","Args":""},{"Uniquefunname":"func initWithHandler(fn func(interface{}) (interface{}, error), handler func(interface{}) (interface{}, error))*Initializer","Funname":"initWithHandler","Returntype":"*Initializer","Args":"fn func(interface{}) (interface{}, error), handler func(interface{}) (interface{}, error)"},{"Uniquefunname":"func (i *Initializer) GetError() error","Funname":"initializer.Initializer.GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (i *Initializer) Init(fn func(interface","Funname":"initializer.Initializer.Init","Returntype":"*Initializer","Args":"fn func(interface{}) (interface{}, error)"},{"Uniquefunname":"func initializer.Initializer.initWithHandler(fn func(interface{}) (interface{}, error), handler func(interface{}) (interface{}, error))*Initializer","Funname":"initializer.Initializer.initWithHandler","Returntype":"*Initializer","Args":"fn func(interface{}) (interface{}, error), handler func(interface{}) (interface{}, error)"},{"Uniquefunname":"func NewInitializer() *Initializer","Funname":"initializer.NewInitializer","Returntype":"*Initializer","Args":""},{"Uniquefunname":"func noop(v interface","Funname":"initializer.noop","Returntype":"(interface{}, error)","Args":"v interface{}"},{"Uniquefunname":"func noop(v interface","Funname":"noop","Returntype":"(interface{}, error)","Args":"v interface{}"}],"Records":[{"Name":"struct:initializer.Initializer","Fields":["initializer.Initializer.e error","initializer.Initializer.v interface{}"]}]}
{"Filepath":"initializer/initializer_test.go","Functions":[{"Uniquefunname":"func TestInitializer(t *testing.T)","Funname":"TestInitializer","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestInitializerError(t *testing.T)","Funname":"TestInitializerError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestInitializer(t *testing.T)","Funname":"initializer_test.TestInitializer","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestInitializerError(t *testing.T)","Funname":"initializer_test.TestInitializerError","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"initializer/v2/initializer.go","Functions":[{"Uniquefunname":"func (i *Initializer) Do(fn func() error) *Initializer","Funname":"Do","Returntype":"*Initializer","Args":"fn func() error"},{"Uniquefunname":"func Do(fn func() error) *Initializer","Funname":"Do","Returntype":"*Initializer","Args":"fn func() error"},{"Uniquefunname":"func (i *Initializer) GetError() error","Funname":"GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (i *Initializer) init(fn func() error) *Initializer","Funname":"init","Returntype":"*Initializer","Args":"fn func() error"},{"Uniquefunname":"func Do(fn func() error) *Initializer","Funname":"initializer.Do","Returntype":"*Initializer","Args":"fn func() error"},{"Uniquefunname":"func (i *Initializer) Do(fn func() error) *Initializer","Funname":"initializer.Initializer.Do","Returntype":"*Initializer","Args":"fn func() error"},{"Uniquefunname":"func (i *Initializer) GetError() error","Funname":"initializer.Initializer.GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (i *Initializer) init(fn func() error) *Initializer","Funname":"initializer.Initializer.init","Returntype":"*Initializer","Args":"fn func() error"}],"Records":[{"Name":"struct:initializer.Initializer","Fields":["initializer.Initializer.e error"]}]}
{"Filepath":"initializer/v2/initializer_test.go","Functions":[{"Uniquefunname":"func TestInitializer(t *testing.T)","Funname":"TestInitializer","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestInitializerError(t *testing.T)","Funname":"TestInitializerError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func e1() error","Funname":"e1","Returntype":"error","Args":""},{"Uniquefunname":"func e2() error","Funname":"e2","Returntype":"error","Args":""},{"Uniquefunname":"func TestInitializer(t *testing.T)","Funname":"initializer_test.TestInitializer","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestInitializerError(t *testing.T)","Funname":"initializer_test.TestInitializerError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func e1() error","Funname":"initializer_test.e1","Returntype":"error","Args":""},{"Uniquefunname":"func e2() error","Funname":"initializer_test.e2","Returntype":"error","Args":""}],"Records":null}
{"Filepath":"iso/country.go","Functions":[{"Uniquefunname":"func GetAllCountryCode() (codeList []string, err error)","Funname":"GetAllCountryCode","Returntype":"(codeList []string, err error)","Args":""},{"Uniquefunname":"func GetAllCountryNames() (nameList []string, err error)","Funname":"GetAllCountryNames","Returntype":"(nameList []string, err error)","Args":""},{"Uniquefunname":"func GetCountryCodeForLanguage(language string) (code string, err error)","Funname":"GetCountryCodeForLanguage","Returntype":"(code string, err error)","Args":"language string"},{"Uniquefunname":"func GetCountryDatabase() (*CountryDatabase, error)","Funname":"GetCountryDatabase","Returntype":"(*CountryDatabase, error)","Args":""},{"Uniquefunname":"func GetCountryNameForCode(code string) (name string, err error)","Funname":"GetCountryNameForCode","Returntype":"(name string, err error)","Args":"code string"},{"Uniquefunname":"func GetLocaleCountryCode() (code string, err error)","Funname":"GetLocaleCountryCode","Returntype":"(code string, err error)","Args":""},{"Uniquefunname":"func GetLocaleCountryName() (name string, err error)","Funname":"GetLocaleCountryName","Returntype":"(name string, err error)","Args":""},{"Uniquefunname":"func getLocalLanguage() string","Funname":"getLocalLanguage","Returntype":"string","Args":""},{"Uniquefunname":"func GetAllCountryCode() (codeList []string, err error)","Funname":"iso.GetAllCountryCode","Returntype":"(codeList []string, err error)","Args":""},{"Uniquefunname":"func GetAllCountryNames() (nameList []string, err error)","Funname":"iso.GetAllCountryNames","Returntype":"(nameList []string, err error)","Args":""},{"Uniquefunname":"func GetCountryCodeForLanguage(language string) (code string, err error)","Funname":"iso.GetCountryCodeForLanguage","Returntype":"(code string, err error)","Args":"language string"},{"Uniquefunname":"func GetCountryDatabase() (*CountryDatabase, error)","Funname":"iso.GetCountryDatabase","Returntype":"(*CountryDatabase, error)","Args":""},{"Uniquefunname":"func GetCountryNameForCode(code string) (name string, err error)","Funname":"iso.GetCountryNameForCode","Returntype":"(name string, err error)","Args":"code string"},{"Uniquefunname":"func GetLocaleCountryCode() (code string, err error)","Funname":"iso.GetLocaleCountryCode","Returntype":"(code string, err error)","Args":""},{"Uniquefunname":"func GetLocaleCountryName() (name string, err error)","Funname":"iso.GetLocaleCountryName","Returntype":"(name string, err error)","Args":""},{"Uniquefunname":"func getLocalLanguage() string","Funname":"iso.getLocalLanguage","Returntype":"string","Args":""}],"Records":[{"Name":"struct:iso.Country","Fields":["iso.Country.Alpha2Code string","iso.Country.Alpha3Code string","iso.Country.CommonName string","iso.Country.Name string","iso.Country.NumericCode string","iso.Country.OfficialName string"]},{"Name":"struct:iso.CountryDatabase","Fields":["iso.CountryDatabase.Countries []Country"]},{"Name":"var:iso","Fields":["iso.countryDatabase","iso.countryDatabaseLock","iso.errCountryCodeInvalid","iso.errLanguageFormatInvalid"]},{"Name":"const:iso","Fields":["iso.iso3166XMLFile"]}]}
{"Filepath":"iso/country_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestGetCountryCodeForLanguage(c *C.C)","Funname":"TestGetCountryCodeForLanguage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCountryDatabase(c *C.C)","Funname":"TestGetCountryDatabase","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCountryInfoForCode(c *C.C)","Funname":"TestGetCountryInfoForCode","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetLocaleCountryInfo(c *C.C)","Funname":"TestGetLocaleCountryInfo","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCountryCodeForLanguage(c *C.C)","Funname":"iso.testWrapper.TestGetCountryCodeForLanguage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCountryDatabase(c *C.C)","Funname":"iso.testWrapper.TestGetCountryDatabase","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCountryInfoForCode(c *C.C)","Funname":"iso.testWrapper.TestGetCountryInfoForCode","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetLocaleCountryInfo(c *C.C)","Funname":"iso.testWrapper.TestGetLocaleCountryInfo","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"const:iso","Fields":["iso.envLanguage"]}]}
{"Filepath":"iso/iso_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func iso.Test(t *testing.T)","Funname":"iso.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"iso.init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"keyfile/get.go","Functions":[{"Uniquefunname":"func (err ValueInvalidUTF8Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (f *KeyFile) GetBoolList(section, key string) ([]bool, error)","Funname":"GetBoolList","Returntype":"([]bool, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetFloat64(section, key string) (float64, error)","Funname":"GetFloat64","Returntype":"(float64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetFloat64List(section, key string) ([]float64, error)","Funname":"GetFloat64List","Returntype":"([]float64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetInt(section, key string) (int, error)","Funname":"GetInt","Returntype":"(int, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetInt64(section, key string) (int64, error)","Funname":"GetInt64","Returntype":"(int64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetIntList(section, key string) ([]int, error)","Funname":"GetIntList","Returntype":"([]int, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetLocaleString(section, key, locale string) (string, error)","Funname":"GetLocaleString","Returntype":"(string, error)","Args":"section, key, locale string"},{"Uniquefunname":"func (f *KeyFile) GetLocaleStringList(section, key, locale string) ([]string, error)","Funname":"GetLocaleStringList","Returntype":"([]string, error)","Args":"section, key, locale string"},{"Uniquefunname":"func (f *KeyFile) GetString(section, key string) (string, error)","Funname":"GetString","Returntype":"(string, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetStringList(section, key string) ([]string, error)","Funname":"GetStringList","Returntype":"([]string, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetUint64(section, key string) (uint64, error)","Funname":"GetUint64","Returntype":"(uint64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetBoolList(section, key string) ([]bool, error)","Funname":"keyfile.KeyFile.GetBoolList","Returntype":"([]bool, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetFloat64(section, key string) (float64, error)","Funname":"keyfile.KeyFile.GetFloat64","Returntype":"(float64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetFloat64List(section, key string) ([]float64, error)","Funname":"keyfile.KeyFile.GetFloat64List","Returntype":"([]float64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetInt(section, key string) (int, error)","Funname":"keyfile.KeyFile.GetInt","Returntype":"(int, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetInt64(section, key string) (int64, error)","Funname":"keyfile.KeyFile.GetInt64","Returntype":"(int64, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetIntList(section, key string) ([]int, error)","Funname":"keyfile.KeyFile.GetIntList","Returntype":"([]int, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetLocaleString(section, key, locale string) (string, error)","Funname":"keyfile.KeyFile.GetLocaleString","Returntype":"(string, error)","Args":"section, key, locale string"},{"Uniquefunname":"func (f *KeyFile) GetLocaleStringList(section, key, locale string) ([]string, error)","Funname":"keyfile.KeyFile.GetLocaleStringList","Returntype":"([]string, error)","Args":"section, key, locale string"},{"Uniquefunname":"func (f *KeyFile) GetString(section, key string) (string, error)","Funname":"keyfile.KeyFile.GetString","Returntype":"(string, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetStringList(section, key string) ([]string, error)","Funname":"keyfile.KeyFile.GetStringList","Returntype":"([]string, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetUint64(section, key string) (uint64, error)","Funname":"keyfile.KeyFile.GetUint64","Returntype":"(uint64, error)","Args":"section, key string"},{"Uniquefunname":"func (err ValueInvalidUTF8Error) Error() string","Funname":"keyfile.ValueInvalidUTF8Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func parseValueAsBool(value string) (bool, error)","Funname":"keyfile.parseValueAsBool","Returntype":"(bool, error)","Args":"value string"},{"Uniquefunname":"func keyfile.parseValueAsString(value string, wantArray bool, listSeparator byte)(string, []string, error)","Funname":"keyfile.parseValueAsString","Returntype":"(string, []string, error)","Args":"value string, wantArray bool, listSeparator byte"},{"Uniquefunname":"func parseValueAsBool(value string) (bool, error)","Funname":"parseValueAsBool","Returntype":"(bool, error)","Args":"value string"},{"Uniquefunname":"func parseValueAsString(value string, wantArray bool, listSeparator byte)(string, []string, error)","Funname":"parseValueAsString","Returntype":"(string, []string, error)","Args":"value string, wantArray bool, listSeparator byte"}],"Records":[{"Name":"struct:keyfile.ValueInvalidUTF8Error","Fields":["keyfile.ValueInvalidUTF8Error.Key string","keyfile.ValueInvalidUTF8Error.Section string"]}]}
{"Filepath":"keyfile/keyfile.go","Functions":[{"Uniquefunname":"func (f *KeyFile) DeleteKey(section, key string) bool","Funname":"DeleteKey","Returntype":"bool","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) DeleteSection(section string) bool","Funname":"DeleteSection","Returntype":"bool","Args":"section string"},{"Uniquefunname":"func (err InvalidValueError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err KeyNotFoundError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err SectionNotFoundError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (f *KeyFile) GetBool(section, key string) (bool, error)","Funname":"GetBool","Returntype":"(bool, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetKeyComments(section, key string) string","Funname":"GetKeyComments","Returntype":"string","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetKeys(section string) []string","Funname":"GetKeys","Returntype":"[]string","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSection(section string) (map[string]string, error)","Funname":"GetSection","Returntype":"(map[string]string, error)","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSectionComments(section string) string","Funname":"GetSectionComments","Returntype":"string","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSections() []string","Funname":"GetSections","Returntype":"[]string","Args":""},{"Uniquefunname":"func (f *KeyFile) GetValue(section, key string) (string, error)","Funname":"GetValue","Returntype":"(string, error)","Args":"section, key string"},{"Uniquefunname":"func NewKeyFile() *KeyFile","Funname":"NewKeyFile","Returntype":"*KeyFile","Args":""},{"Uniquefunname":"func (f *KeyFile) SetKeyComments(section, key, comments string) bool","Funname":"SetKeyComments","Returntype":"bool","Args":"section, key, comments string"},{"Uniquefunname":"func (f *KeyFile) SetKeyRegexp(keyReg *regexp.Regexp)","Funname":"SetKeyRegexp","Returntype":"","Args":"keyReg *regexp.Regexp"},{"Uniquefunname":"func (f *KeyFile) SetSectionComments(section, comments string) bool","Funname":"SetSectionComments","Returntype":"bool","Args":"section, comments string"},{"Uniquefunname":"func (f *KeyFile) SetValue(section, key, value string) bool","Funname":"SetValue","Returntype":"bool","Args":"section, key, value string"},{"Uniquefunname":"func (err InvalidValueError) Error() string","Funname":"keyfile.InvalidValueError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (f *KeyFile) DeleteKey(section, key string) bool","Funname":"keyfile.KeyFile.DeleteKey","Returntype":"bool","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) DeleteSection(section string) bool","Funname":"keyfile.KeyFile.DeleteSection","Returntype":"bool","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetBool(section, key string) (bool, error)","Funname":"keyfile.KeyFile.GetBool","Returntype":"(bool, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetKeyComments(section, key string) string","Funname":"keyfile.KeyFile.GetKeyComments","Returntype":"string","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) GetKeys(section string) []string","Funname":"keyfile.KeyFile.GetKeys","Returntype":"[]string","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSection(section string) (map[string]string, error)","Funname":"keyfile.KeyFile.GetSection","Returntype":"(map[string]string, error)","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSectionComments(section string) string","Funname":"keyfile.KeyFile.GetSectionComments","Returntype":"string","Args":"section string"},{"Uniquefunname":"func (f *KeyFile) GetSections() []string","Funname":"keyfile.KeyFile.GetSections","Returntype":"[]string","Args":""},{"Uniquefunname":"func (f *KeyFile) GetValue(section, key string) (string, error)","Funname":"keyfile.KeyFile.GetValue","Returntype":"(string, error)","Args":"section, key string"},{"Uniquefunname":"func (f *KeyFile) SetKeyComments(section, key, comments string) bool","Funname":"keyfile.KeyFile.SetKeyComments","Returntype":"bool","Args":"section, key, comments string"},{"Uniquefunname":"func (f *KeyFile) SetKeyRegexp(keyReg *regexp.Regexp)","Funname":"keyfile.KeyFile.SetKeyRegexp","Returntype":"","Args":"keyReg *regexp.Regexp"},{"Uniquefunname":"func (f *KeyFile) SetSectionComments(section, comments string) bool","Funname":"keyfile.KeyFile.SetSectionComments","Returntype":"bool","Args":"section, comments string"},{"Uniquefunname":"func (f *KeyFile) SetValue(section, key, value string) bool","Funname":"keyfile.KeyFile.SetValue","Returntype":"bool","Args":"section, key, value string"},{"Uniquefunname":"func (err KeyNotFoundError) Error() string","Funname":"keyfile.KeyNotFoundError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func NewKeyFile() *KeyFile","Funname":"keyfile.NewKeyFile","Returntype":"*KeyFile","Args":""},{"Uniquefunname":"func (err SectionNotFoundError) Error() string","Funname":"keyfile.SectionNotFoundError.Error","Returntype":"string","Args":""}],"Records":[{"Name":"struct:keyfile.InvalidValueError","Fields":["keyfile.InvalidValueError.Value string"]},{"Name":"struct:keyfile.KeyFile","Fields":["keyfile.KeyFile.ListSeparator byte","keyfile.KeyFile.data map[string]map[string]string","keyfile.KeyFile.keyComments map[string]map[string]string","keyfile.KeyFile.keyList map[string][]string","keyfile.KeyFile.keyReg *regexp.Regexp","keyfile.KeyFile.mutex sync.RWMutex","keyfile.KeyFile.sectionComments map[string]string","keyfile.KeyFile.sectionList []string"]},{"Name":"struct:keyfile.KeyNotFoundError","Fields":["keyfile.KeyNotFoundError.Name string"]},{"Name":"var:keyfile","Fields":["keyfile.LineBreak"]},{"Name":"struct:keyfile.SectionNotFoundError","Fields":["keyfile.SectionNotFoundError.Name string"]}]}
{"Filepath":"keyfile/keyfile_test.go","Functions":[{"Uniquefunname":"func TestGetString(t *testing.T)","Funname":"TestGetString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetStringList(t *testing.T)","Funname":"TestGetStringList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromData(t *testing.T)","Funname":"TestLoadFromData","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"TestLoadFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSaveToWriter(t *testing.T)","Funname":"TestSaveToWriter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetBoolList(t *testing.T)","Funname":"TestSetBoolList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetIntList(t *testing.T)","Funname":"TestSetIntList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetString(t *testing.T)","Funname":"TestSetString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetStringList(t *testing.T)","Funname":"TestSetStringList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetString(t *testing.T)","Funname":"keyfile.TestGetString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetStringList(t *testing.T)","Funname":"keyfile.TestGetStringList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromData(t *testing.T)","Funname":"keyfile.TestLoadFromData","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"keyfile.TestLoadFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSaveToWriter(t *testing.T)","Funname":"keyfile.TestSaveToWriter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetBoolList(t *testing.T)","Funname":"keyfile.TestSetBoolList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetIntList(t *testing.T)","Funname":"keyfile.TestSetIntList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetString(t *testing.T)","Funname":"keyfile.TestSetString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetStringList(t *testing.T)","Funname":"keyfile.TestSetStringList","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"const:keyfile","Fields":["keyfile.desktopFileContent0","keyfile.desktopFileContent1","keyfile.desktopFileContent2","keyfile.desktopFileContent3","keyfile.desktopFileContent4","keyfile.keyFileContent0","keyfile.keyFileContent1","keyfile.keyFileContent2"]}]}
{"Filepath":"keyfile/read.go","Functions":[{"Uniquefunname":"func (err BlankSectionNameError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err EntryNotInSectionError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err InvalidKeyError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ParseError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (f *KeyFile) LoadFromData(data []byte) error","Funname":"LoadFromData","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (f *KeyFile) LoadFromFile(filename string) error","Funname":"LoadFromFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (f *KeyFile) LoadFromReader(reader io.Reader) error","Funname":"LoadFromReader","Returntype":"error","Args":"reader io.Reader"},{"Uniquefunname":"func (err BlankSectionNameError) Error() string","Funname":"keyfile.BlankSectionNameError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err EntryNotInSectionError) Error() string","Funname":"keyfile.EntryNotInSectionError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err InvalidKeyError) Error() string","Funname":"keyfile.InvalidKeyError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (f *KeyFile) LoadFromData(data []byte) error","Funname":"keyfile.KeyFile.LoadFromData","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (f *KeyFile) LoadFromFile(filename string) error","Funname":"keyfile.KeyFile.LoadFromFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (f *KeyFile) LoadFromReader(reader io.Reader) error","Funname":"keyfile.KeyFile.LoadFromReader","Returntype":"error","Args":"reader io.Reader"},{"Uniquefunname":"func (err ParseError) Error() string","Funname":"keyfile.ParseError.Error","Returntype":"string","Args":""}],"Records":[{"Name":"struct:keyfile.EntryNotInSectionError","Fields":["keyfile.EntryNotInSectionError.Line string"]},{"Name":"struct:keyfile.InvalidKeyError","Fields":["keyfile.InvalidKeyError.Key string"]},{"Name":"struct:keyfile.ParseError","Fields":["keyfile.ParseError.Line string"]},{"Name":"var:keyfile","Fields":["keyfile.errEmptyKey"]}]}
{"Filepath":"keyfile/set.go","Functions":[{"Uniquefunname":"func (f *KeyFile) SetBool(section, key string, value bool)","Funname":"SetBool","Returntype":"","Args":"section, key string, value bool"},{"Uniquefunname":"func (f *KeyFile) SetBoolList(section, key string, values []bool)","Funname":"SetBoolList","Returntype":"","Args":"section, key string, values []bool"},{"Uniquefunname":"func (f *KeyFile) SetFloat64(section, key string, value float64)","Funname":"SetFloat64","Returntype":"","Args":"section, key string, value float64"},{"Uniquefunname":"func (f *KeyFile) SetFloat64List(section, key string, values []float64)","Funname":"SetFloat64List","Returntype":"","Args":"section, key string, values []float64"},{"Uniquefunname":"func (f *KeyFile) SetInt(section, key string, value int)","Funname":"SetInt","Returntype":"","Args":"section, key string, value int"},{"Uniquefunname":"func (f *KeyFile) SetInt64(section, key string, value int64)","Funname":"SetInt64","Returntype":"","Args":"section, key string, value int64"},{"Uniquefunname":"func (f *KeyFile) SetIntList(section, key string, values []int)","Funname":"SetIntList","Returntype":"","Args":"section, key string, values []int"},{"Uniquefunname":"func (f *KeyFile) SetString(section, key, value string)","Funname":"SetString","Returntype":"","Args":"section, key, value string"},{"Uniquefunname":"func (f *KeyFile) SetStringList(section, key string, values []string)","Funname":"SetStringList","Returntype":"","Args":"section, key string, values []string"},{"Uniquefunname":"func (f *KeyFile) SetUint64(section, key string, value uint64)","Funname":"SetUint64","Returntype":"","Args":"section, key string, value uint64"},{"Uniquefunname":"func (f *KeyFile) SetBool(section, key string, value bool)","Funname":"keyfile.KeyFile.SetBool","Returntype":"","Args":"section, key string, value bool"},{"Uniquefunname":"func (f *KeyFile) SetBoolList(section, key string, values []bool)","Funname":"keyfile.KeyFile.SetBoolList","Returntype":"","Args":"section, key string, values []bool"},{"Uniquefunname":"func (f *KeyFile) SetFloat64(section, key string, value float64)","Funname":"keyfile.KeyFile.SetFloat64","Returntype":"","Args":"section, key string, value float64"},{"Uniquefunname":"func (f *KeyFile) SetFloat64List(section, key string, values []float64)","Funname":"keyfile.KeyFile.SetFloat64List","Returntype":"","Args":"section, key string, values []float64"},{"Uniquefunname":"func (f *KeyFile) SetInt(section, key string, value int)","Funname":"keyfile.KeyFile.SetInt","Returntype":"","Args":"section, key string, value int"},{"Uniquefunname":"func (f *KeyFile) SetInt64(section, key string, value int64)","Funname":"keyfile.KeyFile.SetInt64","Returntype":"","Args":"section, key string, value int64"},{"Uniquefunname":"func (f *KeyFile) SetIntList(section, key string, values []int)","Funname":"keyfile.KeyFile.SetIntList","Returntype":"","Args":"section, key string, values []int"},{"Uniquefunname":"func (f *KeyFile) SetString(section, key, value string)","Funname":"keyfile.KeyFile.SetString","Returntype":"","Args":"section, key, value string"},{"Uniquefunname":"func (f *KeyFile) SetStringList(section, key string, values []string)","Funname":"keyfile.KeyFile.SetStringList","Returntype":"","Args":"section, key string, values []string"},{"Uniquefunname":"func (f *KeyFile) SetUint64(section, key string, value uint64)","Funname":"keyfile.KeyFile.SetUint64","Returntype":"","Args":"section, key string, value uint64"},{"Uniquefunname":"func stringEscape(in string) string","Funname":"keyfile.stringEscape","Returntype":"string","Args":"in string"},{"Uniquefunname":"func stringEscape(in string) string","Funname":"stringEscape","Returntype":"string","Args":"in string"}],"Records":null}
{"Filepath":"keyfile/write.go","Functions":[{"Uniquefunname":"func (kf *KeyFile) SaveToFile(file string) error","Funname":"SaveToFile","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (f *KeyFile) SaveToWriter(w io.Writer) error","Funname":"SaveToWriter","Returntype":"error","Args":"w io.Writer"},{"Uniquefunname":"func (kf *KeyFile) SaveToFile(file string) error","Funname":"keyfile.KeyFile.SaveToFile","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (f *KeyFile) SaveToWriter(w io.Writer) error","Funname":"keyfile.KeyFile.SaveToWriter","Returntype":"error","Args":"w io.Writer"}],"Records":null}
{"Filepath":"libc/libc.go","Functions":[{"Uniquefunname":"func NewTm(t time.Time) Tm","Funname":"NewTm","Returntype":"Tm","Args":"t time.Time"},{"Uniquefunname":"func Strftime(format string, tm Tm) (s string)","Funname":"Strftime","Returntype":"(s string)","Args":"format string, tm Tm"},{"Uniquefunname":"func NewTm(t time.Time) Tm","Funname":"libc.NewTm","Returntype":"Tm","Args":"t time.Time"},{"Uniquefunname":"func Strftime(format string, tm Tm) (s string)","Funname":"libc.Strftime","Returntype":"(s string)","Args":"format string, tm Tm"},{"Uniquefunname":"func (tm Tm) native() *C.struct_tm","Funname":"libc.Tm.native","Returntype":"*C.struct_tm","Args":""},{"Uniquefunname":"func (tm Tm) native() *C.struct_tm","Funname":"native","Returntype":"*C.struct_tm","Args":""}],"Records":[{"Name":"struct:libc.Tm","Fields":["libc.Tm.core C.struct_tm"]},{"Name":"const:libc","Fields":["libc.initialBufSize"]}]}
{"Filepath":"locale/locale.go","Functions":[{"Uniquefunname":"func ExplodeLocale(locale string) *Components","Funname":"ExplodeLocale","Returntype":"*Components","Args":"locale string"},{"Uniquefunname":"func GetLanguageNames() []string","Funname":"GetLanguageNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetLocaleVariants(locale string) (variants []string)","Funname":"GetLocaleVariants","Returntype":"(variants []string)","Args":"locale string"},{"Uniquefunname":"func guessCategoryValue(categoryName string) (ret string)","Funname":"guessCategoryValue","Returntype":"(ret string)","Args":"categoryName string"},{"Uniquefunname":"func ExplodeLocale(locale string) *Components","Funname":"locale.ExplodeLocale","Returntype":"*Components","Args":"locale string"},{"Uniquefunname":"func GetLanguageNames() []string","Funname":"locale.GetLanguageNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetLocaleVariants(locale string) (variants []string)","Funname":"locale.GetLocaleVariants","Returntype":"(variants []string)","Args":"locale string"},{"Uniquefunname":"func guessCategoryValue(categoryName string) (ret string)","Funname":"locale.guessCategoryValue","Returntype":"(ret string)","Args":"categoryName string"},{"Uniquefunname":"func readAliases(filename string) (aliasTable map[string]string)","Funname":"locale.readAliases","Returntype":"(aliasTable map[string]string)","Args":"filename string"},{"Uniquefunname":"func unaliasLang(lang string) string","Funname":"locale.unaliasLang","Returntype":"string","Args":"lang string"},{"Uniquefunname":"func readAliases(filename string) (aliasTable map[string]string)","Funname":"readAliases","Returntype":"(aliasTable map[string]string)","Args":"filename string"},{"Uniquefunname":"func unaliasLang(lang string) string","Funname":"unaliasLang","Returntype":"string","Args":"lang string"}],"Records":[{"Name":"const:locale","Fields":["locale.ComponentCodeset","locale.ComponentModifier","locale.ComponentTerritory","locale.charAt","locale.charDot","locale.charUscore"]},{"Name":"struct:locale.Components","Fields":["locale.Components.Codeset string","locale.Components.Language string","locale.Components.Mask uint","locale.Components.Modifier string","locale.Components.Territory string"]},{"Name":"struct:locale._LanguageNamesCache","Fields":["locale._LanguageNamesCache.Language string","locale._LanguageNamesCache.Names []string","locale._LanguageNamesCache.mutex sync.Mutex"]},{"Name":"var:locale","Fields":["locale.aliasFile","locale.aliases","locale.aliasesOnce","locale.languageNameCache","locale.splitor"]}]}
{"Filepath":"locale/locale_test.go","Functions":[{"Uniquefunname":"func TestExplodeLocale(t *testing.T)","Funname":"TestExplodeLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLanguageNames(t *testing.T)","Funname":"TestGetLanguageNames","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLocaleVariants(t *testing.T)","Funname":"TestGetLocaleVariants","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_readAliases(t *testing.T)","Funname":"Test_readAliases","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_unaliasLang(t *testing.T)","Funname":"Test_unaliasLang","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExplodeLocale(t *testing.T)","Funname":"locale.TestExplodeLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLanguageNames(t *testing.T)","Funname":"locale.TestGetLanguageNames","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLocaleVariants(t *testing.T)","Funname":"locale.TestGetLocaleVariants","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_readAliases(t *testing.T)","Funname":"locale.Test_readAliases","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_unaliasLang(t *testing.T)","Funname":"locale.Test_unaliasLang","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"log/backend_console.go","Functions":[{"Uniquefunname":"func (b *backendConsole) close() (err error)","Funname":"close","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (b *backendConsole) formatMsg(level Priority, msg string) (fmtMsg string, err error)","Funname":"formatMsg","Returntype":"(fmtMsg string, err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func getSyslogPrefix(name string) (prefix string)","Funname":"getSyslogPrefix","Returntype":"(prefix string)","Args":"name string"},{"Uniquefunname":"func (b *backendConsole) log(level Priority, msg string) (err error)","Funname":"log","Returntype":"(err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func (b *backendConsole) close() (err error)","Funname":"log.backendConsole.close","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (b *backendConsole) formatMsg(level Priority, msg string) (fmtMsg string, err error)","Funname":"log.backendConsole.formatMsg","Returntype":"(fmtMsg string, err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func (b *backendConsole) log(level Priority, msg string) (err error)","Funname":"log.backendConsole.log","Returntype":"(err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func getSyslogPrefix(name string) (prefix string)","Funname":"log.getSyslogPrefix","Returntype":"(prefix string)","Args":"name string"},{"Uniquefunname":"func newBackendConsole(name string) (b *backendConsole)","Funname":"log.newBackendConsole","Returntype":"(b *backendConsole)","Args":"name string"},{"Uniquefunname":"func newBackendConsole(name string) (b *backendConsole)","Funname":"newBackendConsole","Returntype":"(b *backendConsole)","Args":"name string"}],"Records":[{"Name":"var:log","Fields":["log.DebugConsoleEnv"]},{"Name":"struct:log.backendConsole","Fields":["log.backendConsole.name string","log.backendConsole.syslogMode bool"]},{"Name":"const:log","Fields":["log.defaultDebugConsoleEnv"]}]}
{"Filepath":"log/backend_syslog.go","Functions":[{"Uniquefunname":"func (b *backendSyslog) close() (err error)","Funname":"close","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (b *backendSyslog) log(level Priority, msg string) (err error)","Funname":"log","Returntype":"(err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func (b *backendSyslog) close() (err error)","Funname":"log.backendSyslog.close","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (b *backendSyslog) log(level Priority, msg string) (err error)","Funname":"log.backendSyslog.log","Returntype":"(err error)","Args":"level Priority, msg string"},{"Uniquefunname":"func newBackendSyslog(name string) (b *backendSyslog)","Funname":"log.newBackendSyslog","Returntype":"(b *backendSyslog)","Args":"name string"},{"Uniquefunname":"func newSyslogWriter(name string) (l *syslog.Writer, err error)","Funname":"log.newSyslogWriter","Returntype":"(l *syslog.Writer, err error)","Args":"name string"},{"Uniquefunname":"func newBackendSyslog(name string) (b *backendSyslog)","Funname":"newBackendSyslog","Returntype":"(b *backendSyslog)","Args":"name string"},{"Uniquefunname":"func newSyslogWriter(name string) (l *syslog.Writer, err error)","Funname":"newSyslogWriter","Returntype":"(l *syslog.Writer, err error)","Args":"name string"}],"Records":[{"Name":"var:log","Fields":["log.SyslogTagPrefix"]},{"Name":"struct:log.backendSyslog","Fields":["log.backendSyslog.name string","log.backendSyslog.writer *syslog.Writer"]},{"Name":"const:log","Fields":["log.defaultSyslogTagPrefix"]}]}
{"Filepath":"log/logger.go","Functions":[{"Uniquefunname":"func (l *Logger) AddBackend(b Backend) bool","Funname":"AddBackend","Returntype":"bool","Args":"b Backend"},{"Uniquefunname":"func (l *Logger) AddBackendConsole() bool","Funname":"AddBackendConsole","Returntype":"bool","Args":""},{"Uniquefunname":"func (l *Logger) AddBackendSyslog() bool","Funname":"AddBackendSyslog","Returntype":"bool","Args":""},{"Uniquefunname":"func (l *Logger) AddExtArgForRestart(arg string)","Funname":"AddExtArgForRestart","Returntype":"","Args":"arg string"},{"Uniquefunname":"func (l *Logger) BeginTracing()","Funname":"BeginTracing","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) Debug(v ...interface","Funname":"Debug","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Debugf(format string, v ...interface","Funname":"Debugf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) EndTracing()","Funname":"EndTracing","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) Error(v ...interface","Funname":"Error","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Errorf(format string, v ...interface","Funname":"Errorf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) Fatal(v ...interface","Funname":"Fatal","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Fatalf(format string, v ...interface","Funname":"Fatalf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) GetLogLevel() Priority","Funname":"GetLogLevel","Returntype":"Priority","Args":""},{"Uniquefunname":"func (l *Logger) Info(v ...interface","Funname":"Info","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Infof(format string, v ...interface","Funname":"Infof","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func NewLogger(name string) (l *Logger)","Funname":"NewLogger","Returntype":"(l *Logger)","Args":"name string"},{"Uniquefunname":"func (l *Logger) Panic(v ...interface","Funname":"Panic","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Panicf(format string, v ...interface","Funname":"Panicf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) RemoveBackend(b Backend)","Funname":"RemoveBackend","Returntype":"","Args":"b Backend"},{"Uniquefunname":"func (l *Logger) RemoveBackendConsole()","Funname":"RemoveBackendConsole","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) RemoveBackendSyslog()","Funname":"RemoveBackendSyslog","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) ResetBackends()","Funname":"ResetBackends","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) SetLogLevel(level Priority) *Logger","Funname":"SetLogLevel","Returntype":"*Logger","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) SetRestartCommand(exefile string, args ...string)","Funname":"SetRestartCommand","Returntype":"","Args":"exefile string, args ...string"},{"Uniquefunname":"func (l *Logger) Warning(v ...interface","Funname":"Warning","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Warningf(format string, v ...interface","Funname":"Warningf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func buildFormatMsg(calldepth int, loop bool, format string, v ...interface","Funname":"buildFormatMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, format string, v ...interface{}"},{"Uniquefunname":"func buildMsg(calldepth int, loop bool, v ...interface","Funname":"buildMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, v ...interface{}"},{"Uniquefunname":"func doBuildMsg(calldepth int, loop bool, s string) (msg string)","Funname":"doBuildMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, s string"},{"Uniquefunname":"func (l *Logger) doLog(level Priority, msg string)","Funname":"doLog","Returntype":"","Args":"level Priority, msg string"},{"Uniquefunname":"func (l *Logger) doRemoveBackend(i int)","Funname":"doRemoveBackend","Returntype":"","Args":"i int"},{"Uniquefunname":"func getDefaultLogLevel(name string) (level Priority)","Funname":"getDefaultLogLevel","Returntype":"(level Priority)","Args":"name string"},{"Uniquefunname":"func (l *Logger) isNeedLog(level Priority) bool","Funname":"isNeedLog","Returntype":"bool","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) isNeedTraceMore(level Priority) bool","Funname":"isNeedTraceMore","Returntype":"bool","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) launchCrashReporter()","Funname":"launchCrashReporter","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) log(level Priority, v ...interface","Funname":"log","Returntype":"","Args":"level Priority, v ...interface{}"},{"Uniquefunname":"func (l *Logger) AddBackend(b Backend) bool","Funname":"log.Logger.AddBackend","Returntype":"bool","Args":"b Backend"},{"Uniquefunname":"func (l *Logger) AddBackendConsole() bool","Funname":"log.Logger.AddBackendConsole","Returntype":"bool","Args":""},{"Uniquefunname":"func (l *Logger) AddBackendSyslog() bool","Funname":"log.Logger.AddBackendSyslog","Returntype":"bool","Args":""},{"Uniquefunname":"func (l *Logger) AddExtArgForRestart(arg string)","Funname":"log.Logger.AddExtArgForRestart","Returntype":"","Args":"arg string"},{"Uniquefunname":"func (l *Logger) BeginTracing()","Funname":"log.Logger.BeginTracing","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) Debug(v ...interface","Funname":"log.Logger.Debug","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Debugf(format string, v ...interface","Funname":"log.Logger.Debugf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) EndTracing()","Funname":"log.Logger.EndTracing","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) Error(v ...interface","Funname":"log.Logger.Error","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Errorf(format string, v ...interface","Funname":"log.Logger.Errorf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) Fatal(v ...interface","Funname":"log.Logger.Fatal","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Fatalf(format string, v ...interface","Funname":"log.Logger.Fatalf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) GetLogLevel() Priority","Funname":"log.Logger.GetLogLevel","Returntype":"Priority","Args":""},{"Uniquefunname":"func (l *Logger) Info(v ...interface","Funname":"log.Logger.Info","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Infof(format string, v ...interface","Funname":"log.Logger.Infof","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) Panic(v ...interface","Funname":"log.Logger.Panic","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Panicf(format string, v ...interface","Funname":"log.Logger.Panicf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) RemoveBackend(b Backend)","Funname":"log.Logger.RemoveBackend","Returntype":"","Args":"b Backend"},{"Uniquefunname":"func (l *Logger) RemoveBackendConsole()","Funname":"log.Logger.RemoveBackendConsole","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) RemoveBackendSyslog()","Funname":"log.Logger.RemoveBackendSyslog","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) ResetBackends()","Funname":"log.Logger.ResetBackends","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) SetLogLevel(level Priority) *Logger","Funname":"log.Logger.SetLogLevel","Returntype":"*Logger","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) SetRestartCommand(exefile string, args ...string)","Funname":"log.Logger.SetRestartCommand","Returntype":"","Args":"exefile string, args ...string"},{"Uniquefunname":"func (l *Logger) Warning(v ...interface","Funname":"log.Logger.Warning","Returntype":"","Args":"v ...interface{}"},{"Uniquefunname":"func (l *Logger) Warningf(format string, v ...interface","Funname":"log.Logger.Warningf","Returntype":"","Args":"format string, v ...interface{}"},{"Uniquefunname":"func (l *Logger) doLog(level Priority, msg string)","Funname":"log.Logger.doLog","Returntype":"","Args":"level Priority, msg string"},{"Uniquefunname":"func (l *Logger) doRemoveBackend(i int)","Funname":"log.Logger.doRemoveBackend","Returntype":"","Args":"i int"},{"Uniquefunname":"func (l *Logger) isNeedLog(level Priority) bool","Funname":"log.Logger.isNeedLog","Returntype":"bool","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) isNeedTraceMore(level Priority) bool","Funname":"log.Logger.isNeedTraceMore","Returntype":"bool","Args":"level Priority"},{"Uniquefunname":"func (l *Logger) launchCrashReporter()","Funname":"log.Logger.launchCrashReporter","Returntype":"","Args":""},{"Uniquefunname":"func (l *Logger) log(level Priority, v ...interface","Funname":"log.Logger.log","Returntype":"","Args":"level Priority, v ...interface{}"},{"Uniquefunname":"func (l *Logger) logf(level Priority, format string, v ...interface","Funname":"log.Logger.logf","Returntype":"","Args":"level Priority, format string, v ...interface{}"},{"Uniquefunname":"func NewLogger(name string) (l *Logger)","Funname":"log.NewLogger","Returntype":"(l *Logger)","Args":"name string"},{"Uniquefunname":"func buildFormatMsg(calldepth int, loop bool, format string, v ...interface","Funname":"log.buildFormatMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, format string, v ...interface{}"},{"Uniquefunname":"func buildMsg(calldepth int, loop bool, v ...interface","Funname":"log.buildMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, v ...interface{}"},{"Uniquefunname":"func doBuildMsg(calldepth int, loop bool, s string) (msg string)","Funname":"log.doBuildMsg","Returntype":"(msg string)","Args":"calldepth int, loop bool, s string"},{"Uniquefunname":"func getDefaultLogLevel(name string) (level Priority)","Funname":"log.getDefaultLogLevel","Returntype":"(level Priority)","Args":"name string"},{"Uniquefunname":"func matchLogger(name, expr string) bool","Funname":"log.matchLogger","Returntype":"bool","Args":"name, expr string"},{"Uniquefunname":"func (l *Logger) logf(level Priority, format string, v ...interface","Funname":"logf","Returntype":"","Args":"level Priority, format string, v ...interface{}"},{"Uniquefunname":"func matchLogger(name, expr string) bool","Funname":"matchLogger","Returntype":"bool","Args":"name, expr string"}],"Records":[{"Name":"interface","Fields":["log.Backend"]},{"Name":"var:log","Fields":["log.DebugEnv","log.DebugFile","log.DebugLevelEnv","log.DebugMatchEnv","log.errUnknownLogLevel","log.std"]},{"Name":"const:log","Fields":["log.LevelDebug","log.LevelDisable","log.LevelError","log.LevelFatal","log.LevelInfo","log.LevelPanic","log.LevelWarning","log.crashReporterExe","log.defaultDebugEnv","log.defaultDebugFile","log.defaultDebugLelveEnv","log.defaultDebugMatchEnv"]},{"Name":"struct:log.Logger","Fields":["log.Logger.backends []Backend","log.Logger.backendsLock sync.Mutex","log.Logger.config *restartConfig","log.Logger.level Priority","log.Logger.name string"]}]}
{"Filepath":"log/logger_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) BenchmarkSyslog(c *C.C)","Funname":"BenchmarkSyslog","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestAddRemoveBackend(c *C.C)","Funname":"TestAddRemoveBackend","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugConsoleEnv(c *C.C)","Funname":"TestDebugConsoleEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugEnv(c *C.C)","Funname":"TestDebugEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugFile(c *C.C)","Funname":"TestDebugFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugLevelEnv(c *C.C)","Funname":"TestDebugLevelEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugMatchEnv(c *C.C)","Funname":"TestDebugMatchEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugMixEnv(c *C.C)","Funname":"TestDebugMixEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFmtSprint(c *C.C)","Funname":"TestFmtSprint","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFuncTracing(c *C.C)","Funname":"TestFuncTracing","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGeneral(c *C.C)","Funname":"TestGeneral","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsNeedLog(c *C.C)","Funname":"TestIsNeedLog","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsNeedTraceMore(c *C.C)","Funname":"TestIsNeedTraceMore","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func checkOutput(c *C.C, regfmt string, preferResult bool)","Funname":"checkOutput","Returntype":"","Args":"c *C.C, regfmt string, preferResult bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func log.Test(t *testing.T)","Funname":"log.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func checkOutput(c *C.C, regfmt string, preferResult bool)","Funname":"log.checkOutput","Returntype":"","Args":"c *C.C, regfmt string, preferResult bool"},{"Uniquefunname":"func init()","Funname":"log.init","Returntype":"","Args":""},{"Uniquefunname":"func readOutput() string","Funname":"log.readOutput","Returntype":"string","Args":""},{"Uniquefunname":"func redirectOutput()","Funname":"log.redirectOutput","Returntype":"","Args":""},{"Uniquefunname":"func resetOutput()","Funname":"log.resetOutput","Returntype":"","Args":""},{"Uniquefunname":"func restoreOutput()","Funname":"log.restoreOutput","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) BenchmarkSyslog(c *C.C)","Funname":"log.testWrapper.BenchmarkSyslog","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestAddRemoveBackend(c *C.C)","Funname":"log.testWrapper.TestAddRemoveBackend","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugConsoleEnv(c *C.C)","Funname":"log.testWrapper.TestDebugConsoleEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugEnv(c *C.C)","Funname":"log.testWrapper.TestDebugEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugFile(c *C.C)","Funname":"log.testWrapper.TestDebugFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugLevelEnv(c *C.C)","Funname":"log.testWrapper.TestDebugLevelEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugMatchEnv(c *C.C)","Funname":"log.testWrapper.TestDebugMatchEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDebugMixEnv(c *C.C)","Funname":"log.testWrapper.TestDebugMixEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFmtSprint(c *C.C)","Funname":"log.testWrapper.TestFmtSprint","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFuncTracing(c *C.C)","Funname":"log.testWrapper.TestFuncTracing","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGeneral(c *C.C)","Funname":"log.testWrapper.TestGeneral","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsNeedLog(c *C.C)","Funname":"log.testWrapper.TestIsNeedLog","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsNeedTraceMore(c *C.C)","Funname":"log.testWrapper.TestIsNeedTraceMore","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func readOutput() string","Funname":"readOutput","Returntype":"string","Args":""},{"Uniquefunname":"func redirectOutput()","Funname":"redirectOutput","Returntype":"","Args":""},{"Uniquefunname":"func resetOutput()","Funname":"resetOutput","Returntype":"","Args":""},{"Uniquefunname":"func restoreOutput()","Funname":"restoreOutput","Returntype":"","Args":""}],"Records":[{"Name":"var:log","Fields":["log._","log.originStdout","log.redirectStdout","log.redirectStdoutFile"]}]}
{"Filepath":"log/restart_config.go","Functions":[{"Uniquefunname":"func newRestartConfig(logname string) *restartConfig","Funname":"log.newRestartConfig","Returntype":"*restartConfig","Args":"logname string"},{"Uniquefunname":"func newRestartConfig(logname string) *restartConfig","Funname":"newRestartConfig","Returntype":"*restartConfig","Args":"logname string"}],"Records":[{"Name":"var:log","Fields":["log.crashReporterArgs"]},{"Name":"struct:log.restartConfig","Fields":["log.restartConfig.AppName string","log.restartConfig.LogDetail string","log.restartConfig.RestartCommand []string","log.restartConfig.RestartDirectory string","log.restartConfig.RestartEnv map[string]string"]}]}
{"Filepath":"log/utils.go","Functions":[{"Uniquefunname":"func fmtSprint(v ...interface","Funname":"fmtSprint","Returntype":"(s string)","Args":"v ...interface{}"},{"Uniquefunname":"func isStringInArray(s string, arr []string) bool","Funname":"isStringInArray","Returntype":"bool","Args":"s string, arr []string"},{"Uniquefunname":"func fmtSprint(v ...interface","Funname":"log.fmtSprint","Returntype":"(s string)","Args":"v ...interface{}"},{"Uniquefunname":"func isStringInArray(s string, arr []string) bool","Funname":"log.isStringInArray","Returntype":"bool","Args":"s string, arr []string"}],"Records":null}
{"Filepath":"mime/mime.go","Functions":[{"Uniquefunname":"func GetAppList(mime string) []string","Funname":"GetAppList","Returntype":"[]string","Args":"mime string"},{"Uniquefunname":"func GetDefaultApp(mime string, mustSupportURIs bool) (string, error)","Funname":"GetDefaultApp","Returntype":"(string, error)","Args":"mime string, mustSupportURIs bool"},{"Uniquefunname":"func Query(uri string) (string, error)","Funname":"Query","Returntype":"(string, error)","Args":"uri string"},{"Uniquefunname":"func SetDefaultApp(mime, desktopId string) error","Funname":"SetDefaultApp","Returntype":"error","Args":"mime, desktopId string"},{"Uniquefunname":"func doQueryFile(file string) (string, error)","Funname":"doQueryFile","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func GetAppList(mime string) []string","Funname":"mime.GetAppList","Returntype":"[]string","Args":"mime string"},{"Uniquefunname":"func GetDefaultApp(mime string, mustSupportURIs bool) (string, error)","Funname":"mime.GetDefaultApp","Returntype":"(string, error)","Args":"mime string, mustSupportURIs bool"},{"Uniquefunname":"func Query(uri string) (string, error)","Funname":"mime.Query","Returntype":"(string, error)","Args":"uri string"},{"Uniquefunname":"func SetDefaultApp(mime, desktopId string) error","Funname":"mime.SetDefaultApp","Returntype":"error","Args":"mime, desktopId string"},{"Uniquefunname":"func doQueryFile(file string) (string, error)","Funname":"mime.doQueryFile","Returntype":"(string, error)","Args":"file string"}],"Records":[{"Name":"const:mime","Fields":["mime.MimeTypeCursor","mime.MimeTypeGtk","mime.MimeTypeIcon"]}]}
{"Filepath":"mime/mime_test.go","Functions":[{"Uniquefunname":"func TestQueryURI(t *testing.T)","Funname":"TestQueryURI","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestQueryURI(t *testing.T)","Funname":"mime.TestQueryURI","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"mime/theme.go","Functions":[{"Uniquefunname":"func isCursorTheme(file string) (bool, error)","Funname":"isCursorTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func isFilesInDir(files []string, dir string) (bool, error)","Funname":"isFilesInDir","Returntype":"(bool, error)","Args":"files []string, dir string"},{"Uniquefunname":"func isGtkTheme(file string) (bool, error)","Funname":"isGtkTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func isIconTheme(file string) (bool, error)","Funname":"isIconTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func isCursorTheme(file string) (bool, error)","Funname":"mime.isCursorTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func isFilesInDir(files []string, dir string) (bool, error)","Funname":"mime.isFilesInDir","Returntype":"(bool, error)","Args":"files []string, dir string"},{"Uniquefunname":"func isGtkTheme(file string) (bool, error)","Funname":"mime.isGtkTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func isIconTheme(file string) (bool, error)","Funname":"mime.isIconTheme","Returntype":"(bool, error)","Args":"file string"},{"Uniquefunname":"func queryThemeMime(file string) (string, error)","Funname":"mime.queryThemeMime","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func queryThemeMime(file string) (string, error)","Funname":"queryThemeMime","Returntype":"(string, error)","Args":"file string"}],"Records":[{"Name":"const:mime","Fields":["mime.mimeTypeXCursor"]}]}
{"Filepath":"mime/theme_test.go","Functions":[{"Uniquefunname":"func TestIsCursorTheme(t *testing.T)","Funname":"TestIsCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsGtkTheme(t *testing.T)","Funname":"TestIsGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsIconTheme(t *testing.T)","Funname":"TestIsIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsCursorTheme(t *testing.T)","Funname":"mime.TestIsCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsGtkTheme(t *testing.T)","Funname":"mime.TestIsGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsIconTheme(t *testing.T)","Funname":"mime.TestIsIconTheme","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"mobileprovider/mobileprovider.go","Functions":[{"Uniquefunname":"func GetAPN(countryCode, providerName, apnValue, apnUsageType string) (apn *APN, err error)","Funname":"GetAPN","Returntype":"(apn *APN, err error)","Args":"countryCode, providerName, apnValue, apnUsageType string"},{"Uniquefunname":"func GetAPNName(apn *APN) (name string)","Funname":"GetAPNName","Returntype":"(name string)","Args":"apn *APN"},{"Uniquefunname":"func GetAPNUsageType(apn *APN) (usageType string)","Funname":"GetAPNUsageType","Returntype":"(usageType string)","Args":"apn *APN"},{"Uniquefunname":"func GetAllCountryCode() (codeList []string, err error)","Funname":"GetAllCountryCode","Returntype":"(codeList []string, err error)","Args":""},{"Uniquefunname":"func GetCDMA(countryCode, providerName string) (cdma *CDMA, err error)","Funname":"GetCDMA","Returntype":"(cdma *CDMA, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetDefaultProvider(countryCode string) (defaultProvider string, err error)","Funname":"GetDefaultProvider","Returntype":"(defaultProvider string, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetGSM(countryCode, providerName string) (gsm *GSM, err error)","Funname":"GetGSM","Returntype":"(gsm *GSM, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetGSMForNetworkID(mcc, mnc string) (gsm *GSM, err error)","Funname":"GetGSMForNetworkID","Returntype":"(gsm *GSM, err error)","Args":"mcc, mnc string"},{"Uniquefunname":"func GetMobileProviderDatabase() (*MobileServiceProviderDatabase, error)","Funname":"GetMobileProviderDatabase","Returntype":"(*MobileServiceProviderDatabase, error)","Args":""},{"Uniquefunname":"func GetProvider(countryCode, providerName string) (provider *Provider, err error)","Funname":"GetProvider","Returntype":"(provider *Provider, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetProviderNames(countryCode string) (names []string, err error)","Funname":"GetProviderNames","Returntype":"(names []string, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetProviders(countryCode string) (providers []*Provider, err error)","Funname":"GetProviders","Returntype":"(providers []*Provider, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetAPN(countryCode, providerName, apnValue, apnUsageType string) (apn *APN, err error)","Funname":"mobileprovider.GetAPN","Returntype":"(apn *APN, err error)","Args":"countryCode, providerName, apnValue, apnUsageType string"},{"Uniquefunname":"func GetAPNName(apn *APN) (name string)","Funname":"mobileprovider.GetAPNName","Returntype":"(name string)","Args":"apn *APN"},{"Uniquefunname":"func GetAPNUsageType(apn *APN) (usageType string)","Funname":"mobileprovider.GetAPNUsageType","Returntype":"(usageType string)","Args":"apn *APN"},{"Uniquefunname":"func GetAllCountryCode() (codeList []string, err error)","Funname":"mobileprovider.GetAllCountryCode","Returntype":"(codeList []string, err error)","Args":""},{"Uniquefunname":"func GetCDMA(countryCode, providerName string) (cdma *CDMA, err error)","Funname":"mobileprovider.GetCDMA","Returntype":"(cdma *CDMA, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetDefaultProvider(countryCode string) (defaultProvider string, err error)","Funname":"mobileprovider.GetDefaultProvider","Returntype":"(defaultProvider string, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetGSM(countryCode, providerName string) (gsm *GSM, err error)","Funname":"mobileprovider.GetGSM","Returntype":"(gsm *GSM, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetGSMForNetworkID(mcc, mnc string) (gsm *GSM, err error)","Funname":"mobileprovider.GetGSMForNetworkID","Returntype":"(gsm *GSM, err error)","Args":"mcc, mnc string"},{"Uniquefunname":"func GetMobileProviderDatabase() (*MobileServiceProviderDatabase, error)","Funname":"mobileprovider.GetMobileProviderDatabase","Returntype":"(*MobileServiceProviderDatabase, error)","Args":""},{"Uniquefunname":"func GetProvider(countryCode, providerName string) (provider *Provider, err error)","Funname":"mobileprovider.GetProvider","Returntype":"(provider *Provider, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetProviderNames(countryCode string) (names []string, err error)","Funname":"mobileprovider.GetProviderNames","Returntype":"(names []string, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetProviders(countryCode string) (providers []*Provider, err error)","Funname":"mobileprovider.GetProviders","Returntype":"(providers []*Provider, err error)","Args":"countryCode string"}],"Records":[{"Name":"var:mobileprovider","Fields":["mobileprovider.errAPNNotFound","mobileprovider.errCDMANotFound","mobileprovider.errCountryNotFound","mobileprovider.errGSMNotFound","mobileprovider.errPlanNotFound","mobileprovider.errProviderNotFound","mobileprovider.mobileProviderDatabase","mobileprovider.mobileProviderDatabaseLock"]},{"Name":"const:mobileprovider","Fields":["mobileprovider.mobileServiceProvidersXMLFile"]}]}
{"Filepath":"mobileprovider/mobileprovider_plan.go","Functions":[{"Uniquefunname":"func GetDefaultCDMAPlanForCountry(countryCode string) (defaultCDMAPlan Plan, err error)","Funname":"GetDefaultCDMAPlanForCountry","Returntype":"(defaultCDMAPlan Plan, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetDefaultGSMPlanForCountry(countryCode string) (defaultGSMPlan Plan, err error)","Funname":"GetDefaultGSMPlanForCountry","Returntype":"(defaultGSMPlan Plan, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetDefaultPlan(countryCode, providerName string) (defaultPlan Plan, err error)","Funname":"GetDefaultPlan","Returntype":"(defaultPlan Plan, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetPlans(countryCode, providerName string) (plans []Plan, err error)","Funname":"GetPlans","Returntype":"(plans []Plan, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func MarshalPlan(plan Plan) (jsonStr string)","Funname":"MarshalPlan","Returntype":"(jsonStr string)","Args":"plan Plan"},{"Uniquefunname":"func UnmarshalPlan(jsonStr string) (plan *Plan, err error)","Funname":"UnmarshalPlan","Returntype":"(plan *Plan, err error)","Args":"jsonStr string"},{"Uniquefunname":"func getDefaultGSMInternetPlanForCountry(countryCode string)(defaultGSMInternetPlan Plan, err error)","Funname":"getDefaultGSMInternetPlanForCountry","Returntype":"(defaultGSMInternetPlan Plan, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetDefaultCDMAPlanForCountry(countryCode string) (defaultCDMAPlan Plan, err error)","Funname":"mobileprovider.GetDefaultCDMAPlanForCountry","Returntype":"(defaultCDMAPlan Plan, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetDefaultGSMPlanForCountry(countryCode string) (defaultGSMPlan Plan, err error)","Funname":"mobileprovider.GetDefaultGSMPlanForCountry","Returntype":"(defaultGSMPlan Plan, err error)","Args":"countryCode string"},{"Uniquefunname":"func GetDefaultPlan(countryCode, providerName string) (defaultPlan Plan, err error)","Funname":"mobileprovider.GetDefaultPlan","Returntype":"(defaultPlan Plan, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func GetPlans(countryCode, providerName string) (plans []Plan, err error)","Funname":"mobileprovider.GetPlans","Returntype":"(plans []Plan, err error)","Args":"countryCode, providerName string"},{"Uniquefunname":"func MarshalPlan(plan Plan) (jsonStr string)","Funname":"mobileprovider.MarshalPlan","Returntype":"(jsonStr string)","Args":"plan Plan"},{"Uniquefunname":"func UnmarshalPlan(jsonStr string) (plan *Plan, err error)","Funname":"mobileprovider.UnmarshalPlan","Returntype":"(plan *Plan, err error)","Args":"jsonStr string"},{"Uniquefunname":"func mobileprovider.getDefaultGSMInternetPlanForCountry(countryCode string)(defaultGSMInternetPlan Plan, err error)","Funname":"mobileprovider.getDefaultGSMInternetPlanForCountry","Returntype":"(defaultGSMInternetPlan Plan, err error)","Args":"countryCode string"}],"Records":[{"Name":"struct:mobileprovider.Plan","Fields":["mobileprovider.Plan.APNUsageType string","mobileprovider.Plan.APNValue string","mobileprovider.Plan.IsGSM bool","mobileprovider.Plan.Name string","mobileprovider.Plan.ProviderName string"]}]}
{"Filepath":"mobileprovider/mobileprovider_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestGetAPN(c *C.C)","Funname":"TestGetAPN","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCDMA(c *C.C)","Funname":"TestGetCDMA","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultCDMAPlanForCountry(c *C.C)","Funname":"TestGetDefaultCDMAPlanForCountry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultGSMPlanForCountry(c *C.C)","Funname":"TestGetDefaultGSMPlanForCountry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultPlan(c *C.C)","Funname":"TestGetDefaultPlan","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGSM(c *C.C)","Funname":"TestGetGSM","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGSMForNetworkID(c *C.C)","Funname":"TestGetGSMForNetworkID","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPlans(c *C.C)","Funname":"TestGetPlans","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProvider(c *C.C)","Funname":"TestGetProvider","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProviderNames(c *C.C)","Funname":"TestGetProviderNames","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProviders(c *C.C)","Funname":"TestGetProviders","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestMobileProvider(c *C.C)","Funname":"TestMobileProvider","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func mobileprovider.Test(t *testing.T)","Funname":"mobileprovider.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"mobileprovider.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestGetAPN(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetAPN","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetCDMA(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetCDMA","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultCDMAPlanForCountry(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetDefaultCDMAPlanForCountry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultGSMPlanForCountry(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetDefaultGSMPlanForCountry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultPlan(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetDefaultPlan","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGSM(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetGSM","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGSMForNetworkID(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetGSMForNetworkID","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPlans(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetPlans","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProvider(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetProvider","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProviderNames(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetProviderNames","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetProviders(c *C.C)","Funname":"mobileprovider.testWrapper.TestGetProviders","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestMobileProvider(c *C.C)","Funname":"mobileprovider.testWrapper.TestMobileProvider","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"mobileprovider/mobileprovider_type.go","Functions":null,"Records":[{"Name":"struct:mobileprovider.APN","Fields":["mobileprovider.APN.DNS []string","mobileprovider.APN.Gateway string","mobileprovider.APN.MMSC string","mobileprovider.APN.MMSproxy string","mobileprovider.APN.Name []*Name","mobileprovider.APN.Password string","mobileprovider.APN.Plan []*APNPlan","mobileprovider.APN.Usage *Usage","mobileprovider.APN.Username string","mobileprovider.APN.Value string"]},{"Name":"struct:mobileprovider.APNPlan","Fields":["mobileprovider.APNPlan.Type string"]},{"Name":"struct:mobileprovider.BalanceCheck","Fields":["mobileprovider.BalanceCheck.DTMF []string","mobileprovider.BalanceCheck.SMS []*SMS","mobileprovider.BalanceCheck.USSD []*USSD","mobileprovider.BalanceCheck.USSDResponse []string"]},{"Name":"struct:mobileprovider.BalanceTopUp","Fields":["mobileprovider.BalanceTopUp.SMS []*SMS","mobileprovider.BalanceTopUp.USSD []*USSD"]},{"Name":"struct:mobileprovider.CDMA","Fields":["mobileprovider.CDMA.DNS []string","mobileprovider.CDMA.Name []*Name","mobileprovider.CDMA.Password string","mobileprovider.CDMA.SID []*SID","mobileprovider.CDMA.Username string"]},{"Name":"struct:mobileprovider.Country","Fields":["mobileprovider.Country.Code string","mobileprovider.Country.Providers []*Provider"]},{"Name":"struct:mobileprovider.GSM","Fields":["mobileprovider.GSM.APN []*APN","mobileprovider.GSM.BalanceCheck []*BalanceCheck","mobileprovider.GSM.BalanceTopUp []*BalanceTopUp","mobileprovider.GSM.MsisdnQuery []*MsisdnQuery","mobileprovider.GSM.NetworkID []*NetworkID","mobileprovider.GSM.Voicemail []string"]},{"Name":"struct:mobileprovider.MobileServiceProviderDatabase","Fields":["mobileprovider.MobileServiceProviderDatabase.Countries []*Country","mobileprovider.MobileServiceProviderDatabase.Format string"]},{"Name":"struct:mobileprovider.MsisdnQuery","Fields":["mobileprovider.MsisdnQuery.SMS []*SMS","mobileprovider.MsisdnQuery.USSD []*USSD"]},{"Name":"struct:mobileprovider.Name","Fields":["mobileprovider.Name.Body string","mobileprovider.Name.XMLLang string"]},{"Name":"struct:mobileprovider.NetworkID","Fields":["mobileprovider.NetworkID.MCC string","mobileprovider.NetworkID.MNC string"]},{"Name":"const:mobileprovider","Fields":["mobileprovider.PlanTypeValuePostpaid","mobileprovider.PlanTypeValuePrepaid","mobileprovider.ProviderPrimaryValueFalse","mobileprovider.ProviderPrimaryValueTrue","mobileprovider.UsageTypeInternet","mobileprovider.UsageTypeMMS","mobileprovider.UsageTypeWAP"]},{"Name":"struct:mobileprovider.Provider","Fields":["mobileprovider.Provider.CDMA *CDMA","mobileprovider.Provider.GSM *GSM","mobileprovider.Provider.Name *Name","mobileprovider.Provider.Primary ProviderPrimaryValue"]},{"Name":"struct:mobileprovider.SID","Fields":["mobileprovider.SID.Value string"]},{"Name":"struct:mobileprovider.SMS","Fields":["mobileprovider.SMS.Body string","mobileprovider.SMS.Text string"]},{"Name":"struct:mobileprovider.USSD","Fields":["mobileprovider.USSD.Body string","mobileprovider.USSD.Replacement string"]},{"Name":"struct:mobileprovider.Usage","Fields":["mobileprovider.Usage.Type string"]}]}
{"Filepath":"multierr/append.go","Functions":[{"Uniquefunname":"func Append(err error, errs ...error) *Error","Funname":"Append","Returntype":"*Error","Args":"err error, errs ...error"},{"Uniquefunname":"func Append(err error, errs ...error) *Error","Funname":"multierr.Append","Returntype":"*Error","Args":"err error, errs ...error"}],"Records":null}
{"Filepath":"multierr/append_test.go","Functions":[{"Uniquefunname":"func TestAppend_Error(t *testing.T)","Funname":"TestAppend_Error","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilError(t *testing.T)","Funname":"TestAppend_NilError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilErrorArg(t *testing.T)","Funname":"TestAppend_NilErrorArg","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilErrorIfaceArg(t *testing.T)","Funname":"TestAppend_NilErrorIfaceArg","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NonError(t *testing.T)","Funname":"TestAppend_NonError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NonError_Error(t *testing.T)","Funname":"TestAppend_NonError_Error","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_Error(t *testing.T)","Funname":"multierr.TestAppend_Error","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilError(t *testing.T)","Funname":"multierr.TestAppend_NilError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilErrorArg(t *testing.T)","Funname":"multierr.TestAppend_NilErrorArg","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NilErrorIfaceArg(t *testing.T)","Funname":"multierr.TestAppend_NilErrorIfaceArg","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NonError(t *testing.T)","Funname":"multierr.TestAppend_NonError","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppend_NonError_Error(t *testing.T)","Funname":"multierr.TestAppend_NonError_Error","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"multierr/format.go","Functions":[{"Uniquefunname":"func ListFormatFunc(es []error) string","Funname":"ListFormatFunc","Returntype":"string","Args":"es []error"},{"Uniquefunname":"func ListFormatFunc(es []error) string","Funname":"multierr.ListFormatFunc","Returntype":"string","Args":"es []error"}],"Records":null}
{"Filepath":"multierr/format_test.go","Functions":[{"Uniquefunname":"func TestListFormatFuncMultiple(t *testing.T)","Funname":"TestListFormatFuncMultiple","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListFormatFuncSingle(t *testing.T)","Funname":"TestListFormatFuncSingle","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListFormatFuncMultiple(t *testing.T)","Funname":"multierr.TestListFormatFuncMultiple","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListFormatFuncSingle(t *testing.T)","Funname":"multierr.TestListFormatFuncSingle","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"multierr/multierr.go","Functions":[{"Uniquefunname":"func (e *Error) Append(errs ...error)","Funname":"Append","Returntype":"","Args":"errs ...error"},{"Uniquefunname":"func (e *Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (e *Error) ErrorOrNil() error","Funname":"ErrorOrNil","Returntype":"error","Args":""},{"Uniquefunname":"func (e *Error) GoString() string","Funname":"GoString","Returntype":"string","Args":""},{"Uniquefunname":"func New() *Error","Funname":"New","Returntype":"*Error","Args":""},{"Uniquefunname":"func (e *Error) WrappedErrors() []error","Funname":"WrappedErrors","Returntype":"[]error","Args":""},{"Uniquefunname":"func (e *Error) Append(errs ...error)","Funname":"multierr.Error.Append","Returntype":"","Args":"errs ...error"},{"Uniquefunname":"func (e *Error) Error() string","Funname":"multierr.Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (e *Error) ErrorOrNil() error","Funname":"multierr.Error.ErrorOrNil","Returntype":"error","Args":""},{"Uniquefunname":"func (e *Error) GoString() string","Funname":"multierr.Error.GoString","Returntype":"string","Args":""},{"Uniquefunname":"func (e *Error) WrappedErrors() []error","Funname":"multierr.Error.WrappedErrors","Returntype":"[]error","Args":""},{"Uniquefunname":"func New() *Error","Funname":"multierr.New","Returntype":"*Error","Args":""}],"Records":[{"Name":"struct:multierr.Error","Fields":["multierr.Error.ErrorFormat ErrorFormatFunc","multierr.Error.Errors []error"]}]}
{"Filepath":"multierr/multierr_test.go","Functions":[{"Uniquefunname":"func TestErrorErrorOrNil(t *testing.T)","Funname":"TestErrorErrorOrNil","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorError_custom(t *testing.T)","Funname":"TestErrorError_custom","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorError_default(t *testing.T)","Funname":"TestErrorError_default","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorWrappedErrors(t *testing.T)","Funname":"TestErrorWrappedErrors","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestError_Impl(t *testing.T)","Funname":"TestError_Impl","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorErrorOrNil(t *testing.T)","Funname":"multierr.TestErrorErrorOrNil","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorError_custom(t *testing.T)","Funname":"multierr.TestErrorError_custom","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorError_default(t *testing.T)","Funname":"multierr.TestErrorError_default","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestErrorWrappedErrors(t *testing.T)","Funname":"multierr.TestErrorWrappedErrors","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestError_Impl(t *testing.T)","Funname":"multierr.TestError_Impl","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"notify/const.go","Functions":[{"Uniquefunname":"func (i ClosedReason) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (i ClosedReason) String() string","Funname":"notify.ClosedReason.String","Returntype":"string","Args":""}],"Records":[{"Name":"const:notify","Fields":["notify.ClosedReasonCallCloseNotification","notify.ClosedReasonDismissedByUser","notify.ClosedReasonExpired","notify.ClosedReasonInvalid","notify.ClosedReasonUnknown","notify.ExpiresDefault","notify.ExpiresMillisecond","notify.ExpiresNever","notify.ExpiresSecond","notify.HintActionIcons","notify.HintCategory","notify.HintDesktopEntry","notify.HintImageData","notify.HintImagePath","notify.HintResident","notify.HintSoundFile","notify.HintSoundName","notify.HintSuppressSound","notify.HintTransient","notify.HintUrgency","notify.HintX","notify.HintY","notify.UrgencyCritical","notify.UrgencyLow","notify.UrgencyNormal","notify.dbusDest","notify.dbusPath"]}]}
{"Filepath":"notify/image.go","Functions":[{"Uniquefunname":"func NewImage(src image.Image) *Image","Funname":"NewImage","Returntype":"*Image","Args":"src image.Image"},{"Uniquefunname":"func (n *Notification) SetImage(img image.Image)","Funname":"SetImage","Returntype":"","Args":"img image.Image"},{"Uniquefunname":"func newImageFromRGBA(img *image.RGBA) *Image","Funname":"newImageFromRGBA","Returntype":"*Image","Args":"img *image.RGBA"},{"Uniquefunname":"func NewImage(src image.Image) *Image","Funname":"notify.NewImage","Returntype":"*Image","Args":"src image.Image"},{"Uniquefunname":"func (n *Notification) SetImage(img image.Image)","Funname":"notify.Notification.SetImage","Returntype":"","Args":"img image.Image"},{"Uniquefunname":"func newImageFromRGBA(img *image.RGBA) *Image","Funname":"notify.newImageFromRGBA","Returntype":"*Image","Args":"img *image.RGBA"},{"Uniquefunname":"func toRGBA(src image.Image) *image.RGBA","Funname":"notify.toRGBA","Returntype":"*image.RGBA","Args":"src image.Image"},{"Uniquefunname":"func toRGBA(src image.Image) *image.RGBA","Funname":"toRGBA","Returntype":"*image.RGBA","Args":"src image.Image"}],"Records":[{"Name":"struct:notify.Image","Fields":["notify.Image.BitsPerSample int32","notify.Image.Channels int32","notify.Image.HasAlpha bool","notify.Image.Height int32","notify.Image.Pix []byte","notify.Image.RowStride int32","notify.Image.Width int32"]}]}
{"Filepath":"notify/notification.go","Functions":[{"Uniquefunname":"func (n *Notification) AddAction(action, label string, callback ActionCallback)","Funname":"AddAction","Returntype":"","Args":"action, label string, callback ActionCallback"},{"Uniquefunname":"func (n *Notification) ClearActions()","Funname":"ClearActions","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) ClearHints()","Funname":"ClearHints","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Notification) Closed() *event.Event","Funname":"Closed","Returntype":"*event.Event","Args":""},{"Uniquefunname":"func (n *Notification) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) GetClosedReason() ClosedReason","Funname":"GetClosedReason","Returntype":"ClosedReason","Args":""},{"Uniquefunname":"func NewNotification(summary, body, icon string) *Notification","Funname":"NewNotification","Returntype":"*Notification","Args":"summary, body, icon string"},{"Uniquefunname":"func (n *Notification) SetCategory(category string)","Funname":"SetCategory","Returntype":"","Args":"category string"},{"Uniquefunname":"func (n *Notification) SetHint(key string, value interface","Funname":"SetHint","Returntype":"","Args":"key string, value interface{}"},{"Uniquefunname":"func (n *Notification) SetUrgency(urgency byte)","Funname":"SetUrgency","Returntype":"","Args":"urgency byte"},{"Uniquefunname":"func (n *Notification) Show() error","Funname":"Show","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Notification) Update(summary, body, icon string)","Funname":"Update","Returntype":"","Args":"summary, body, icon string"},{"Uniquefunname":"func (n *Notification) getAppName() string","Funname":"getAppName","Returntype":"string","Args":""},{"Uniquefunname":"func NewNotification(summary, body, icon string) *Notification","Funname":"notify.NewNotification","Returntype":"*Notification","Args":"summary, body, icon string"},{"Uniquefunname":"func (n *Notification) AddAction(action, label string, callback ActionCallback)","Funname":"notify.Notification.AddAction","Returntype":"","Args":"action, label string, callback ActionCallback"},{"Uniquefunname":"func (n *Notification) ClearActions()","Funname":"notify.Notification.ClearActions","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) ClearHints()","Funname":"notify.Notification.ClearHints","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) Close() error","Funname":"notify.Notification.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Notification) Closed() *event.Event","Funname":"notify.Notification.Closed","Returntype":"*event.Event","Args":""},{"Uniquefunname":"func (n *Notification) Destroy()","Funname":"notify.Notification.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (n *Notification) GetClosedReason() ClosedReason","Funname":"notify.Notification.GetClosedReason","Returntype":"ClosedReason","Args":""},{"Uniquefunname":"func (n *Notification) SetCategory(category string)","Funname":"notify.Notification.SetCategory","Returntype":"","Args":"category string"},{"Uniquefunname":"func (n *Notification) SetHint(key string, value interface","Funname":"notify.Notification.SetHint","Returntype":"","Args":"key string, value interface{}"},{"Uniquefunname":"func (n *Notification) SetUrgency(urgency byte)","Funname":"notify.Notification.SetUrgency","Returntype":"","Args":"urgency byte"},{"Uniquefunname":"func (n *Notification) Show() error","Funname":"notify.Notification.Show","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Notification) Update(summary, body, icon string)","Funname":"notify.Notification.Update","Returntype":"","Args":"summary, body, icon string"},{"Uniquefunname":"func (n *Notification) getAppName() string","Funname":"notify.Notification.getAppName","Returntype":"string","Args":""}],"Records":[{"Name":"struct:notify.Notification","Fields":["notify.Notification.AppName string","notify.Notification.Body string","notify.Notification.Icon string","notify.Notification.Summary string","notify.Notification.Timeout int32","notify.Notification.actionInvokedConnectRet func()","notify.Notification.actionMap map[string]ActionCallback","notify.Notification.actions []string","notify.Notification.closed *event.Event","notify.Notification.closedReason ClosedReason","notify.Notification.hints _HintMap","notify.Notification.id uint32","notify.Notification.mu sync.Mutex","notify.Notification.notificationClosedConnectRet func()"]}]}
{"Filepath":"notify/notify.go","Functions":[{"Uniquefunname":"func Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func GetAppName() string","Funname":"GetAppName","Returntype":"string","Args":""},{"Uniquefunname":"func GetServerCaps() ([]string, error)","Funname":"GetServerCaps","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func GetServerInfo() (*ServerInfo, error)","Funname":"GetServerInfo","Returntype":"(*ServerInfo, error)","Args":""},{"Uniquefunname":"func Init(appName string) bool","Funname":"Init","Returntype":"bool","Args":"appName string"},{"Uniquefunname":"func IsInitted() bool","Funname":"IsInitted","Returntype":"bool","Args":""},{"Uniquefunname":"func SetAppName(name string)","Funname":"SetAppName","Returntype":"","Args":"name string"},{"Uniquefunname":"func Destroy()","Funname":"notify.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func GetAppName() string","Funname":"notify.GetAppName","Returntype":"string","Args":""},{"Uniquefunname":"func GetServerCaps() ([]string, error)","Funname":"notify.GetServerCaps","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func GetServerInfo() (*ServerInfo, error)","Funname":"notify.GetServerInfo","Returntype":"(*ServerInfo, error)","Args":""},{"Uniquefunname":"func Init(appName string) bool","Funname":"notify.Init","Returntype":"bool","Args":"appName string"},{"Uniquefunname":"func IsInitted() bool","Funname":"notify.IsInitted","Returntype":"bool","Args":""},{"Uniquefunname":"func SetAppName(name string)","Funname":"notify.SetAppName","Returntype":"","Args":"name string"}],"Records":[{"Name":"struct:notify.ServerInfo","Fields":["notify.ServerInfo.Name string","notify.ServerInfo.SpecVersion string","notify.ServerInfo.Vendor string","notify.ServerInfo.Version string"]},{"Name":"var:notify","Fields":["notify.defaultAppName","notify.isInitted","notify.notifier"]}]}
{"Filepath":"notify/dbusnotify/init.go","Functions":[{"Uniquefunname":"func dbusAddMatch(rule string) (err error)","Funname":"dbusAddMatch","Returntype":"(err error)","Args":"rule string"},{"Uniquefunname":"func dbusCall(method string, flags dbus.Flags, args ...interface","Funname":"dbusCall","Returntype":"(err error)","Args":"method string, flags dbus.Flags, args ...interface{}"},{"Uniquefunname":"func dbusRemoveMatch(rule string) (err error)","Funname":"dbusRemoveMatch","Returntype":"(err error)","Args":"rule string"},{"Uniquefunname":"func dbusAddMatch(rule string) (err error)","Funname":"dbusnotify.dbusAddMatch","Returntype":"(err error)","Args":"rule string"},{"Uniquefunname":"func dbusCall(method string, flags dbus.Flags, args ...interface","Funname":"dbusnotify.dbusCall","Returntype":"(err error)","Args":"method string, flags dbus.Flags, args ...interface{}"},{"Uniquefunname":"func dbusRemoveMatch(rule string) (err error)","Funname":"dbusnotify.dbusRemoveMatch","Returntype":"(err error)","Args":"rule string"},{"Uniquefunname":"func getBus() *dbus.Conn","Funname":"dbusnotify.getBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func getRuleCounter() map[string]int","Funname":"dbusnotify.getRuleCounter","Returntype":"map[string]int","Args":""},{"Uniquefunname":"func getBus() *dbus.Conn","Funname":"getBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func getRuleCounter() map[string]int","Funname":"getRuleCounter","Returntype":"map[string]int","Args":""}],"Records":[{"Name":"var:dbusnotify","Fields":["dbusnotify.__conn","dbusnotify.__connLock","dbusnotify.__ruleCounter","dbusnotify.__ruleCounterLock"]}]}
{"Filepath":"notify/dbusnotify/notify.go","Functions":[{"Uniquefunname":"func (obj *Notifier) CloseNotification(id uint32) (_err error)","Funname":"CloseNotification","Returntype":"(_err error)","Args":"id uint32"},{"Uniquefunname":"func (obj *Notifier) ConnectActionInvoked(callback func(id uint32, action_key string)) func()","Funname":"ConnectActionInvoked","Returntype":"func()","Args":"callback func(id uint32, action_key string)"},{"Uniquefunname":"func (obj *Notifier) ConnectNotificationClosed(callback func(id uint32, reason uint32)) func()","Funname":"ConnectNotificationClosed","Returntype":"func()","Args":"callback func(id uint32, reason uint32)"},{"Uniquefunname":"func DestroyNotifier(obj *Notifier)","Funname":"DestroyNotifier","Returntype":"","Args":"obj *Notifier"},{"Uniquefunname":"func (obj *Notifier) GetCapabilities() (caps []string, _err error)","Funname":"GetCapabilities","Returntype":"(caps []string, _err error)","Args":""},{"Uniquefunname":"func GetServerInformation()(name string, vendor string, version string, spec_version string, _err error)","Funname":"GetServerInformation","Returntype":"(name string, vendor string, version string, spec_version string, _err error)","Args":""},{"Uniquefunname":"func NewNotifier(destName string, path dbus.ObjectPath) (*Notifier, error)","Funname":"NewNotifier","Returntype":"(*Notifier, error)","Args":"destName string, path dbus.ObjectPath"},{"Uniquefunname":"func Notify(app_name string, id uint32, icon string, summary string, body string, actions []string, hints map[string]dbus.Variant, timeout int32)(id_ uint32, _err error)","Funname":"Notify","Returntype":"(id_ uint32, _err error)","Args":"app_name string, id uint32, icon string, summary string, body string, actions []string, hints map[string]dbus.Variant, timeout int32"},{"Uniquefunname":"func (obj *Notifier) _createSignalChan() chan *dbus.Signal","Funname":"_createSignalChan","Returntype":"chan *dbus.Signal","Args":""},{"Uniquefunname":"func (obj *Notifier) _deleteSignalChan(ch chan *dbus.Signal)","Funname":"_deleteSignalChan","Returntype":"","Args":"ch chan *dbus.Signal"},{"Uniquefunname":"func DestroyNotifier(obj *Notifier)","Funname":"dbusnotify.DestroyNotifier","Returntype":"","Args":"obj *Notifier"},{"Uniquefunname":"func NewNotifier(destName string, path dbus.ObjectPath) (*Notifier, error)","Funname":"dbusnotify.NewNotifier","Returntype":"(*Notifier, error)","Args":"destName string, path dbus.ObjectPath"},{"Uniquefunname":"func (obj *Notifier) CloseNotification(id uint32) (_err error)","Funname":"dbusnotify.Notifier.CloseNotification","Returntype":"(_err error)","Args":"id uint32"},{"Uniquefunname":"func (obj *Notifier) ConnectActionInvoked(callback func(id uint32, action_key string)) func()","Funname":"dbusnotify.Notifier.ConnectActionInvoked","Returntype":"func()","Args":"callback func(id uint32, action_key string)"},{"Uniquefunname":"func (obj *Notifier) ConnectNotificationClosed(callback func(id uint32, reason uint32)) func()","Funname":"dbusnotify.Notifier.ConnectNotificationClosed","Returntype":"func()","Args":"callback func(id uint32, reason uint32)"},{"Uniquefunname":"func (obj *Notifier) GetCapabilities() (caps []string, _err error)","Funname":"dbusnotify.Notifier.GetCapabilities","Returntype":"(caps []string, _err error)","Args":""},{"Uniquefunname":"func dbusnotify.Notifier.GetServerInformation()(name string, vendor string, version string, spec_version string, _err error)","Funname":"dbusnotify.Notifier.GetServerInformation","Returntype":"(name string, vendor string, version string, spec_version string, _err error)","Args":""},{"Uniquefunname":"func dbusnotify.Notifier.Notify(app_name string, id uint32, icon string, summary string, body string, actions []string, hints map[string]dbus.Variant, timeout int32)(id_ uint32, _err error)","Funname":"dbusnotify.Notifier.Notify","Returntype":"(id_ uint32, _err error)","Args":"app_name string, id uint32, icon string, summary string, body string, actions []string, hints map[string]dbus.Variant, timeout int32"},{"Uniquefunname":"func (obj *Notifier) _createSignalChan() chan *dbus.Signal","Funname":"dbusnotify.Notifier._createSignalChan","Returntype":"chan *dbus.Signal","Args":""},{"Uniquefunname":"func (obj *Notifier) _deleteSignalChan(ch chan *dbus.Signal)","Funname":"dbusnotify.Notifier._deleteSignalChan","Returntype":"","Args":"ch chan *dbus.Signal"}],"Records":[{"Name":"struct:dbusnotify.Notifier","Fields":["dbusnotify.Notifier.DestName string","dbusnotify.Notifier.Path dbus.ObjectPath","dbusnotify.Notifier.core dbus.BusObject","dbusnotify.Notifier.signals map[chan *dbus.Signal]struct{}","dbusnotify.Notifier.signalsLocker sync.Mutex"]},{"Name":"var:dbusnotify","Fields":["dbusnotify._","dbusnotify._","dbusnotify._","dbusnotify._"]}]}
{"Filepath":"notify/examples/action.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func show()","Funname":"main.show","Returntype":"","Args":""},{"Uniquefunname":"func show()","Funname":"show","Returntype":"","Args":""}],"Records":null}
{"Filepath":"notify/examples/image.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func loadImage(filename string) (image.Image, error)","Funname":"loadImage","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func loadImage(filename string) (image.Image, error)","Funname":"main.loadImage","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func show(filename string)","Funname":"main.show","Returntype":"","Args":"filename string"},{"Uniquefunname":"func show(filename string)","Funname":"show","Returntype":"","Args":"filename string"}],"Records":null}
{"Filepath":"notify/examples/simple.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"notify/examples/update.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"pam/handler.go","Functions":[{"Uniquefunname":"func (f ConversationFunc) RespondPAM(s Style, msg string) (string, error)","Funname":"RespondPAM","Returntype":"(string, error)","Args":"s Style, msg string"},{"Uniquefunname":"func addHandler(handler ConversationHandler) handlerId","Funname":"addHandler","Returntype":"handlerId","Args":"handler ConversationHandler"},{"Uniquefunname":"func deleteHandler(id handlerId)","Funname":"deleteHandler","Returntype":"","Args":"id handlerId"},{"Uniquefunname":"func getHandler(id handlerId) ConversationHandler","Funname":"getHandler","Returntype":"ConversationHandler","Args":"id handlerId"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (f ConversationFunc) RespondPAM(s Style, msg string) (string, error)","Funname":"pam.ConversationFunc.RespondPAM","Returntype":"(string, error)","Args":"s Style, msg string"},{"Uniquefunname":"func addHandler(handler ConversationHandler) handlerId","Funname":"pam.addHandler","Returntype":"handlerId","Args":"handler ConversationHandler"},{"Uniquefunname":"func deleteHandler(id handlerId)","Funname":"pam.deleteHandler","Returntype":"","Args":"id handlerId"},{"Uniquefunname":"func getHandler(id handlerId) ConversationHandler","Funname":"pam.getHandler","Returntype":"ConversationHandler","Args":"id handlerId"},{"Uniquefunname":"func init()","Funname":"pam.init","Returntype":"","Args":""}],"Records":[{"Name":"interface","Fields":["pam.ConversationHandler"]},{"Name":"var:pam","Fields":["pam.globalHandlers"]}]}
{"Filepath":"pam/pam.go","Functions":[{"Uniquefunname":"func (h *Transaction) AccountValidManagement(flags Flags) error","Funname":"AccountValidManagement","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) Authenticate(flags Flags) error","Funname":"Authenticate","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) ChangeAuthToken(flags Flags) error","Funname":"ChangeAuthToken","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) CloseSession(flags Flags) error","Funname":"CloseSession","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) DeleteEnv(name string) error","Funname":"DeleteEnv","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (h *Transaction) End(lastStatus int) error","Funname":"End","Returntype":"error","Args":"lastStatus int"},{"Uniquefunname":"func (err Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (h *Transaction) GetEnv(name string) string","Funname":"GetEnv","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (h *Transaction) GetEnvList() map[string]string","Funname":"GetEnvList","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func (h *Transaction) GetItemStr(itemType Item) (string, error)","Funname":"GetItemStr","Returntype":"(string, error)","Args":"itemType Item"},{"Uniquefunname":"func (h *Transaction) LastStatus() int","Funname":"LastStatus","Returntype":"int","Args":""},{"Uniquefunname":"func (h *Transaction) OpenSession(flags Flags) error","Funname":"OpenSession","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) PutEnv(name, value string) error","Funname":"PutEnv","Returntype":"error","Args":"name, value string"},{"Uniquefunname":"func (h *Transaction) SetCredentials(flags Flags) error","Funname":"SetCredentials","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) SetItemStr(itemType Item, item string) error","Funname":"SetItemStr","Returntype":"error","Args":"itemType Item, item string"},{"Uniquefunname":"func Start(service, user string, handler ConversationHandler) (*Transaction, error)","Funname":"Start","Returntype":"(*Transaction, error)","Args":"service, user string, handler ConversationHandler"},{"Uniquefunname":"func StartFunc(service, user string, handler func(Style, string) (string, error))(*Transaction, error)","Funname":"StartFunc","Returntype":"(*Transaction, error)","Args":"service, user string, handler func(Style, string) (string, error)"},{"Uniquefunname":"func cbPAMConv(style C.int, msg *C.char, id C.long, resp **C.char) C.int","Funname":"cbPAMConv","Returntype":"C.int","Args":"style C.int, msg *C.char, id C.long, resp **C.char"},{"Uniquefunname":"func next(p **C.char) **C.char","Funname":"next","Returntype":"**C.char","Args":"p **C.char"},{"Uniquefunname":"func (err Error) Error() string","Funname":"pam.Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func Start(service, user string, handler ConversationHandler) (*Transaction, error)","Funname":"pam.Start","Returntype":"(*Transaction, error)","Args":"service, user string, handler ConversationHandler"},{"Uniquefunname":"func pam.StartFunc(service, user string, handler func(Style, string) (string, error))(*Transaction, error)","Funname":"pam.StartFunc","Returntype":"(*Transaction, error)","Args":"service, user string, handler func(Style, string) (string, error)"},{"Uniquefunname":"func (h *Transaction) AccountValidManagement(flags Flags) error","Funname":"pam.Transaction.AccountValidManagement","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) Authenticate(flags Flags) error","Funname":"pam.Transaction.Authenticate","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) ChangeAuthToken(flags Flags) error","Funname":"pam.Transaction.ChangeAuthToken","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) CloseSession(flags Flags) error","Funname":"pam.Transaction.CloseSession","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) DeleteEnv(name string) error","Funname":"pam.Transaction.DeleteEnv","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (h *Transaction) End(lastStatus int) error","Funname":"pam.Transaction.End","Returntype":"error","Args":"lastStatus int"},{"Uniquefunname":"func (h *Transaction) GetEnv(name string) string","Funname":"pam.Transaction.GetEnv","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (h *Transaction) GetEnvList() map[string]string","Funname":"pam.Transaction.GetEnvList","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func (h *Transaction) GetItemStr(itemType Item) (string, error)","Funname":"pam.Transaction.GetItemStr","Returntype":"(string, error)","Args":"itemType Item"},{"Uniquefunname":"func (h *Transaction) LastStatus() int","Funname":"pam.Transaction.LastStatus","Returntype":"int","Args":""},{"Uniquefunname":"func (h *Transaction) OpenSession(flags Flags) error","Funname":"pam.Transaction.OpenSession","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) PutEnv(name, value string) error","Funname":"pam.Transaction.PutEnv","Returntype":"error","Args":"name, value string"},{"Uniquefunname":"func (h *Transaction) SetCredentials(flags Flags) error","Funname":"pam.Transaction.SetCredentials","Returntype":"error","Args":"flags Flags"},{"Uniquefunname":"func (h *Transaction) SetItemStr(itemType Item, item string) error","Funname":"pam.Transaction.SetItemStr","Returntype":"error","Args":"itemType Item, item string"},{"Uniquefunname":"func (h *Transaction) toErr(errNum C.int) error","Funname":"pam.Transaction.toErr","Returntype":"error","Args":"errNum C.int"},{"Uniquefunname":"func cbPAMConv(style C.int, msg *C.char, id C.long, resp **C.char) C.int","Funname":"pam.cbPAMConv","Returntype":"C.int","Args":"style C.int, msg *C.char, id C.long, resp **C.char"},{"Uniquefunname":"func next(p **C.char) **C.char","Funname":"pam.next","Returntype":"**C.char","Args":"p **C.char"},{"Uniquefunname":"func (h *Transaction) toErr(errNum C.int) error","Funname":"toErr","Returntype":"error","Args":"errNum C.int"}],"Records":[{"Name":"const:pam","Fields":["pam.Authtok","pam.ChangeExpiredAuthtok","pam.DeleteCred","pam.DisallowNullAuthtok","pam.ErrorMsg","pam.EstablishCred","pam.Oldauthtok","pam.PromptEchoOff","pam.PromptEchoOn","pam.RefreshCred","pam.ReinitializeCred","pam.Rhost","pam.Ruser","pam.Service","pam.Silent","pam.TextInfo","pam.Tty","pam.User","pam.UserPrompt"]},{"Name":"struct:pam.Error","Fields":["pam.Error.Code int","pam.Error.Msg string"]},{"Name":"struct:pam.Transaction","Fields":["pam.Transaction.handlerId handlerId","pam.Transaction.ptr *C.pam_handle_t","pam.Transaction.status C.int"]}]}
{"Filepath":"pinyin/datas.go","Functions":null,"Records":[{"Name":"var:pinyin","Fields":["pinyin.PinyinDataMap"]}]}
{"Filepath":"pinyin/pinyin.go","Functions":[{"Uniquefunname":"func HansToPinyin(hans string) []string","Funname":"HansToPinyin","Returntype":"[]string","Args":"hans string"},{"Uniquefunname":"func getPinyinByHan(han int64) []string","Funname":"getPinyinByHan","Returntype":"[]string","Args":"han int64"},{"Uniquefunname":"func getPinyinFromKey(key string) []string","Funname":"getPinyinFromKey","Returntype":"[]string","Args":"key string"},{"Uniquefunname":"func HansToPinyin(hans string) []string","Funname":"pinyin.HansToPinyin","Returntype":"[]string","Args":"hans string"},{"Uniquefunname":"func getPinyinByHan(han int64) []string","Funname":"pinyin.getPinyinByHan","Returntype":"[]string","Args":"han int64"},{"Uniquefunname":"func getPinyinFromKey(key string) []string","Funname":"pinyin.getPinyinFromKey","Returntype":"[]string","Args":"key string"},{"Uniquefunname":"func rangeArray(a1, a2 []string) []string","Funname":"pinyin.rangeArray","Returntype":"[]string","Args":"a1, a2 []string"},{"Uniquefunname":"func rangeArray(a1, a2 []string) []string","Funname":"rangeArray","Returntype":"[]string","Args":"a1, a2 []string"}],"Records":null}
{"Filepath":"pinyin_search/pinyin_search.go","Functions":[{"Uniquefunname":"func GeneralizeQuery(q string) string","Funname":"GeneralizeQuery","Returntype":"string","Args":"q string"},{"Uniquefunname":"func (blocks Blocks) Match(query string) bool","Funname":"Match","Returntype":"bool","Args":"query string"},{"Uniquefunname":"func Split(str string) Blocks","Funname":"Split","Returntype":"Blocks","Args":"str string"},{"Uniquefunname":"func (zb zhBlock) getList() []string","Funname":"getList","Returntype":"[]string","Args":""},{"Uniquefunname":"func getPyList(py string) []string","Funname":"getPyList","Returntype":"[]string","Args":"py string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (c commonBlock) isBlock()","Funname":"isBlock","Returntype":"","Args":""},{"Uniquefunname":"func (zb zhBlock) isBlock()","Funname":"isBlock","Returntype":"","Args":""},{"Uniquefunname":"func matchAux(target, query string) (isMatch bool, end bool, n int)","Funname":"matchAux","Returntype":"(isMatch bool, end bool, n int)","Args":"target, query string"},{"Uniquefunname":"func matchBegin(blocks []block, query string) (result bool)","Funname":"matchBegin","Returntype":"(result bool)","Args":"blocks []block, query string"},{"Uniquefunname":"func (blocks Blocks) Match(query string) bool","Funname":"pinyin_search.Blocks.Match","Returntype":"bool","Args":"query string"},{"Uniquefunname":"func GeneralizeQuery(q string) string","Funname":"pinyin_search.GeneralizeQuery","Returntype":"string","Args":"q string"},{"Uniquefunname":"func Split(str string) Blocks","Funname":"pinyin_search.Split","Returntype":"Blocks","Args":"str string"},{"Uniquefunname":"func (c commonBlock) isBlock()","Funname":"pinyin_search.commonBlock.isBlock","Returntype":"","Args":""},{"Uniquefunname":"func getPyList(py string) []string","Funname":"pinyin_search.getPyList","Returntype":"[]string","Args":"py string"},{"Uniquefunname":"func init()","Funname":"pinyin_search.init","Returntype":"","Args":""},{"Uniquefunname":"func matchAux(target, query string) (isMatch bool, end bool, n int)","Funname":"pinyin_search.matchAux","Returntype":"(isMatch bool, end bool, n int)","Args":"target, query string"},{"Uniquefunname":"func matchBegin(blocks []block, query string) (result bool)","Funname":"pinyin_search.matchBegin","Returntype":"(result bool)","Args":"blocks []block, query string"},{"Uniquefunname":"func strSliceUniq(slice []string) []string","Funname":"pinyin_search.strSliceUniq","Returntype":"[]string","Args":"slice []string"},{"Uniquefunname":"func strSliceUniqAux(in []string) []string","Funname":"pinyin_search.strSliceUniqAux","Returntype":"[]string","Args":"in []string"},{"Uniquefunname":"func (zb zhBlock) getList() []string","Funname":"pinyin_search.zhBlock.getList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (zb zhBlock) isBlock()","Funname":"pinyin_search.zhBlock.isBlock","Returntype":"","Args":""},{"Uniquefunname":"func strSliceUniq(slice []string) []string","Funname":"strSliceUniq","Returntype":"[]string","Args":"slice []string"},{"Uniquefunname":"func strSliceUniqAux(in []string) []string","Funname":"strSliceUniqAux","Returntype":"[]string","Args":"in []string"}],"Records":[{"Name":"interface","Fields":["pinyin_search.block"]},{"Name":"var:pinyin_search","Fields":["pinyin_search.pinyinArgs"]},{"Name":"struct:pinyin_search.zhBlock","Fields":["pinyin_search.zhBlock.pys []string","pinyin_search.zhBlock.zh rune"]}]}
{"Filepath":"pinyin_search/t1_test.go","Functions":[{"Uniquefunname":"func TestGeneralize(t *testing.T)","Funname":"TestGeneralize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMatch(t *testing.T)","Funname":"TestMatch","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSplit(t *testing.T)","Funname":"TestSplit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getPyList(t *testing.T)","Funname":"Test_getPyList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_matchAux(t *testing.T)","Funname":"Test_matchAux","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_matchBegin(t *testing.T)","Funname":"Test_matchBegin","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_strSliceUniq(t *testing.T)","Funname":"Test_strSliceUniq","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGeneralize(t *testing.T)","Funname":"pinyin_search.TestGeneralize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMatch(t *testing.T)","Funname":"pinyin_search.TestMatch","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSplit(t *testing.T)","Funname":"pinyin_search.TestSplit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getPyList(t *testing.T)","Funname":"pinyin_search.Test_getPyList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_matchAux(t *testing.T)","Funname":"pinyin_search.Test_matchAux","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_matchBegin(t *testing.T)","Funname":"pinyin_search.Test_matchBegin","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_strSliceUniq(t *testing.T)","Funname":"pinyin_search.Test_strSliceUniq","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"procfs/procfs.go","Functions":[{"Uniquefunname":"func (p Process) Cmdline() ([]string, error)","Funname":"Cmdline","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func (p Process) Cwd() (string, error)","Funname":"Cwd","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (p Process) Environ() (EnvVars, error)","Funname":"Environ","Returntype":"(EnvVars, error)","Args":""},{"Uniquefunname":"func (err StatusFieldNotFoundErr) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (p Process) Exe() (string, error)","Funname":"Exe","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (p Process) Exist() bool","Funname":"Exist","Returntype":"bool","Args":""},{"Uniquefunname":"func (vars EnvVars) Get(key string) string","Funname":"Get","Returntype":"string","Args":"key string"},{"Uniquefunname":"func (vars EnvVars) Lookup(key string) (string, bool)","Funname":"Lookup","Returntype":"(string, bool)","Args":"key string"},{"Uniquefunname":"func (st Status) PPid() (uint, error)","Funname":"PPid","Returntype":"(uint, error)","Args":""},{"Uniquefunname":"func (p Process) Status() (Status, error)","Funname":"Status","Returntype":"(Status, error)","Args":""},{"Uniquefunname":"func (st Status) Uids() ([]uint, error)","Funname":"Uids","Returntype":"([]uint, error)","Args":""},{"Uniquefunname":"func (p Process) getFile(name string) string","Funname":"getFile","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (st Status) lookup(key string) (string, error)","Funname":"lookup","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func (vars EnvVars) Get(key string) string","Funname":"procfs.EnvVars.Get","Returntype":"string","Args":"key string"},{"Uniquefunname":"func (vars EnvVars) Lookup(key string) (string, bool)","Funname":"procfs.EnvVars.Lookup","Returntype":"(string, bool)","Args":"key string"},{"Uniquefunname":"func (p Process) Cmdline() ([]string, error)","Funname":"procfs.Process.Cmdline","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func (p Process) Cwd() (string, error)","Funname":"procfs.Process.Cwd","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (p Process) Environ() (EnvVars, error)","Funname":"procfs.Process.Environ","Returntype":"(EnvVars, error)","Args":""},{"Uniquefunname":"func (p Process) Exe() (string, error)","Funname":"procfs.Process.Exe","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (p Process) Exist() bool","Funname":"procfs.Process.Exist","Returntype":"bool","Args":""},{"Uniquefunname":"func (p Process) Status() (Status, error)","Funname":"procfs.Process.Status","Returntype":"(Status, error)","Args":""},{"Uniquefunname":"func (p Process) getFile(name string) string","Funname":"procfs.Process.getFile","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (st Status) PPid() (uint, error)","Funname":"procfs.Status.PPid","Returntype":"(uint, error)","Args":""},{"Uniquefunname":"func (st Status) Uids() ([]uint, error)","Funname":"procfs.Status.Uids","Returntype":"([]uint, error)","Args":""},{"Uniquefunname":"func (st Status) lookup(key string) (string, error)","Funname":"procfs.Status.lookup","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func (err StatusFieldNotFoundErr) Error() string","Funname":"procfs.StatusFieldNotFoundErr.Error","Returntype":"string","Args":""}],"Records":[{"Name":"struct:procfs.StatusFieldNotFoundErr","Fields":["procfs.StatusFieldNotFoundErr.Field string"]}]}
{"Filepath":"procfs/procfs_test.go","Functions":[{"Uniquefunname":"func TestCmdline(t *testing.T)","Funname":"TestCmdline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCwd(t *testing.T)","Funname":"TestCwd","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEnvVars(t *testing.T)","Funname":"TestEnvVars","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEnvion(t *testing.T)","Funname":"TestEnvion","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExe(t *testing.T)","Funname":"TestExe","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExist(t *testing.T)","Funname":"TestExist","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetFile(t *testing.T)","Funname":"TestGetFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestStatus(t *testing.T)","Funname":"TestStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCmdline(t *testing.T)","Funname":"procfs.TestCmdline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCwd(t *testing.T)","Funname":"procfs.TestCwd","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEnvVars(t *testing.T)","Funname":"procfs.TestEnvVars","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEnvion(t *testing.T)","Funname":"procfs.TestEnvion","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExe(t *testing.T)","Funname":"procfs.TestExe","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExist(t *testing.T)","Funname":"procfs.TestExist","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetFile(t *testing.T)","Funname":"procfs.TestGetFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestStatus(t *testing.T)","Funname":"procfs.TestStatus","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"profile/profile.go","Functions":[{"Uniquefunname":"func (prof *_Profile) File() string","Funname":"File","Returntype":"string","Args":""},{"Uniquefunname":"func (cfg *Config) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (prof *_BlockProfile) Start(writer io.Writer)","Funname":"Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (prof *_CPUProfile) Start(writer io.Writer)","Funname":"Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (prof *_MemProfile) Start(writer io.Writer)","Funname":"Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (cfg *Config) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_BlockProfile) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_CPUProfile) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_MemProfile) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func (cfg *Config) enableProfile(prof interface","Funname":"enableProfile","Returntype":"error","Args":"prof interface { File() string; Start(io.Writer); Stop();}"},{"Uniquefunname":"func newBlockProfile(file string) *_BlockProfile","Funname":"newBlockProfile","Returntype":"*_BlockProfile","Args":"file string"},{"Uniquefunname":"func newCPUProfile(file string) *_CPUProfile","Funname":"newCPUProfile","Returntype":"*_CPUProfile","Args":"file string"},{"Uniquefunname":"func newMemPrifle(file string) *_MemProfile","Funname":"newMemPrifle","Returntype":"*_MemProfile","Args":"file string"},{"Uniquefunname":"func (cfg *Config) Start() error","Funname":"profile.Config.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (cfg *Config) Stop()","Funname":"profile.Config.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (cfg *Config) enableProfile(prof interface","Funname":"profile.Config.enableProfile","Returntype":"error","Args":"prof interface { File() string; Start(io.Writer); Stop();}"},{"Uniquefunname":"func (cfg *Config) stop()","Funname":"profile.Config.stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_BlockProfile) Start(writer io.Writer)","Funname":"profile._BlockProfile.Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (prof *_BlockProfile) Stop()","Funname":"profile._BlockProfile.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_CPUProfile) Start(writer io.Writer)","Funname":"profile._CPUProfile.Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (prof *_CPUProfile) Stop()","Funname":"profile._CPUProfile.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_MemProfile) Start(writer io.Writer)","Funname":"profile._MemProfile.Start","Returntype":"","Args":"writer io.Writer"},{"Uniquefunname":"func (prof *_MemProfile) Stop()","Funname":"profile._MemProfile.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (prof *_Profile) File() string","Funname":"profile._Profile.File","Returntype":"string","Args":""},{"Uniquefunname":"func newBlockProfile(file string) *_BlockProfile","Funname":"profile.newBlockProfile","Returntype":"*_BlockProfile","Args":"file string"},{"Uniquefunname":"func newCPUProfile(file string) *_CPUProfile","Funname":"profile.newCPUProfile","Returntype":"*_CPUProfile","Args":"file string"},{"Uniquefunname":"func newMemPrifle(file string) *_MemProfile","Funname":"profile.newMemPrifle","Returntype":"*_MemProfile","Args":"file string"},{"Uniquefunname":"func (cfg *Config) stop()","Funname":"stop","Returntype":"","Args":""}],"Records":[{"Name":"struct:profile.Config","Fields":["profile.Config.BlockProfile string","profile.Config.CPUProfile string","profile.Config.MemProfile string","profile.Config.NoShutdownHook bool","profile.Config.closeOnce sync.Once","profile.Config.closers []func()"]},{"Name":"struct:profile._Profile","Fields":["profile._Profile.file string","profile._Profile.writer io.Writer"]}]}
{"Filepath":"profile/profile_test.go","Functions":[{"Uniquefunname":"func ExampleConfig_Start()","Funname":"ExampleConfig_Start","Returntype":"","Args":""},{"Uniquefunname":"func ExampleConfig_Stop()","Funname":"ExampleConfig_Stop","Returntype":"","Args":""},{"Uniquefunname":"func ExampleConfig_Start()","Funname":"profile.ExampleConfig_Start","Returntype":"","Args":""},{"Uniquefunname":"func ExampleConfig_Stop()","Funname":"profile.ExampleConfig_Stop","Returntype":"","Args":""}],"Records":null}
{"Filepath":"profile/time.go","Functions":[{"Uniquefunname":"func (t *Timer) Elapsed() time.Duration","Funname":"Elapsed","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func NewTimer() *Timer","Funname":"NewTimer","Returntype":"*Timer","Args":""},{"Uniquefunname":"func (t *Timer) TotalCost() time.Duration","Funname":"TotalCost","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func NewTimer() *Timer","Funname":"profile.NewTimer","Returntype":"*Timer","Args":""},{"Uniquefunname":"func (t *Timer) Elapsed() time.Duration","Funname":"profile.Timer.Elapsed","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (t *Timer) TotalCost() time.Duration","Funname":"profile.Timer.TotalCost","Returntype":"time.Duration","Args":""}],"Records":[{"Name":"struct:profile.Timer","Fields":["profile.Timer.endTime time.Time","profile.Timer.moduleStartTime time.Time","profile.Timer.startTime time.Time"]}]}
{"Filepath":"proxy/dev_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestMain(c *C.C)","Funname":"TestMain","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func proxy.Test(t *testing.T)","Funname":"proxy.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"proxy.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestMain(c *C.C)","Funname":"proxy.testWrapper.TestMain","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"proxy/proxy.go","Functions":[{"Uniquefunname":"func SetupProxy()","Funname":"SetupProxy","Returntype":"","Args":""},{"Uniquefunname":"func doSetEnv(env, value string)","Funname":"doSetEnv","Returntype":"","Args":"env, value string"},{"Uniquefunname":"func getProxyChildSettings(proxyType string) (childSettings *gio.Settings, err error)","Funname":"getProxyChildSettings","Returntype":"(childSettings *gio.Settings, err error)","Args":"proxyType string"},{"Uniquefunname":"func getProxyValue(proxyType string) (proxyValue string)","Funname":"getProxyValue","Returntype":"(proxyValue string)","Args":"proxyType string"},{"Uniquefunname":"func listenProxyGsettings()","Funname":"listenProxyGsettings","Returntype":"","Args":""},{"Uniquefunname":"func SetupProxy()","Funname":"proxy.SetupProxy","Returntype":"","Args":""},{"Uniquefunname":"func doSetEnv(env, value string)","Funname":"proxy.doSetEnv","Returntype":"","Args":"env, value string"},{"Uniquefunname":"func getProxyChildSettings(proxyType string) (childSettings *gio.Settings, err error)","Funname":"proxy.getProxyChildSettings","Returntype":"(childSettings *gio.Settings, err error)","Args":"proxyType string"},{"Uniquefunname":"func getProxyValue(proxyType string) (proxyValue string)","Funname":"proxy.getProxyValue","Returntype":"(proxyValue string)","Args":"proxyType string"},{"Uniquefunname":"func listenProxyGsettings()","Funname":"proxy.listenProxyGsettings","Returntype":"","Args":""},{"Uniquefunname":"func showEnv(envName string)","Funname":"proxy.showEnv","Returntype":"","Args":"envName string"},{"Uniquefunname":"func showEnvs()","Funname":"proxy.showEnvs","Returntype":"","Args":""},{"Uniquefunname":"func updateProxyEnvs()","Funname":"proxy.updateProxyEnvs","Returntype":"","Args":""},{"Uniquefunname":"func showEnv(envName string)","Funname":"showEnv","Returntype":"","Args":"envName string"},{"Uniquefunname":"func showEnvs()","Funname":"showEnvs","Returntype":"","Args":""},{"Uniquefunname":"func updateProxyEnvs()","Funname":"updateProxyEnvs","Returntype":"","Args":""}],"Records":[{"Name":"const:proxy","Fields":["proxy.envAllProxy","proxy.envAutoProxy","proxy.envFtpProxy","proxy.envHttpProxy","proxy.envHttpsProxy","proxy.envNoProxy","proxy.envSocksProxy","proxy.gchildProxyFtp","proxy.gchildProxyHttp","proxy.gchildProxyHttps","proxy.gchildProxySocks","proxy.gkeyProxyAuto","proxy.gkeyProxyHost","proxy.gkeyProxyIgnoreHosts","proxy.gkeyProxyMode","proxy.gkeyProxyPort","proxy.gsettingsIdProxy","proxy.proxyModeAuto","proxy.proxyModeManual","proxy.proxyModeNone","proxy.proxyTypeFtp","proxy.proxyTypeHttp","proxy.proxyTypeHttps","proxy.proxyTypeSocks"]},{"Name":"var:proxy","Fields":["proxy.logger","proxy.proxyChildSettingsFtp","proxy.proxyChildSettingsHttp","proxy.proxyChildSettingsHttps","proxy.proxyChildSettingsSocks","proxy.proxySettings"]}]}
{"Filepath":"pulse/card.go","Functions":[{"Uniquefunname":"func (infos CardPortInfos) Get(name string, direction int) (CardPortInfo, error)","Funname":"Get","Returntype":"(CardPortInfo, error)","Args":"name string, direction int"},{"Uniquefunname":"func (card *Card) SetProfile(name string)","Funname":"SetProfile","Returntype":"","Args":"name string"},{"Uniquefunname":"func (infos CardPortInfos) TrySelectProfile(portName string) (string, error)","Funname":"TrySelectProfile","Returntype":"(string, error)","Args":"portName string"},{"Uniquefunname":"func (card *Card) SetProfile(name string)","Funname":"pulse.Card.SetProfile","Returntype":"","Args":"name string"},{"Uniquefunname":"func (infos CardPortInfos) Get(name string, direction int) (CardPortInfo, error)","Funname":"pulse.CardPortInfos.Get","Returntype":"(CardPortInfo, error)","Args":"name string, direction int"},{"Uniquefunname":"func (infos CardPortInfos) TrySelectProfile(portName string) (string, error)","Funname":"pulse.CardPortInfos.TrySelectProfile","Returntype":"(string, error)","Args":"portName string"},{"Uniquefunname":"func toCardInfo(info *C.pa_card_info) (c *Card)","Funname":"pulse.toCardInfo","Returntype":"(c *Card)","Args":"info *C.pa_card_info"},{"Uniquefunname":"func toCardInfo(info *C.pa_card_info) (c *Card)","Funname":"toCardInfo","Returntype":"(c *Card)","Args":"info *C.pa_card_info"}],"Records":[{"Name":"struct:pulse.Card","Fields":["pulse.Card.ActiveProfile ProfileInfo2","pulse.Card.Driver string","pulse.Card.Index uint32","pulse.Card.Name string","pulse.Card.OwnerModule uint32","pulse.Card.Ports CardPortInfos","pulse.Card.Profiles ProfileInfos2","pulse.Card.PropList map[string]string"]},{"Name":"struct:pulse.CardPortInfo","Fields":["pulse.CardPortInfo.Direction int","pulse.CardPortInfo.Profiles ProfileInfos2"]},{"Name":"const:pulse","Fields":["pulse.DirectionSink","pulse.DirectionSource"]}]}
{"Filepath":"pulse/info_test.go","Functions":[{"Uniquefunname":"func TestQueryInfo(t *testing.T)","Funname":"TestQueryInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestQueryInfo(t *testing.T)","Funname":"pulse.TestQueryInfo","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"pulse/mainloop_callbacks.go","Functions":[{"Uniquefunname":"func (c *Context) AddEventChan(ch chan\u003c- *Event)","Funname":"AddEventChan","Returntype":"","Args":"ch chan\u003c- *Event"},{"Uniquefunname":"func (c *Context) AddStateChan(ch chan\u003c- int)","Funname":"AddStateChan","Returntype":"","Args":"ch chan\u003c- int"},{"Uniquefunname":"func (c *Context) RemoveEventChan(ch chan\u003c- *Event)","Funname":"RemoveEventChan","Returntype":"","Args":"ch chan\u003c- *Event"},{"Uniquefunname":"func (c *Context) RemoveStateChan(ch chan\u003c- int)","Funname":"RemoveStateChan","Returntype":"","Args":"ch chan\u003c- int"},{"Uniquefunname":"func freeContext(ctx *Context)","Funname":"freeContext","Returntype":"","Args":"ctx *Context"},{"Uniquefunname":"func go_handle_changed(facility int, event_type int, idx uint32)","Funname":"go_handle_changed","Returntype":"","Args":"facility int, event_type int, idx uint32"},{"Uniquefunname":"func go_handle_state_changed(state int)","Funname":"go_handle_state_changed","Returntype":"","Args":"state int"},{"Uniquefunname":"func go_receive_some_info(cookie int64, infoType int, info unsafe.Pointer, eol int)","Funname":"go_receive_some_info","Returntype":"","Args":"cookie int64, infoType int, info unsafe.Pointer, eol int"},{"Uniquefunname":"func go_update_volume_meter(source_index uint32, sink_index uint32, v float64)","Funname":"go_update_volume_meter","Returntype":"","Args":"source_index uint32, sink_index uint32, v float64"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (c *Context) AddEventChan(ch chan\u003c- *Event)","Funname":"pulse.Context.AddEventChan","Returntype":"","Args":"ch chan\u003c- *Event"},{"Uniquefunname":"func (c *Context) AddStateChan(ch chan\u003c- int)","Funname":"pulse.Context.AddStateChan","Returntype":"","Args":"ch chan\u003c- int"},{"Uniquefunname":"func (c *Context) RemoveEventChan(ch chan\u003c- *Event)","Funname":"pulse.Context.RemoveEventChan","Returntype":"","Args":"ch chan\u003c- *Event"},{"Uniquefunname":"func (c *Context) RemoveStateChan(ch chan\u003c- int)","Funname":"pulse.Context.RemoveStateChan","Returntype":"","Args":"ch chan\u003c- int"},{"Uniquefunname":"func (c *Context) safeDo(fn func())","Funname":"pulse.Context.safeDo","Returntype":"","Args":"fn func()"},{"Uniquefunname":"func freeContext(ctx *Context)","Funname":"pulse.freeContext","Returntype":"","Args":"ctx *Context"},{"Uniquefunname":"func go_handle_changed(facility int, event_type int, idx uint32)","Funname":"pulse.go_handle_changed","Returntype":"","Args":"facility int, event_type int, idx uint32"},{"Uniquefunname":"func go_handle_state_changed(state int)","Funname":"pulse.go_handle_state_changed","Returntype":"","Args":"state int"},{"Uniquefunname":"func go_receive_some_info(cookie int64, infoType int, info unsafe.Pointer, eol int)","Funname":"pulse.go_receive_some_info","Returntype":"","Args":"cookie int64, infoType int, info unsafe.Pointer, eol int"},{"Uniquefunname":"func go_update_volume_meter(source_index uint32, sink_index uint32, v float64)","Funname":"pulse.go_update_volume_meter","Returntype":"","Args":"source_index uint32, sink_index uint32, v float64"},{"Uniquefunname":"func init()","Funname":"pulse.init","Returntype":"","Args":""},{"Uniquefunname":"func startHandleSafeDo()","Funname":"pulse.startHandleSafeDo","Returntype":"","Args":""},{"Uniquefunname":"func (c *Context) safeDo(fn func())","Funname":"safeDo","Returntype":"","Args":"fn func()"},{"Uniquefunname":"func startHandleSafeDo()","Funname":"startHandleSafeDo","Returntype":"","Args":""}],"Records":[{"Name":"var:pulse","Fields":["pulse.pendingSafeDo"]},{"Name":"struct:pulse.safeDoCtx","Fields":["pulse.safeDoCtx.fn func()","pulse.safeDoCtx.loop *C.pa_threaded_mainloop"]}]}
{"Filepath":"pulse/meter.go","Functions":[{"Uniquefunname":"func (s *SourceMeter) ConnectChanged(cb func(v float64))","Funname":"ConnectChanged","Returntype":"","Args":"cb func(v float64)"},{"Uniquefunname":"func (s *SourceMeter) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func NewSourceMeter(c *Context, idx uint32) *SourceMeter","Funname":"NewSourceMeter","Returntype":"*SourceMeter","Args":"c *Context, idx uint32"},{"Uniquefunname":"func NewSourceMeter(c *Context, idx uint32) *SourceMeter","Funname":"pulse.NewSourceMeter","Returntype":"*SourceMeter","Args":"c *Context, idx uint32"},{"Uniquefunname":"func (s *SourceMeter) ConnectChanged(cb func(v float64))","Funname":"pulse.SourceMeter.ConnectChanged","Returntype":"","Args":"cb func(v float64)"},{"Uniquefunname":"func (s *SourceMeter) Destroy()","Funname":"pulse.SourceMeter.Destroy","Returntype":"","Args":""}],"Records":[{"Name":"struct:pulse.SourceMeter","Fields":["pulse.SourceMeter.core *C.pa_stream","pulse.SourceMeter.ctx *Context","pulse.SourceMeter.sourceIndex uint32"]},{"Name":"var:pulse","Fields":["pulse.sourceMeterCBs","pulse.sourceMeterLock"]}]}
{"Filepath":"pulse/misc.go","Functions":[{"Uniquefunname":"func (cv CVolume) Avg() float64","Funname":"Avg","Returntype":"float64","Args":""},{"Uniquefunname":"func (cv CVolume) Balance(cmap ChannelMap) float64","Funname":"Balance","Returntype":"float64","Args":"cmap ChannelMap"},{"Uniquefunname":"func (cm ChannelMap) CanBalance() bool","Funname":"CanBalance","Returntype":"bool","Args":""},{"Uniquefunname":"func (cm ChannelMap) CanFade() bool","Funname":"CanFade","Returntype":"bool","Args":""},{"Uniquefunname":"func (infos ProfileInfos2) Exists(name string) bool","Funname":"Exists","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (cv CVolume) Fade(cmap ChannelMap) float64","Funname":"Fade","Returntype":"float64","Args":"cmap ChannelMap"},{"Uniquefunname":"func (infos PortInfos) Get(name string) *PortInfo","Funname":"Get","Returntype":"*PortInfo","Args":"name string"},{"Uniquefunname":"func (infos ProfileInfos2) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ProfileInfos2) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ProfileInfos2) SelectProfile() string","Funname":"SelectProfile","Returntype":"string","Args":""},{"Uniquefunname":"func (cv CVolume) SetAvg(v float64) CVolume","Funname":"SetAvg","Returntype":"CVolume","Args":"v float64"},{"Uniquefunname":"func (cv CVolume) SetBalance(cm ChannelMap, balance float64) CVolume","Funname":"SetBalance","Returntype":"CVolume","Args":"cm ChannelMap, balance float64"},{"Uniquefunname":"func (cv CVolume) SetFade(cm ChannelMap, fade float64) CVolume","Funname":"SetFade","Returntype":"CVolume","Args":"cm ChannelMap, fade float64"},{"Uniquefunname":"func (infos ProfileInfos2) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func (v Volume) ToLiner() float64","Funname":"ToLiner","Returntype":"float64","Args":""},{"Uniquefunname":"func (v Volume) ToPercent() float64","Funname":"ToPercent","Returntype":"float64","Args":""},{"Uniquefunname":"func (v Volume) TodB() float64","Funname":"TodB","Returntype":"float64","Args":""},{"Uniquefunname":"func (cv CVolume) Avg() float64","Funname":"pulse.CVolume.Avg","Returntype":"float64","Args":""},{"Uniquefunname":"func (cv CVolume) Balance(cmap ChannelMap) float64","Funname":"pulse.CVolume.Balance","Returntype":"float64","Args":"cmap ChannelMap"},{"Uniquefunname":"func (cv CVolume) Fade(cmap ChannelMap) float64","Funname":"pulse.CVolume.Fade","Returntype":"float64","Args":"cmap ChannelMap"},{"Uniquefunname":"func (cv CVolume) SetAvg(v float64) CVolume","Funname":"pulse.CVolume.SetAvg","Returntype":"CVolume","Args":"v float64"},{"Uniquefunname":"func (cv CVolume) SetBalance(cm ChannelMap, balance float64) CVolume","Funname":"pulse.CVolume.SetBalance","Returntype":"CVolume","Args":"cm ChannelMap, balance float64"},{"Uniquefunname":"func (cv CVolume) SetFade(cm ChannelMap, fade float64) CVolume","Funname":"pulse.CVolume.SetFade","Returntype":"CVolume","Args":"cm ChannelMap, fade float64"},{"Uniquefunname":"func (cm ChannelMap) CanBalance() bool","Funname":"pulse.ChannelMap.CanBalance","Returntype":"bool","Args":""},{"Uniquefunname":"func (cm ChannelMap) CanFade() bool","Funname":"pulse.ChannelMap.CanFade","Returntype":"bool","Args":""},{"Uniquefunname":"func (infos PortInfos) Get(name string) *PortInfo","Funname":"pulse.PortInfos.Get","Returntype":"*PortInfo","Args":"name string"},{"Uniquefunname":"func (infos ProfileInfos2) Exists(name string) bool","Funname":"pulse.ProfileInfos2.Exists","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (infos ProfileInfos2) Len() int","Funname":"pulse.ProfileInfos2.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ProfileInfos2) Less(i, j int) bool","Funname":"pulse.ProfileInfos2.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ProfileInfos2) SelectProfile() string","Funname":"pulse.ProfileInfos2.SelectProfile","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ProfileInfos2) Swap(i, j int)","Funname":"pulse.ProfileInfos2.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func (infos ProfileInfos2) selectByAvailable(available int) ProfileInfo2","Funname":"pulse.ProfileInfos2.selectByAvailable","Returntype":"ProfileInfo2","Args":"available int"},{"Uniquefunname":"func (v Volume) ToLiner() float64","Funname":"pulse.Volume.ToLiner","Returntype":"float64","Args":""},{"Uniquefunname":"func (v Volume) ToPercent() float64","Funname":"pulse.Volume.ToPercent","Returntype":"float64","Args":""},{"Uniquefunname":"func (v Volume) TodB() float64","Funname":"pulse.Volume.TodB","Returntype":"float64","Args":""},{"Uniquefunname":"func toBool(v C.int) bool","Funname":"pulse.toBool","Returntype":"bool","Args":"v C.int"},{"Uniquefunname":"func toProplist(c *C.pa_proplist) map[string]string","Funname":"pulse.toProplist","Returntype":"map[string]string","Args":"c *C.pa_proplist"},{"Uniquefunname":"func (infos ProfileInfos2) selectByAvailable(available int) ProfileInfo2","Funname":"selectByAvailable","Returntype":"ProfileInfo2","Args":"available int"},{"Uniquefunname":"func toBool(v C.int) bool","Funname":"toBool","Returntype":"bool","Args":"v C.int"},{"Uniquefunname":"func toProplist(c *C.pa_proplist) map[string]string","Funname":"toProplist","Returntype":"map[string]string","Args":"c *C.pa_proplist"}],"Records":[{"Name":"const:pulse","Fields":["pulse.AvailableTypeNo","pulse.AvailableTypeUnknow","pulse.AvailableTypeYes","pulse.VolumeMax","pulse.VolumeUIMax"]},{"Name":"struct:pulse.CVolume","Fields":["pulse.CVolume.core C.pa_cvolume"]},{"Name":"struct:pulse.ChannelMap","Fields":["pulse.ChannelMap.core C.pa_channel_map"]},{"Name":"struct:pulse.PortInfo","Fields":["pulse.PortInfo.Available int","pulse.PortInfo.Description string","pulse.PortInfo.Name string","pulse.PortInfo.Priority uint32"]},{"Name":"struct:pulse.ProfileInfo2","Fields":["pulse.ProfileInfo2.Available int","pulse.ProfileInfo2.Description string","pulse.ProfileInfo2.NSinks uint32","pulse.ProfileInfo2.NSources uint32","pulse.ProfileInfo2.Name string","pulse.ProfileInfo2.Priority uint32"]},{"Name":"struct:pulse.Volume","Fields":["pulse.Volume.paVolume C.pa_volume_t"]}]}
{"Filepath":"pulse/proplist.go","Functions":null,"Records":[{"Name":"const:pulse","Fields":["pulse.PA_PROP_APPLICATION_ICON_NAME","pulse.PA_PROP_APPLICATION_ID","pulse.PA_PROP_APPLICATION_LANGUAGE","pulse.PA_PROP_APPLICATION_NAME","pulse.PA_PROP_APPLICATION_PROCESS_BINARY","pulse.PA_PROP_APPLICATION_PROCESS_HOST","pulse.PA_PROP_APPLICATION_PROCESS_ID","pulse.PA_PROP_APPLICATION_PROCESS_MACHINE_ID","pulse.PA_PROP_APPLICATION_PROCESS_SESSION_ID","pulse.PA_PROP_APPLICATION_PROCESS_USER","pulse.PA_PROP_APPLICATION_VERSION","pulse.PA_PROP_DEVICE_ACCESS_MODE","pulse.PA_PROP_DEVICE_API","pulse.PA_PROP_DEVICE_BUFFERING_BUFFER_SIZE","pulse.PA_PROP_DEVICE_BUFFERING_FRAGMENT_SIZE","pulse.PA_PROP_DEVICE_BUS","pulse.PA_PROP_DEVICE_BUS_PATH","pulse.PA_PROP_DEVICE_CLASS","pulse.PA_PROP_DEVICE_DESCRIPTION","pulse.PA_PROP_DEVICE_FORM_FACTOR","pulse.PA_PROP_DEVICE_ICON_NAME","pulse.PA_PROP_DEVICE_INTENDED_ROLES","pulse.PA_PROP_DEVICE_MASTER_DEVICE","pulse.PA_PROP_DEVICE_PRODUCT_ID","pulse.PA_PROP_DEVICE_PRODUCT_NAME","pulse.PA_PROP_DEVICE_PROFILE_DESCRIPTION","pulse.PA_PROP_DEVICE_PROFILE_NAME","pulse.PA_PROP_DEVICE_SERIAL","pulse.PA_PROP_DEVICE_STRING","pulse.PA_PROP_DEVICE_VENDOR_ID","pulse.PA_PROP_DEVICE_VENDOR_NAME","pulse.PA_PROP_EVENT_DESCRIPTION","pulse.PA_PROP_EVENT_ID","pulse.PA_PROP_EVENT_MOUSE_BUTTON","pulse.PA_PROP_EVENT_MOUSE_HPOS","pulse.PA_PROP_EVENT_MOUSE_VPOS","pulse.PA_PROP_EVENT_MOUSE_X","pulse.PA_PROP_EVENT_MOUSE_Y","pulse.PA_PROP_FILTER_APPLY","pulse.PA_PROP_FILTER_SUPPRESS","pulse.PA_PROP_FILTER_WANT","pulse.PA_PROP_FORMAT_CHANNELS","pulse.PA_PROP_FORMAT_CHANNEL_MAP","pulse.PA_PROP_FORMAT_RATE","pulse.PA_PROP_FORMAT_SAMPLE_FORMAT","pulse.PA_PROP_MEDIA_ARTIST","pulse.PA_PROP_MEDIA_COPYRIGHT","pulse.PA_PROP_MEDIA_FILENAME","pulse.PA_PROP_MEDIA_ICON_NAME","pulse.PA_PROP_MEDIA_LANGUAGE","pulse.PA_PROP_MEDIA_NAME","pulse.PA_PROP_MEDIA_ROLE","pulse.PA_PROP_MEDIA_SOFTWARE","pulse.PA_PROP_MEDIA_TITLE","pulse.PA_PROP_MODULE_AUTHOR","pulse.PA_PROP_MODULE_DESCRIPTION","pulse.PA_PROP_MODULE_USAGE","pulse.PA_PROP_MODULE_VERSION","pulse.PA_PROP_WINDOW_DESKTOP","pulse.PA_PROP_WINDOW_HEIGHT","pulse.PA_PROP_WINDOW_HPOS","pulse.PA_PROP_WINDOW_ICON_NAME","pulse.PA_PROP_WINDOW_ID","pulse.PA_PROP_WINDOW_NAME","pulse.PA_PROP_WINDOW_VPOS","pulse.PA_PROP_WINDOW_WIDTH","pulse.PA_PROP_WINDOW_X","pulse.PA_PROP_WINDOW_X11_DISPLAY","pulse.PA_PROP_WINDOW_X11_MONITOR","pulse.PA_PROP_WINDOW_X11_SCREEN","pulse.PA_PROP_WINDOW_X11_XID","pulse.PA_PROP_WINDOW_Y"]}]}
{"Filepath":"pulse/pulse.go","Functions":[{"Uniquefunname":"func (c *Context) GetCard(index uint32) (*Card, error)","Funname":"GetCard","Returntype":"(*Card, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetCardList() (r []*Card)","Funname":"GetCardList","Returntype":"(r []*Card)","Args":""},{"Uniquefunname":"func GetContext() *Context","Funname":"GetContext","Returntype":"*Context","Args":""},{"Uniquefunname":"func GetContextForced() *Context","Funname":"GetContextForced","Returntype":"*Context","Args":""},{"Uniquefunname":"func (c *Context) GetDefaultSink() string","Funname":"GetDefaultSink","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Context) GetDefaultSource() string","Funname":"GetDefaultSource","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Context) GetServer() (*Server, error)","Funname":"GetServer","Returntype":"(*Server, error)","Args":""},{"Uniquefunname":"func (c *Context) GetSink(index uint32) (*Sink, error)","Funname":"GetSink","Returntype":"(*Sink, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSinkInput(index uint32) (*SinkInput, error)","Funname":"GetSinkInput","Returntype":"(*SinkInput, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSinkInputList() (r []*SinkInput)","Funname":"GetSinkInputList","Returntype":"(r []*SinkInput)","Args":""},{"Uniquefunname":"func (c *Context) GetSinkList() (r []*Sink)","Funname":"GetSinkList","Returntype":"(r []*Sink)","Args":""},{"Uniquefunname":"func (c *Context) GetSource(index uint32) (*Source, error)","Funname":"GetSource","Returntype":"(*Source, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSourceList() (r []*Source)","Funname":"GetSourceList","Returntype":"(r []*Source)","Args":""},{"Uniquefunname":"func (c *Context) GetSourceOutput(index uint32) (*SourceOutput, error)","Funname":"GetSourceOutput","Returntype":"(*SourceOutput, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSourceOutputList() (r []*SourceOutput)","Funname":"GetSourceOutputList","Returntype":"(r []*SourceOutput)","Args":""},{"Uniquefunname":"func (c *Context) LoadModule(name, argument string)","Funname":"LoadModule","Returntype":"","Args":"name, argument string"},{"Uniquefunname":"func (c *Context) MoveSinkInputsByIndex(sinkInputs []uint32, sinkIdx uint32)","Funname":"MoveSinkInputsByIndex","Returntype":"","Args":"sinkInputs []uint32, sinkIdx uint32"},{"Uniquefunname":"func (c *Context) MoveSinkInputsByName(sinkInputs []uint32, sinkName string)","Funname":"MoveSinkInputsByName","Returntype":"","Args":"sinkInputs []uint32, sinkName string"},{"Uniquefunname":"func (c *Context) MoveSourceOutputsByIndex(sourceOutputs []uint32, sourceIdx uint32)","Funname":"MoveSourceOutputsByIndex","Returntype":"","Args":"sourceOutputs []uint32, sourceIdx uint32"},{"Uniquefunname":"func (c *Context) MoveSourceOutputsByName(sourceOutputs []uint32, sourceName string)","Funname":"MoveSourceOutputsByName","Returntype":"","Args":"sourceOutputs []uint32, sourceName string"},{"Uniquefunname":"func (c *Context) SetDefaultSink(name string)","Funname":"SetDefaultSink","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Context) SetDefaultSource(name string)","Funname":"SetDefaultSource","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Context) SetSinkInputMute(sinkInputIndex uint32, mute bool)","Funname":"SetSinkInputMute","Returntype":"","Args":"sinkInputIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSinkInputVolume(sinkInputIndex uint32, v CVolume)","Funname":"SetSinkInputVolume","Returntype":"","Args":"sinkInputIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SetSinkMuteByIndex(sinkIndex uint32, mute bool)","Funname":"SetSinkMuteByIndex","Returntype":"","Args":"sinkIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSinkPortByIndex(sinkIndex uint32, portName string)","Funname":"SetSinkPortByIndex","Returntype":"","Args":"sinkIndex uint32, portName string"},{"Uniquefunname":"func (c *Context) SetSinkVolumeByIndex(sinkIndex uint32, v CVolume)","Funname":"SetSinkVolumeByIndex","Returntype":"","Args":"sinkIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SetSourceMuteByIndex(sourceIndex uint32, mute bool)","Funname":"SetSourceMuteByIndex","Returntype":"","Args":"sourceIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSourcePortByIndex(sourceIndex uint32, portName string)","Funname":"SetSourcePortByIndex","Returntype":"","Args":"sourceIndex uint32, portName string"},{"Uniquefunname":"func (c *Context) SetSourceVolumeByIndex(sourceIndex uint32, v CVolume)","Funname":"SetSourceVolumeByIndex","Returntype":"","Args":"sourceIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SuspendSinkById(idx uint32, suspend int)","Funname":"SuspendSinkById","Returntype":"","Args":"idx uint32, suspend int"},{"Uniquefunname":"func (c *Context) SuspendSourceById(idx uint32, suspend int)","Funname":"SuspendSourceById","Returntype":"","Args":"idx uint32, suspend int"},{"Uniquefunname":"func (c *Context) GetCard(index uint32) (*Card, error)","Funname":"pulse.Context.GetCard","Returntype":"(*Card, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetCardList() (r []*Card)","Funname":"pulse.Context.GetCardList","Returntype":"(r []*Card)","Args":""},{"Uniquefunname":"func (c *Context) GetDefaultSink() string","Funname":"pulse.Context.GetDefaultSink","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Context) GetDefaultSource() string","Funname":"pulse.Context.GetDefaultSource","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Context) GetServer() (*Server, error)","Funname":"pulse.Context.GetServer","Returntype":"(*Server, error)","Args":""},{"Uniquefunname":"func (c *Context) GetSink(index uint32) (*Sink, error)","Funname":"pulse.Context.GetSink","Returntype":"(*Sink, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSinkInput(index uint32) (*SinkInput, error)","Funname":"pulse.Context.GetSinkInput","Returntype":"(*SinkInput, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSinkInputList() (r []*SinkInput)","Funname":"pulse.Context.GetSinkInputList","Returntype":"(r []*SinkInput)","Args":""},{"Uniquefunname":"func (c *Context) GetSinkList() (r []*Sink)","Funname":"pulse.Context.GetSinkList","Returntype":"(r []*Sink)","Args":""},{"Uniquefunname":"func (c *Context) GetSource(index uint32) (*Source, error)","Funname":"pulse.Context.GetSource","Returntype":"(*Source, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSourceList() (r []*Source)","Funname":"pulse.Context.GetSourceList","Returntype":"(r []*Source)","Args":""},{"Uniquefunname":"func (c *Context) GetSourceOutput(index uint32) (*SourceOutput, error)","Funname":"pulse.Context.GetSourceOutput","Returntype":"(*SourceOutput, error)","Args":"index uint32"},{"Uniquefunname":"func (c *Context) GetSourceOutputList() (r []*SourceOutput)","Funname":"pulse.Context.GetSourceOutputList","Returntype":"(r []*SourceOutput)","Args":""},{"Uniquefunname":"func (c *Context) LoadModule(name, argument string)","Funname":"pulse.Context.LoadModule","Returntype":"","Args":"name, argument string"},{"Uniquefunname":"func (c *Context) MoveSinkInputsByIndex(sinkInputs []uint32, sinkIdx uint32)","Funname":"pulse.Context.MoveSinkInputsByIndex","Returntype":"","Args":"sinkInputs []uint32, sinkIdx uint32"},{"Uniquefunname":"func (c *Context) MoveSinkInputsByName(sinkInputs []uint32, sinkName string)","Funname":"pulse.Context.MoveSinkInputsByName","Returntype":"","Args":"sinkInputs []uint32, sinkName string"},{"Uniquefunname":"func (c *Context) MoveSourceOutputsByIndex(sourceOutputs []uint32, sourceIdx uint32)","Funname":"pulse.Context.MoveSourceOutputsByIndex","Returntype":"","Args":"sourceOutputs []uint32, sourceIdx uint32"},{"Uniquefunname":"func (c *Context) MoveSourceOutputsByName(sourceOutputs []uint32, sourceName string)","Funname":"pulse.Context.MoveSourceOutputsByName","Returntype":"","Args":"sourceOutputs []uint32, sourceName string"},{"Uniquefunname":"func (c *Context) SetDefaultSink(name string)","Funname":"pulse.Context.SetDefaultSink","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Context) SetDefaultSource(name string)","Funname":"pulse.Context.SetDefaultSource","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Context) SetSinkInputMute(sinkInputIndex uint32, mute bool)","Funname":"pulse.Context.SetSinkInputMute","Returntype":"","Args":"sinkInputIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSinkInputVolume(sinkInputIndex uint32, v CVolume)","Funname":"pulse.Context.SetSinkInputVolume","Returntype":"","Args":"sinkInputIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SetSinkMuteByIndex(sinkIndex uint32, mute bool)","Funname":"pulse.Context.SetSinkMuteByIndex","Returntype":"","Args":"sinkIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSinkPortByIndex(sinkIndex uint32, portName string)","Funname":"pulse.Context.SetSinkPortByIndex","Returntype":"","Args":"sinkIndex uint32, portName string"},{"Uniquefunname":"func (c *Context) SetSinkVolumeByIndex(sinkIndex uint32, v CVolume)","Funname":"pulse.Context.SetSinkVolumeByIndex","Returntype":"","Args":"sinkIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SetSourceMuteByIndex(sourceIndex uint32, mute bool)","Funname":"pulse.Context.SetSourceMuteByIndex","Returntype":"","Args":"sourceIndex uint32, mute bool"},{"Uniquefunname":"func (c *Context) SetSourcePortByIndex(sourceIndex uint32, portName string)","Funname":"pulse.Context.SetSourcePortByIndex","Returntype":"","Args":"sourceIndex uint32, portName string"},{"Uniquefunname":"func (c *Context) SetSourceVolumeByIndex(sourceIndex uint32, v CVolume)","Funname":"pulse.Context.SetSourceVolumeByIndex","Returntype":"","Args":"sourceIndex uint32, v CVolume"},{"Uniquefunname":"func (c *Context) SuspendSinkById(idx uint32, suspend int)","Funname":"pulse.Context.SuspendSinkById","Returntype":"","Args":"idx uint32, suspend int"},{"Uniquefunname":"func (c *Context) SuspendSourceById(idx uint32, suspend int)","Funname":"pulse.Context.SuspendSourceById","Returntype":"","Args":"idx uint32, suspend int"},{"Uniquefunname":"func GetContext() *Context","Funname":"pulse.GetContext","Returntype":"*Context","Args":""},{"Uniquefunname":"func GetContextForced() *Context","Funname":"pulse.GetContextForced","Returntype":"*Context","Args":""}],"Records":[{"Name":"struct:pulse.Context","Fields":["pulse.Context.ctx *C.pa_context","pulse.Context.eventChanList []chan\u003c- *Event","pulse.Context.loop *C.pa_threaded_mainloop","pulse.Context.mu sync.Mutex","pulse.Context.stateChanList []chan\u003c- int"]},{"Name":"const:pulse","Fields":["pulse.ContextStateAuthorizing","pulse.ContextStateConnecting","pulse.ContextStateFailed","pulse.ContextStateReady","pulse.ContextStateSettingName","pulse.ContextStateTerminated","pulse.ContextStateUnconnected","pulse.EventTypeChange","pulse.EventTypeNew","pulse.EventTypeRemove","pulse.FacilityCard","pulse.FacilityClient","pulse.FacilityModule","pulse.FacilitySampleCache","pulse.FacilityServer","pulse.FacilitySink","pulse.FacilitySinkInput","pulse.FacilitySource","pulse.FacilitySourceOutput"]},{"Name":"struct:pulse.Event","Fields":["pulse.Event.Facility int","pulse.Event.Index uint32","pulse.Event.Type int"]},{"Name":"var:pulse","Fields":["pulse.PulseInitTimeout","pulse.__context","pulse.__ctxLocker"]}]}
{"Filepath":"pulse/server.go","Functions":[{"Uniquefunname":"func toServerInfo(info *C.pa_server_info) *Server","Funname":"pulse.toServerInfo","Returntype":"*Server","Args":"info *C.pa_server_info"},{"Uniquefunname":"func toServerInfo(info *C.pa_server_info) *Server","Funname":"toServerInfo","Returntype":"*Server","Args":"info *C.pa_server_info"}],"Records":[{"Name":"struct:pulse.Server","Fields":["pulse.Server.ChannelMap ChannelMap","pulse.Server.Cookie uint32","pulse.Server.DefaultSinkName string","pulse.Server.DefaultSourceName string","pulse.Server.HostName string","pulse.Server.ServerName string","pulse.Server.ServerVersion string","pulse.Server.UserName string"]}]}
{"Filepath":"pulse/sink.go","Functions":[{"Uniquefunname":"func toSinkInfo(info *C.pa_sink_info) *Sink","Funname":"pulse.toSinkInfo","Returntype":"*Sink","Args":"info *C.pa_sink_info"},{"Uniquefunname":"func toSinkInfo(info *C.pa_sink_info) *Sink","Funname":"toSinkInfo","Returntype":"*Sink","Args":"info *C.pa_sink_info"}],"Records":[{"Name":"struct:pulse.Sink","Fields":["pulse.Sink.ActivePort PortInfo","pulse.Sink.BaseVolume Volume","pulse.Sink.Card uint32","pulse.Sink.ChannelMap ChannelMap","pulse.Sink.Description string","pulse.Sink.Driver string","pulse.Sink.Flags int","pulse.Sink.Index uint32","pulse.Sink.MonitorSource uint32","pulse.Sink.MonitorSourceName string","pulse.Sink.Mute bool","pulse.Sink.NVolumeSteps uint32","pulse.Sink.Name string","pulse.Sink.OwnerModule uint32","pulse.Sink.Ports []PortInfo","pulse.Sink.PropList map[string]string","pulse.Sink.Volume CVolume"]}]}
{"Filepath":"pulse/sink_input.go","Functions":[{"Uniquefunname":"func toSinkInputInfo(info *C.pa_sink_input_info) *SinkInput","Funname":"pulse.toSinkInputInfo","Returntype":"*SinkInput","Args":"info *C.pa_sink_input_info"},{"Uniquefunname":"func toSinkInputInfo(info *C.pa_sink_input_info) *SinkInput","Funname":"toSinkInputInfo","Returntype":"*SinkInput","Args":"info *C.pa_sink_input_info"}],"Records":[{"Name":"struct:pulse.SinkInput","Fields":["pulse.SinkInput.ChannelMap ChannelMap","pulse.SinkInput.Client uint32","pulse.SinkInput.Corked int","pulse.SinkInput.Driver string","pulse.SinkInput.HasVolume bool","pulse.SinkInput.Index uint32","pulse.SinkInput.Mute bool","pulse.SinkInput.Name string","pulse.SinkInput.OwnerModule uint32","pulse.SinkInput.PropList map[string]string","pulse.SinkInput.ResampleMethod string","pulse.SinkInput.Sink uint32","pulse.SinkInput.Volume CVolume","pulse.SinkInput.VolumeWritable bool"]}]}
{"Filepath":"pulse/source.go","Functions":[{"Uniquefunname":"func toSourceInfo(info *C.pa_source_info) *Source","Funname":"pulse.toSourceInfo","Returntype":"*Source","Args":"info *C.pa_source_info"},{"Uniquefunname":"func toSourceInfo(info *C.pa_source_info) *Source","Funname":"toSourceInfo","Returntype":"*Source","Args":"info *C.pa_source_info"}],"Records":[{"Name":"struct:pulse.Source","Fields":["pulse.Source.ActivePort PortInfo","pulse.Source.BaseVolume Volume","pulse.Source.Card uint32","pulse.Source.ChannelMap ChannelMap","pulse.Source.Description string","pulse.Source.Driver string","pulse.Source.Flags int","pulse.Source.Index uint32","pulse.Source.MonitorOfSink uint32","pulse.Source.MonitorOfSinkName string","pulse.Source.Mute bool","pulse.Source.NVolumeSteps uint32","pulse.Source.Name string","pulse.Source.OwnerModule uint32","pulse.Source.Ports []PortInfo","pulse.Source.Proplist map[string]string","pulse.Source.Volume CVolume"]}]}
{"Filepath":"pulse/source_output.go","Functions":[{"Uniquefunname":"func toSourceOutputInfo(info *C.pa_source_output_info) *SourceOutput","Funname":"pulse.toSourceOutputInfo","Returntype":"*SourceOutput","Args":"info *C.pa_source_output_info"},{"Uniquefunname":"func toSourceOutputInfo(info *C.pa_source_output_info) *SourceOutput","Funname":"toSourceOutputInfo","Returntype":"*SourceOutput","Args":"info *C.pa_source_output_info"}],"Records":null}
{"Filepath":"pulse/sync.go","Functions":[{"Uniquefunname":"func (c *cookie) EndOfList()","Funname":"EndOfList","Returntype":"","Args":""},{"Uniquefunname":"func (c *cookie) Failed()","Funname":"Failed","Returntype":"","Args":""},{"Uniquefunname":"func (c *cookie) Feed(paInfo *paInfo)","Funname":"Feed","Returntype":"","Args":"paInfo *paInfo"},{"Uniquefunname":"func NewPaInfo(data unsafe.Pointer, Type int) *paInfo","Funname":"NewPaInfo","Returntype":"*paInfo","Args":"data unsafe.Pointer, Type int"},{"Uniquefunname":"func (c *cookie) Reply() *paInfo","Funname":"Reply","Returntype":"*paInfo","Args":""},{"Uniquefunname":"func (c *cookie) ReplyList() []*paInfo","Funname":"ReplyList","Returntype":"[]*paInfo","Args":""},{"Uniquefunname":"func NewPaInfo(data unsafe.Pointer, Type int) *paInfo","Funname":"pulse.NewPaInfo","Returntype":"*paInfo","Args":"data unsafe.Pointer, Type int"},{"Uniquefunname":"func (c *cookie) EndOfList()","Funname":"pulse.cookie.EndOfList","Returntype":"","Args":""},{"Uniquefunname":"func (c *cookie) Failed()","Funname":"pulse.cookie.Failed","Returntype":"","Args":""},{"Uniquefunname":"func (c *cookie) Feed(paInfo *paInfo)","Funname":"pulse.cookie.Feed","Returntype":"","Args":"paInfo *paInfo"},{"Uniquefunname":"func (c *cookie) Reply() *paInfo","Funname":"pulse.cookie.Reply","Returntype":"*paInfo","Args":""},{"Uniquefunname":"func (c *cookie) ReplyList() []*paInfo","Funname":"pulse.cookie.ReplyList","Returntype":"[]*paInfo","Args":""}],"Records":[{"Name":"struct:pulse.cookie","Fields":["pulse.cookie.data chan *paInfo","pulse.cookie.id int64"]},{"Name":"var:pulse","Fields":["pulse.deleteCookie","pulse.fetchCookie","pulse.newCookie"]},{"Name":"struct:pulse.paInfo","Fields":["pulse.paInfo.Type int","pulse.paInfo.data interface{}"]}]}
{"Filepath":"pulse/thread_test.go","Functions":[{"Uniquefunname":"func BenchmarkTheadSafe(b *testing.B)","Funname":"BenchmarkTheadSafe","Returntype":"","Args":"b *testing.B"},{"Uniquefunname":"func BenchmarkTheadSafe(b *testing.B)","Funname":"pulse.BenchmarkTheadSafe","Returntype":"","Args":"b *testing.B"}],"Records":null}
{"Filepath":"pulse/wrap.go","Functions":[{"Uniquefunname":"func (info *paInfo) ToCard() *Card","Funname":"ToCard","Returntype":"*Card","Args":""},{"Uniquefunname":"func (info *paInfo) ToServer() *Server","Funname":"ToServer","Returntype":"*Server","Args":""},{"Uniquefunname":"func (info *paInfo) ToSink() *Sink","Funname":"ToSink","Returntype":"*Sink","Args":""},{"Uniquefunname":"func (info *paInfo) ToSinkInput() *SinkInput","Funname":"ToSinkInput","Returntype":"*SinkInput","Args":""},{"Uniquefunname":"func (info *paInfo) ToSource() *Source","Funname":"ToSource","Returntype":"*Source","Args":""},{"Uniquefunname":"func (info *paInfo) ToSourceOutput() *SourceOutput","Funname":"ToSourceOutput","Returntype":"*SourceOutput","Args":""},{"Uniquefunname":"func (info *paInfo) ToCard() *Card","Funname":"pulse.paInfo.ToCard","Returntype":"*Card","Args":""},{"Uniquefunname":"func (info *paInfo) ToServer() *Server","Funname":"pulse.paInfo.ToServer","Returntype":"*Server","Args":""},{"Uniquefunname":"func (info *paInfo) ToSink() *Sink","Funname":"pulse.paInfo.ToSink","Returntype":"*Sink","Args":""},{"Uniquefunname":"func (info *paInfo) ToSinkInput() *SinkInput","Funname":"pulse.paInfo.ToSinkInput","Returntype":"*SinkInput","Args":""},{"Uniquefunname":"func (info *paInfo) ToSource() *Source","Funname":"pulse.paInfo.ToSource","Returntype":"*Source","Args":""},{"Uniquefunname":"func (info *paInfo) ToSourceOutput() *SourceOutput","Funname":"pulse.paInfo.ToSourceOutput","Returntype":"*SourceOutput","Args":""},{"Uniquefunname":"func toCardPort(c *C.pa_card_port_info) CardPortInfo","Funname":"pulse.toCardPort","Returntype":"CardPortInfo","Args":"c *C.pa_card_port_info"},{"Uniquefunname":"func toCardPorts(n uint32, c **C.pa_card_port_info) (r CardPortInfos)","Funname":"pulse.toCardPorts","Returntype":"(r CardPortInfos)","Args":"n uint32, c **C.pa_card_port_info"},{"Uniquefunname":"func toPort(c *C.pa_sink_port_info) PortInfo","Funname":"pulse.toPort","Returntype":"PortInfo","Args":"c *C.pa_sink_port_info"},{"Uniquefunname":"func toPorts(n uint32, c **C.pa_sink_port_info) (r []PortInfo)","Funname":"pulse.toPorts","Returntype":"(r []PortInfo)","Args":"n uint32, c **C.pa_sink_port_info"},{"Uniquefunname":"func toProfile(c *C.pa_card_profile_info2) ProfileInfo2","Funname":"pulse.toProfile","Returntype":"ProfileInfo2","Args":"c *C.pa_card_profile_info2"},{"Uniquefunname":"func toProfiles(n uint32, c **C.pa_card_profile_info2) (r ProfileInfos2)","Funname":"pulse.toProfiles","Returntype":"(r ProfileInfos2)","Args":"n uint32, c **C.pa_card_profile_info2"},{"Uniquefunname":"func toSourcePort(c *C.pa_source_port_info) PortInfo","Funname":"pulse.toSourcePort","Returntype":"PortInfo","Args":"c *C.pa_source_port_info"},{"Uniquefunname":"func toSourcePorts(n uint32, c **C.pa_source_port_info) (r []PortInfo)","Funname":"pulse.toSourcePorts","Returntype":"(r []PortInfo)","Args":"n uint32, c **C.pa_source_port_info"},{"Uniquefunname":"func toCardPort(c *C.pa_card_port_info) CardPortInfo","Funname":"toCardPort","Returntype":"CardPortInfo","Args":"c *C.pa_card_port_info"},{"Uniquefunname":"func toCardPorts(n uint32, c **C.pa_card_port_info) (r CardPortInfos)","Funname":"toCardPorts","Returntype":"(r CardPortInfos)","Args":"n uint32, c **C.pa_card_port_info"},{"Uniquefunname":"func toPort(c *C.pa_sink_port_info) PortInfo","Funname":"toPort","Returntype":"PortInfo","Args":"c *C.pa_sink_port_info"},{"Uniquefunname":"func toPorts(n uint32, c **C.pa_sink_port_info) (r []PortInfo)","Funname":"toPorts","Returntype":"(r []PortInfo)","Args":"n uint32, c **C.pa_sink_port_info"},{"Uniquefunname":"func toProfile(c *C.pa_card_profile_info2) ProfileInfo2","Funname":"toProfile","Returntype":"ProfileInfo2","Args":"c *C.pa_card_profile_info2"},{"Uniquefunname":"func toProfiles(n uint32, c **C.pa_card_profile_info2) (r ProfileInfos2)","Funname":"toProfiles","Returntype":"(r ProfileInfos2)","Args":"n uint32, c **C.pa_card_profile_info2"},{"Uniquefunname":"func toSourcePort(c *C.pa_source_port_info) PortInfo","Funname":"toSourcePort","Returntype":"PortInfo","Args":"c *C.pa_source_port_info"},{"Uniquefunname":"func toSourcePorts(n uint32, c **C.pa_source_port_info) (r []PortInfo)","Funname":"toSourcePorts","Returntype":"(r []PortInfo)","Args":"n uint32, c **C.pa_source_port_info"}],"Records":[{"Name":"struct:pulse.SampleSpec","Fields":["pulse.SampleSpec.Channels uint8","pulse.SampleSpec.Format SampleFormat","pulse.SampleSpec.Rate uint32"]}]}
{"Filepath":"pulse/simple/simple.go","Functions":[{"Uniquefunname":"func (c Conn) Drain() (int, error)","Funname":"Drain","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (err Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (c Conn) Flush() (int, error)","Funname":"Flush","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (c Conn) Free()","Funname":"Free","Returntype":"","Args":""},{"Uniquefunname":"func NewConn(server, name string, dir StreamDirection, dev, streamName string, sampleSpec *SampleSpec)(Conn, error)","Funname":"NewConn","Returntype":"(Conn, error)","Args":"server, name string, dir StreamDirection, dev, streamName string, sampleSpec *SampleSpec"},{"Uniquefunname":"func (c Conn) Write(data unsafe.Pointer, bytes uint) (int, error)","Funname":"Write","Returntype":"(int, error)","Args":"data unsafe.Pointer, bytes uint"},{"Uniquefunname":"func (ss *SampleSpec) native() *C.pa_sample_spec","Funname":"native","Returntype":"*C.pa_sample_spec","Args":""},{"Uniquefunname":"func (v Conn) native() *C.pa_simple","Funname":"native","Returntype":"*C.pa_simple","Args":""},{"Uniquefunname":"func newError(fn string, errCode C.int) error","Funname":"newError","Returntype":"error","Args":"fn string, errCode C.int"},{"Uniquefunname":"func (c Conn) Drain() (int, error)","Funname":"simple.Conn.Drain","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (c Conn) Flush() (int, error)","Funname":"simple.Conn.Flush","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (c Conn) Free()","Funname":"simple.Conn.Free","Returntype":"","Args":""},{"Uniquefunname":"func (c Conn) Write(data unsafe.Pointer, bytes uint) (int, error)","Funname":"simple.Conn.Write","Returntype":"(int, error)","Args":"data unsafe.Pointer, bytes uint"},{"Uniquefunname":"func (v Conn) native() *C.pa_simple","Funname":"simple.Conn.native","Returntype":"*C.pa_simple","Args":""},{"Uniquefunname":"func (err Error) Error() string","Funname":"simple.Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func simple.NewConn(server, name string, dir StreamDirection, dev, streamName string, sampleSpec *SampleSpec)(Conn, error)","Funname":"simple.NewConn","Returntype":"(Conn, error)","Args":"server, name string, dir StreamDirection, dev, streamName string, sampleSpec *SampleSpec"},{"Uniquefunname":"func (ss *SampleSpec) native() *C.pa_sample_spec","Funname":"simple.SampleSpec.native","Returntype":"*C.pa_sample_spec","Args":""},{"Uniquefunname":"func newError(fn string, errCode C.int) error","Funname":"simple.newError","Returntype":"error","Args":"fn string, errCode C.int"},{"Uniquefunname":"func wrapConn(ptr *C.pa_simple) Conn","Funname":"simple.wrapConn","Returntype":"Conn","Args":"ptr *C.pa_simple"},{"Uniquefunname":"func wrapConn(ptr *C.pa_simple) Conn","Funname":"wrapConn","Returntype":"Conn","Args":"ptr *C.pa_simple"}],"Records":[{"Name":"struct:simple.Conn","Fields":["simple.Conn.Ptr unsafe.Pointer"]},{"Name":"struct:simple.Error","Fields":["simple.Error.Code int","simple.Error.Fn string"]},{"Name":"const:simple","Fields":["simple.SampleFormatFloat32BE","simple.SampleFormatFloat32LE","simple.SampleFormatS16BE","simple.SampleFormatS16LE","simple.SampleFormatS16NE","simple.SampleFormatS32BE","simple.SampleFormatS32LE","simple.SampleFormatU8","simple.StreamDirectionPlayback"]},{"Name":"struct:simple.SampleSpec","Fields":["simple.SampleSpec.Channels uint8","simple.SampleSpec.Format SampleFormat","simple.SampleSpec.Rate uint32"]}]}
{"Filepath":"shell/shell.go","Functions":[{"Uniquefunname":"func Encode(s string) string","Funname":"Encode","Returntype":"string","Args":"s string"},{"Uniquefunname":"func isSpecialChar(c byte) bool","Funname":"isSpecialChar","Returntype":"bool","Args":"c byte"},{"Uniquefunname":"func Encode(s string) string","Funname":"shell.Encode","Returntype":"string","Args":"s string"},{"Uniquefunname":"func isSpecialChar(c byte) bool","Funname":"shell.isSpecialChar","Returntype":"bool","Args":"c byte"}],"Records":[{"Name":"const:shell","Fields":["shell.specialChars"]}]}
{"Filepath":"shell/shell_test.go","Functions":[{"Uniquefunname":"func TestEncode(t *testing.T)","Funname":"TestEncode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEncode(t *testing.T)","Funname":"shell.TestEncode","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"sound/player.go","Functions":[{"Uniquefunname":"func PlaySoundFile(file, device, driver, player string) error","Funname":"PlaySoundFile","Returntype":"error","Args":"file, device, driver, player string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device, driver, player string) error","Funname":"PlayThemeSound","Returntype":"error","Args":"theme, event, device, driver, player string"},{"Uniquefunname":"func PlaySoundFile(file, device, driver, player string) error","Funname":"sound.PlaySoundFile","Returntype":"error","Args":"file, device, driver, player string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device, driver, player string) error","Funname":"sound.PlayThemeSound","Returntype":"error","Args":"theme, event, device, driver, player string"}],"Records":[{"Name":"const:sound","Fields":["sound.PlayerLibcanberra","sound.PlayerMPV","sound.PlayerPaplay"]}]}
{"Filepath":"sound/utils.go","Functions":[{"Uniquefunname":"func findThemeFile(theme, event string) (string, error)","Funname":"findThemeFile","Returntype":"(string, error)","Args":"theme, event string"},{"Uniquefunname":"func findThemeFile(theme, event string) (string, error)","Funname":"sound.findThemeFile","Returntype":"(string, error)","Args":"theme, event string"}],"Records":[{"Name":"var:sound","Fields":["sound.errInvalidEvent"]}]}
{"Filepath":"sound_effect/alsa_backend.go","Functions":[{"Uniquefunname":"func (pb *ALSAPlayBackend) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *ALSAPlayBackend) Drain() error","Funname":"Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *ALSAPlayBackend) Write(data []byte) error","Funname":"Write","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func newALSAPlayBackend(device string, sampleSpec *SampleSpec) (pb PlayBackend, err error)","Funname":"newALSAPlayBackend","Returntype":"(pb PlayBackend, err error)","Args":"device string, sampleSpec *SampleSpec"},{"Uniquefunname":"func (pb *ALSAPlayBackend) Close() error","Funname":"sound_effect.ALSAPlayBackend.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *ALSAPlayBackend) Drain() error","Funname":"sound_effect.ALSAPlayBackend.Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *ALSAPlayBackend) Write(data []byte) error","Funname":"sound_effect.ALSAPlayBackend.Write","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func newALSAPlayBackend(device string, sampleSpec *SampleSpec) (pb PlayBackend, err error)","Funname":"sound_effect.newALSAPlayBackend","Returntype":"(pb PlayBackend, err error)","Args":"device string, sampleSpec *SampleSpec"}],"Records":[{"Name":"struct:sound_effect.ALSAPlayBackend","Fields":["sound_effect.ALSAPlayBackend.frameSize int","sound_effect.ALSAPlayBackend.pcm asound.PCM"]}]}
{"Filepath":"sound_effect/ogg.go","Functions":[{"Uniquefunname":"func (d *OggDecoder) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (d *OggDecoder) Decode() ([]byte, error)","Funname":"Decode","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (d *OggDecoder) GetDuration() time.Duration","Funname":"GetDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (d *OggDecoder) GetSampleSpec() *SampleSpec","Funname":"GetSampleSpec","Returntype":"*SampleSpec","Args":""},{"Uniquefunname":"func newOggDecoder(file string) (Decoder, error)","Funname":"newOggDecoder","Returntype":"(Decoder, error)","Args":"file string"},{"Uniquefunname":"func (d *OggDecoder) Close() error","Funname":"sound_effect.OggDecoder.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (d *OggDecoder) Decode() ([]byte, error)","Funname":"sound_effect.OggDecoder.Decode","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (d *OggDecoder) GetDuration() time.Duration","Funname":"sound_effect.OggDecoder.GetDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (d *OggDecoder) GetSampleSpec() *SampleSpec","Funname":"sound_effect.OggDecoder.GetSampleSpec","Returntype":"*SampleSpec","Args":""},{"Uniquefunname":"func newOggDecoder(file string) (Decoder, error)","Funname":"sound_effect.newOggDecoder","Returntype":"(Decoder, error)","Args":"file string"}],"Records":[{"Name":"struct:sound_effect.OggDecoder","Fields":["sound_effect.OggDecoder.bufSize int","sound_effect.OggDecoder.core stb_vorbis.Decoder","sound_effect.OggDecoder.sampleSpec *SampleSpec"]}]}
{"Filepath":"sound_effect/player.go","Functions":[{"Uniquefunname":"func (player *Player) Finder() *theme.Finder","Funname":"Finder","Returntype":"*theme.Finder","Args":""},{"Uniquefunname":"func (player *Player) GetDuration(theme, event string) (time.Duration, error)","Funname":"GetDuration","Returntype":"(time.Duration, error)","Args":"theme, event string"},{"Uniquefunname":"func (ss *SampleSpec) GetPaSampleSpec() *paSimple.SampleSpec","Funname":"GetPaSampleSpec","Returntype":"*paSimple.SampleSpec","Args":""},{"Uniquefunname":"func NewPlayer(useCache bool, backendType PlayBackendType) *Player","Funname":"NewPlayer","Returntype":"*Player","Args":"useCache bool, backendType PlayBackendType"},{"Uniquefunname":"func (player *Player) Play(theme, event, device string) error","Funname":"Play","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func cacheItemOk(cacheItem *CacheItem, fileInfo os.FileInfo) bool","Funname":"cacheItemOk","Returntype":"bool","Args":"cacheItem *CacheItem, fileInfo os.FileInfo"},{"Uniquefunname":"func getDecoder(file string, fileInfo os.FileInfo) (Decoder, error)","Funname":"getDecoder","Returntype":"(Decoder, error)","Args":"file string, fileInfo os.FileInfo"},{"Uniquefunname":"func (Player *Player) getDuration(file string) (time.Duration, error)","Funname":"getDuration","Returntype":"(time.Duration, error)","Args":"file string"},{"Uniquefunname":"func getPlayBackend(type0 PlayBackendType, event, device string, sampleSpec *SampleSpec)(PlayBackend, error)","Funname":"getPlayBackend","Returntype":"(PlayBackend, error)","Args":"type0 PlayBackendType, event, device string, sampleSpec *SampleSpec"},{"Uniquefunname":"func (player *Player) play(file, event, device string) error","Funname":"play","Returntype":"error","Args":"file, event, device string"},{"Uniquefunname":"func (player *Player) playCacheItem(cacheItem *CacheItem, device string) error","Funname":"playCacheItem","Returntype":"error","Args":"cacheItem *CacheItem, device string"},{"Uniquefunname":"func NewPlayer(useCache bool, backendType PlayBackendType) *Player","Funname":"sound_effect.NewPlayer","Returntype":"*Player","Args":"useCache bool, backendType PlayBackendType"},{"Uniquefunname":"func (player *Player) Finder() *theme.Finder","Funname":"sound_effect.Player.Finder","Returntype":"*theme.Finder","Args":""},{"Uniquefunname":"func (player *Player) GetDuration(theme, event string) (time.Duration, error)","Funname":"sound_effect.Player.GetDuration","Returntype":"(time.Duration, error)","Args":"theme, event string"},{"Uniquefunname":"func (player *Player) Play(theme, event, device string) error","Funname":"sound_effect.Player.Play","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func (Player *Player) getDuration(file string) (time.Duration, error)","Funname":"sound_effect.Player.getDuration","Returntype":"(time.Duration, error)","Args":"file string"},{"Uniquefunname":"func (player *Player) play(file, event, device string) error","Funname":"sound_effect.Player.play","Returntype":"error","Args":"file, event, device string"},{"Uniquefunname":"func (player *Player) playCacheItem(cacheItem *CacheItem, device string) error","Funname":"sound_effect.Player.playCacheItem","Returntype":"error","Args":"cacheItem *CacheItem, device string"},{"Uniquefunname":"func (ss *SampleSpec) GetPaSampleSpec() *paSimple.SampleSpec","Funname":"sound_effect.SampleSpec.GetPaSampleSpec","Returntype":"*paSimple.SampleSpec","Args":""},{"Uniquefunname":"func cacheItemOk(cacheItem *CacheItem, fileInfo os.FileInfo) bool","Funname":"sound_effect.cacheItemOk","Returntype":"bool","Args":"cacheItem *CacheItem, fileInfo os.FileInfo"},{"Uniquefunname":"func getDecoder(file string, fileInfo os.FileInfo) (Decoder, error)","Funname":"sound_effect.getDecoder","Returntype":"(Decoder, error)","Args":"file string, fileInfo os.FileInfo"},{"Uniquefunname":"func sound_effect.getPlayBackend(type0 PlayBackendType, event, device string, sampleSpec *SampleSpec)(PlayBackend, error)","Funname":"sound_effect.getPlayBackend","Returntype":"(PlayBackend, error)","Args":"type0 PlayBackendType, event, device string, sampleSpec *SampleSpec"}],"Records":[{"Name":"struct:sound_effect.CacheItem","Fields":["sound_effect.CacheItem.data [][]byte","sound_effect.CacheItem.event string","sound_effect.CacheItem.modTime time.Time","sound_effect.CacheItem.sampleSpec *SampleSpec"]},{"Name":"interface","Fields":["sound_effect.Decoder","sound_effect.PlayBackend"]},{"Name":"const:sound_effect","Fields":["sound_effect.PlayBackendALSA","sound_effect.PlayBackendPulseAudio"]},{"Name":"struct:sound_effect.Player","Fields":["sound_effect.Player.UseCache bool","sound_effect.Player.backendType PlayBackendType","sound_effect.Player.cache map[string]*CacheItem","sound_effect.Player.cacheMu sync.Mutex","sound_effect.Player.finder *theme.Finder"]},{"Name":"struct:sound_effect.SampleSpec","Fields":["sound_effect.SampleSpec.channels int","sound_effect.SampleSpec.paFormat paSimple.SampleFormat","sound_effect.SampleSpec.pcmFormat asound.PCMFormat","sound_effect.SampleSpec.rate int"]}]}
{"Filepath":"sound_effect/pulse_backend.go","Functions":[{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Drain() error","Funname":"Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Write(data []byte) error","Funname":"Write","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func newPulseAudioPlayBackend(event, device string, sampleSpec *SampleSpec)(PlayBackend, error)","Funname":"newPulseAudioPlayBackend","Returntype":"(PlayBackend, error)","Args":"event, device string, sampleSpec *SampleSpec"},{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Close() error","Funname":"sound_effect.PulseAudioPlayBackend.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Drain() error","Funname":"sound_effect.PulseAudioPlayBackend.Drain","Returntype":"error","Args":""},{"Uniquefunname":"func (pb *PulseAudioPlayBackend) Write(data []byte) error","Funname":"sound_effect.PulseAudioPlayBackend.Write","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func sound_effect.newPulseAudioPlayBackend(event, device string, sampleSpec *SampleSpec)(PlayBackend, error)","Funname":"sound_effect.newPulseAudioPlayBackend","Returntype":"(PlayBackend, error)","Args":"event, device string, sampleSpec *SampleSpec"}],"Records":[{"Name":"struct:sound_effect.PulseAudioPlayBackend","Fields":["sound_effect.PulseAudioPlayBackend.conn paSimple.Conn"]}]}
{"Filepath":"sound_effect/wav.go","Functions":[{"Uniquefunname":"func (d *WavDecoder) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (d *WavDecoder) Decode() ([]byte, error)","Funname":"Decode","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (d *WavDecoder) GetDuration() time.Duration","Funname":"GetDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (d *WavDecoder) GetSampleSpec() *SampleSpec","Funname":"GetSampleSpec","Returntype":"*SampleSpec","Args":""},{"Uniquefunname":"func getWavFormat(wavFile wav.File) (paSimple.SampleFormat, asound.PCMFormat, error)","Funname":"getWavFormat","Returntype":"(paSimple.SampleFormat, asound.PCMFormat, error)","Args":"wavFile wav.File"},{"Uniquefunname":"func newWavDecoder(filename string, fileInfo os.FileInfo) (Decoder, error)","Funname":"newWavDecoder","Returntype":"(Decoder, error)","Args":"filename string, fileInfo os.FileInfo"},{"Uniquefunname":"func (d *WavDecoder) read(buf []byte) (int, error)","Funname":"read","Returntype":"(int, error)","Args":"buf []byte"},{"Uniquefunname":"func (d *WavDecoder) Close() error","Funname":"sound_effect.WavDecoder.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (d *WavDecoder) Decode() ([]byte, error)","Funname":"sound_effect.WavDecoder.Decode","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (d *WavDecoder) GetDuration() time.Duration","Funname":"sound_effect.WavDecoder.GetDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (d *WavDecoder) GetSampleSpec() *SampleSpec","Funname":"sound_effect.WavDecoder.GetSampleSpec","Returntype":"*SampleSpec","Args":""},{"Uniquefunname":"func (d *WavDecoder) read(buf []byte) (int, error)","Funname":"sound_effect.WavDecoder.read","Returntype":"(int, error)","Args":"buf []byte"},{"Uniquefunname":"func getWavFormat(wavFile wav.File) (paSimple.SampleFormat, asound.PCMFormat, error)","Funname":"sound_effect.getWavFormat","Returntype":"(paSimple.SampleFormat, asound.PCMFormat, error)","Args":"wavFile wav.File"},{"Uniquefunname":"func newWavDecoder(filename string, fileInfo os.FileInfo) (Decoder, error)","Funname":"sound_effect.newWavDecoder","Returntype":"(Decoder, error)","Args":"filename string, fileInfo os.FileInfo"}],"Records":[{"Name":"struct:sound_effect.WavDecoder","Fields":["sound_effect.WavDecoder.bufSize int","sound_effect.WavDecoder.bytesPerFrame int","sound_effect.WavDecoder.duration time.Duration","sound_effect.WavDecoder.f *os.File","sound_effect.WavDecoder.reader *wav.Reader","sound_effect.WavDecoder.sampleSpec *SampleSpec"]}]}
{"Filepath":"sound_effect/theme/theme.go","Functions":[{"Uniquefunname":"func (finder *Finder) Find(reqTheme, reqOutputProfile, reqName string) string","Funname":"Find","Returntype":"string","Args":"reqTheme, reqOutputProfile, reqName string"},{"Uniquefunname":"func (finder *Finder) GetTheme(name string) (*Theme, error)","Funname":"GetTheme","Returntype":"(*Theme, error)","Args":"name string"},{"Uniquefunname":"func LoadTheme(filename string) (*Theme, error)","Funname":"LoadTheme","Returntype":"(*Theme, error)","Args":"filename string"},{"Uniquefunname":"func NewFinder() *Finder","Funname":"NewFinder","Returntype":"*Finder","Args":""},{"Uniquefunname":"func (finder *Finder) find(reqTheme, reqOutputProfile, reqName string) string","Funname":"find","Returntype":"string","Args":"reqTheme, reqOutputProfile, reqName string"},{"Uniquefunname":"func getNames(name string, acc []string) []string","Funname":"getNames","Returntype":"[]string","Args":"name string, acc []string"},{"Uniquefunname":"func isNameOk(name string) bool","Funname":"isNameOk","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (finder *Finder) lookup(theme *Theme, reqOutputProfile, reqName string) string","Funname":"lookup","Returntype":"string","Args":"theme *Theme, reqOutputProfile, reqName string"},{"Uniquefunname":"func (finder *Finder) Find(reqTheme, reqOutputProfile, reqName string) string","Funname":"theme.Finder.Find","Returntype":"string","Args":"reqTheme, reqOutputProfile, reqName string"},{"Uniquefunname":"func (finder *Finder) GetTheme(name string) (*Theme, error)","Funname":"theme.Finder.GetTheme","Returntype":"(*Theme, error)","Args":"name string"},{"Uniquefunname":"func (finder *Finder) find(reqTheme, reqOutputProfile, reqName string) string","Funname":"theme.Finder.find","Returntype":"string","Args":"reqTheme, reqOutputProfile, reqName string"},{"Uniquefunname":"func (finder *Finder) lookup(theme *Theme, reqOutputProfile, reqName string) string","Funname":"theme.Finder.lookup","Returntype":"string","Args":"theme *Theme, reqOutputProfile, reqName string"},{"Uniquefunname":"func LoadTheme(filename string) (*Theme, error)","Funname":"theme.LoadTheme","Returntype":"(*Theme, error)","Args":"filename string"},{"Uniquefunname":"func NewFinder() *Finder","Funname":"theme.NewFinder","Returntype":"*Finder","Args":""},{"Uniquefunname":"func getNames(name string, acc []string) []string","Funname":"theme.getNames","Returntype":"[]string","Args":"name string, acc []string"},{"Uniquefunname":"func isNameOk(name string) bool","Funname":"theme.isNameOk","Returntype":"bool","Args":"name string"}],"Records":[{"Name":"struct:theme.Finder","Fields":["theme.Finder.dataDirs []string","theme.Finder.loadedThemes map[string]*Theme","theme.Finder.mu sync.Mutex"]},{"Name":"struct:theme.SubDir","Fields":["theme.SubDir.Name string","theme.SubDir.OutputProfile string"]},{"Name":"struct:theme.Theme","Fields":["theme.Theme.Directories []string","theme.Theme.Inherits []string","theme.Theme.InternalName string","theme.Theme.Path string","theme.Theme.SubDirs []SubDir"]}]}
{"Filepath":"stb_vorbis/stb_vorbis.go","Functions":[{"Uniquefunname":"func (d Decoder) Close()","Funname":"Close","Returntype":"","Args":""},{"Uniquefunname":"func DecodeFile(filename string) (result []int16, channels int, sampleRate int, err error)","Funname":"DecodeFile","Returntype":"(result []int16, channels int, sampleRate int, err error)","Args":"filename string"},{"Uniquefunname":"func (err Error) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (d Decoder) GetError() error","Funname":"GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (d Decoder) GetInfo() Info","Funname":"GetInfo","Returntype":"Info","Args":""},{"Uniquefunname":"func (d Decoder) GetSamplesShortInterleaved(channels int, buffer []byte) int","Funname":"GetSamplesShortInterleaved","Returntype":"int","Args":"channels int, buffer []byte"},{"Uniquefunname":"func OpenFile(filename string) (Decoder, error)","Funname":"OpenFile","Returntype":"(Decoder, error)","Args":"filename string"},{"Uniquefunname":"func (d Decoder) StreamLengthInSamples() uint","Funname":"StreamLengthInSamples","Returntype":"uint","Args":""},{"Uniquefunname":"func (v Decoder) native() *C.stb_vorbis","Funname":"native","Returntype":"*C.stb_vorbis","Args":""},{"Uniquefunname":"func setSliceDataLen(pSlice, pData unsafe.Pointer, len int)","Funname":"setSliceDataLen","Returntype":"","Args":"pSlice, pData unsafe.Pointer, len int"},{"Uniquefunname":"func DecodeFile(filename string) (result []int16, channels int, sampleRate int, err error)","Funname":"stb_vorbis.DecodeFile","Returntype":"(result []int16, channels int, sampleRate int, err error)","Args":"filename string"},{"Uniquefunname":"func (d Decoder) Close()","Funname":"stb_vorbis.Decoder.Close","Returntype":"","Args":""},{"Uniquefunname":"func (d Decoder) GetError() error","Funname":"stb_vorbis.Decoder.GetError","Returntype":"error","Args":""},{"Uniquefunname":"func (d Decoder) GetInfo() Info","Funname":"stb_vorbis.Decoder.GetInfo","Returntype":"Info","Args":""},{"Uniquefunname":"func (d Decoder) GetSamplesShortInterleaved(channels int, buffer []byte) int","Funname":"stb_vorbis.Decoder.GetSamplesShortInterleaved","Returntype":"int","Args":"channels int, buffer []byte"},{"Uniquefunname":"func (d Decoder) StreamLengthInSamples() uint","Funname":"stb_vorbis.Decoder.StreamLengthInSamples","Returntype":"uint","Args":""},{"Uniquefunname":"func (v Decoder) native() *C.stb_vorbis","Funname":"stb_vorbis.Decoder.native","Returntype":"*C.stb_vorbis","Args":""},{"Uniquefunname":"func (err Error) Error() string","Funname":"stb_vorbis.Error.Error","Returntype":"string","Args":""},{"Uniquefunname":"func OpenFile(filename string) (Decoder, error)","Funname":"stb_vorbis.OpenFile","Returntype":"(Decoder, error)","Args":"filename string"},{"Uniquefunname":"func setSliceDataLen(pSlice, pData unsafe.Pointer, len int)","Funname":"stb_vorbis.setSliceDataLen","Returntype":"","Args":"pSlice, pData unsafe.Pointer, len int"},{"Uniquefunname":"func wrapDecoder(ptr *C.stb_vorbis) Decoder","Funname":"stb_vorbis.wrapDecoder","Returntype":"Decoder","Args":"ptr *C.stb_vorbis"},{"Uniquefunname":"func wrapDecoder(ptr *C.stb_vorbis) Decoder","Funname":"wrapDecoder","Returntype":"Decoder","Args":"ptr *C.stb_vorbis"}],"Records":[{"Name":"const:stb_vorbis","Fields":["stb_vorbis.BadPacketType","stb_vorbis.CantFindLastPage","stb_vorbis.FeatureNotSupported","stb_vorbis.FileOpenFailure","stb_vorbis.IncorrectStreamSerialNumber","stb_vorbis.InvalidAPIMixing","stb_vorbis.InvalidContinuedPacketFlag","stb_vorbis.InvalidFirstPage","stb_vorbis.InvalidSetup","stb_vorbis.InvalidStream","stb_vorbis.InvalidStreamStructureVersion","stb_vorbis.MissingCapturePattern","stb_vorbis.NeedMoreData","stb_vorbis.NoError","stb_vorbis.OutOfMem","stb_vorbis.SeekFailed","stb_vorbis.SeekInvalid","stb_vorbis.SeekWithoutLength","stb_vorbis.TooManyChannels","stb_vorbis.UnexpectedEOF"]},{"Name":"struct:stb_vorbis.Decoder","Fields":["stb_vorbis.Decoder.Ptr unsafe.Pointer"]},{"Name":"struct:stb_vorbis.Error","Fields":["stb_vorbis.Error.Code int"]},{"Name":"struct:stb_vorbis.Info","Fields":["stb_vorbis.Info.Channels int","stb_vorbis.Info.SampleRate uint"]}]}
{"Filepath":"strv/strv.go","Functions":[{"Uniquefunname":"func (vector Strv) Add(str string) (Strv, bool)","Funname":"Add","Returntype":"(Strv, bool)","Args":"str string"},{"Uniquefunname":"func (vector Strv) Contains(str string) bool","Funname":"Contains","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func (vector Strv) Delete(str string) (Strv, bool)","Funname":"Delete","Returntype":"(Strv, bool)","Args":"str string"},{"Uniquefunname":"func (v1 Strv) Equal(v2 Strv) bool","Funname":"Equal","Returntype":"bool","Args":"v2 Strv"},{"Uniquefunname":"func (vector Strv) FilterEmpty() Strv","Funname":"FilterEmpty","Returntype":"Strv","Args":""},{"Uniquefunname":"func (vector Strv) FilterFunc(fn func(string) bool) Strv","Funname":"FilterFunc","Returntype":"Strv","Args":"fn func(string) bool"},{"Uniquefunname":"func (vector Strv) Uniq() Strv","Funname":"Uniq","Returntype":"Strv","Args":""},{"Uniquefunname":"func (vector Strv) Add(str string) (Strv, bool)","Funname":"strv.Strv.Add","Returntype":"(Strv, bool)","Args":"str string"},{"Uniquefunname":"func (vector Strv) Contains(str string) bool","Funname":"strv.Strv.Contains","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func (vector Strv) Delete(str string) (Strv, bool)","Funname":"strv.Strv.Delete","Returntype":"(Strv, bool)","Args":"str string"},{"Uniquefunname":"func (v1 Strv) Equal(v2 Strv) bool","Funname":"strv.Strv.Equal","Returntype":"bool","Args":"v2 Strv"},{"Uniquefunname":"func (vector Strv) FilterEmpty() Strv","Funname":"strv.Strv.FilterEmpty","Returntype":"Strv","Args":""},{"Uniquefunname":"func (vector Strv) FilterFunc(fn func(string) bool) Strv","Funname":"strv.Strv.FilterFunc","Returntype":"Strv","Args":"fn func(string) bool"},{"Uniquefunname":"func (vector Strv) Uniq() Strv","Funname":"strv.Strv.Uniq","Returntype":"Strv","Args":""}],"Records":null}
{"Filepath":"strv/strv_test.go","Functions":[{"Uniquefunname":"func TestAdd(t *testing.T)","Funname":"TestAdd","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestContains(t *testing.T)","Funname":"TestContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDelete(t *testing.T)","Funname":"TestDelete","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEqual(t *testing.T)","Funname":"TestEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterEmpty(t *testing.T)","Funname":"TestFilterEmpty","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterFunc(t *testing.T)","Funname":"TestFilterFunc","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUniq(t *testing.T)","Funname":"TestUniq","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAdd(t *testing.T)","Funname":"strv.TestAdd","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestContains(t *testing.T)","Funname":"strv.TestContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDelete(t *testing.T)","Funname":"strv.TestDelete","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEqual(t *testing.T)","Funname":"strv.TestEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterEmpty(t *testing.T)","Funname":"strv.TestFilterEmpty","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterFunc(t *testing.T)","Funname":"strv.TestFilterFunc","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUniq(t *testing.T)","Funname":"strv.TestUniq","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"tasker/delay_task.go","Functions":[{"Uniquefunname":"func NewDelayTask(duration time.Duration, cb interface{})(*DelayTask, error)","Funname":"NewDelayTask","Returntype":"(*DelayTask, error)","Args":"duration time.Duration, cb interface{}"},{"Uniquefunname":"func (task *DelayTask) Start(args ...interface","Funname":"Start","Returntype":"error","Args":"args ...interface{}"},{"Uniquefunname":"func (task *DelayTask) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func (task *DelayTask) doStart(values []reflect.Value)","Funname":"doStart","Returntype":"","Args":"values []reflect.Value"},{"Uniquefunname":"func handleFuncSignature(f interface{})(*reflect.Value, []reflect.Type, error)","Funname":"handleFuncSignature","Returntype":"(*reflect.Value, []reflect.Type, error)","Args":"f interface{}"},{"Uniquefunname":"func (task *DelayTask) Start(args ...interface","Funname":"tasker.DelayTask.Start","Returntype":"error","Args":"args ...interface{}"},{"Uniquefunname":"func (task *DelayTask) Stop()","Funname":"tasker.DelayTask.Stop","Returntype":"","Args":""},{"Uniquefunname":"func (task *DelayTask) doStart(values []reflect.Value)","Funname":"tasker.DelayTask.doStart","Returntype":"","Args":"values []reflect.Value"},{"Uniquefunname":"func tasker.NewDelayTask(duration time.Duration, cb interface{})(*DelayTask, error)","Funname":"tasker.NewDelayTask","Returntype":"(*DelayTask, error)","Args":"duration time.Duration, cb interface{}"},{"Uniquefunname":"func tasker.handleFuncSignature(f interface{})(*reflect.Value, []reflect.Type, error)","Funname":"tasker.handleFuncSignature","Returntype":"(*reflect.Value, []reflect.Type, error)","Args":"f interface{}"}],"Records":[{"Name":"struct:tasker.DelayTask","Fields":["tasker.DelayTask.argsType []reflect.Type","tasker.DelayTask.duration time.Duration","tasker.DelayTask.handler reflect.Value","tasker.DelayTask.locker sync.Mutex","tasker.DelayTask.termination chan struct{}","tasker.DelayTask.timer *time.Timer"]}]}
{"Filepath":"tasker/delay_task_manager.go","Functions":[{"Uniquefunname":"func (m *DelayTaskManager) AddTask(name string, duration time.Duration, cb interface","Funname":"AddTask","Returntype":"error","Args":"name string, duration time.Duration, cb interface{}"},{"Uniquefunname":"func (m *DelayTaskManager) DeleteTask(name string)","Funname":"DeleteTask","Returntype":"","Args":"name string"},{"Uniquefunname":"func (m *DelayTaskManager) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *DelayTaskManager) GetTask(name string) (*DelayTask, error)","Funname":"GetTask","Returntype":"(*DelayTask, error)","Args":"name string"},{"Uniquefunname":"func NewDelayTaskManager() *DelayTaskManager","Funname":"NewDelayTaskManager","Returntype":"*DelayTaskManager","Args":""},{"Uniquefunname":"func (m *DelayTaskManager) AddTask(name string, duration time.Duration, cb interface","Funname":"tasker.DelayTaskManager.AddTask","Returntype":"error","Args":"name string, duration time.Duration, cb interface{}"},{"Uniquefunname":"func (m *DelayTaskManager) DeleteTask(name string)","Funname":"tasker.DelayTaskManager.DeleteTask","Returntype":"","Args":"name string"},{"Uniquefunname":"func (m *DelayTaskManager) Destroy()","Funname":"tasker.DelayTaskManager.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *DelayTaskManager) GetTask(name string) (*DelayTask, error)","Funname":"tasker.DelayTaskManager.GetTask","Returntype":"(*DelayTask, error)","Args":"name string"},{"Uniquefunname":"func NewDelayTaskManager() *DelayTaskManager","Funname":"tasker.NewDelayTaskManager","Returntype":"*DelayTaskManager","Args":""}],"Records":[{"Name":"struct:tasker.DelayTaskManager","Fields":["tasker.DelayTaskManager.locker sync.Mutex","tasker.DelayTaskManager.taskMap map[string]*DelayTask"]}]}
{"Filepath":"tasker/tasker_test.go","Functions":[{"Uniquefunname":"func TestDelayTask(t *testing.T)","Funname":"TestDelayTask","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func handleTask(id int, name string)","Funname":"handleTask","Returntype":"","Args":"id int, name string"},{"Uniquefunname":"func TestDelayTask(t *testing.T)","Funname":"tasker.TestDelayTask","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func handleTask(id int, name string)","Funname":"tasker.handleTask","Returntype":"","Args":"id int, name string"}],"Records":null}
{"Filepath":"timer/time.go","Functions":[{"Uniquefunname":"func GetMonotonicTime() TimeSpec","Funname":"GetMonotonicTime","Returntype":"TimeSpec","Args":""},{"Uniquefunname":"func (ts TimeSpec) MicroSeconds() int64","Funname":"MicroSeconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) Milliseconds() int64","Funname":"Milliseconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) NanoSeconds() int64","Funname":"NanoSeconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) Seconds() int64","Funname":"Seconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func GetMonotonicTime() TimeSpec","Funname":"timer.GetMonotonicTime","Returntype":"TimeSpec","Args":""},{"Uniquefunname":"func (ts TimeSpec) MicroSeconds() int64","Funname":"timer.TimeSpec.MicroSeconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) Milliseconds() int64","Funname":"timer.TimeSpec.Milliseconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) NanoSeconds() int64","Funname":"timer.TimeSpec.NanoSeconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) Seconds() int64","Funname":"timer.TimeSpec.Seconds","Returntype":"int64","Args":""},{"Uniquefunname":"func (ts TimeSpec) String() string","Funname":"timer.TimeSpec.String","Returntype":"string","Args":""}],"Records":[{"Name":"struct:timer.TimeSpec","Fields":["timer.TimeSpec.nanoSeconds int64","timer.TimeSpec.seconds int64"]}]}
{"Filepath":"timer/timer.go","Functions":[{"Uniquefunname":"func (timer *Timer) Continue()","Funname":"Continue","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Elapsed() time.Duration","Funname":"Elapsed","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func NewTimer() *Timer","Funname":"NewTimer","Returntype":"*Timer","Args":""},{"Uniquefunname":"func (timer *Timer) Reset()","Funname":"Reset","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Start()","Funname":"Start","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func NewTimer() *Timer","Funname":"timer.NewTimer","Returntype":"*Timer","Args":""},{"Uniquefunname":"func (timer *Timer) Continue()","Funname":"timer.Timer.Continue","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Elapsed() time.Duration","Funname":"timer.Timer.Elapsed","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (timer *Timer) Reset()","Funname":"timer.Timer.Reset","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Start()","Funname":"timer.Timer.Start","Returntype":"","Args":""},{"Uniquefunname":"func (timer *Timer) Stop()","Funname":"timer.Timer.Stop","Returntype":"","Args":""}],"Records":[{"Name":"struct:timer.Timer","Fields":["timer.Timer.duration time.Duration","timer.Timer.lastDuration time.Duration","timer.Timer.state _TimerState","timer.Timer.timer time.Time"]},{"Name":"const:timer","Fields":["timer._TimerStateNotStarted","timer._TimerStateStarted","timer._TimerStateStopped"]}]}
{"Filepath":"timer/timer_test.go","Functions":[{"Uniquefunname":"func TestTimer(t *testing.T)","Funname":"TestTimer","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestTimer(t *testing.T)","Funname":"timer_test.TestTimer","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"users/group/group.go","Functions":[{"Uniquefunname":"func (err *GroupNotFoundError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func GetGroupByGid(gid uint32) (*Group, error)","Funname":"GetGroupByGid","Returntype":"(*Group, error)","Args":"gid uint32"},{"Uniquefunname":"func GetGroupByName(name string) (*Group, error)","Funname":"GetGroupByName","Returntype":"(*Group, error)","Args":"name string"},{"Uniquefunname":"func GetGroupEntry() []*Group","Funname":"GetGroupEntry","Returntype":"[]*Group","Args":""},{"Uniquefunname":"func GetGroupByGid(gid uint32) (*Group, error)","Funname":"group.GetGroupByGid","Returntype":"(*Group, error)","Args":"gid uint32"},{"Uniquefunname":"func GetGroupByName(name string) (*Group, error)","Funname":"group.GetGroupByName","Returntype":"(*Group, error)","Args":"name string"},{"Uniquefunname":"func GetGroupEntry() []*Group","Funname":"group.GetGroupEntry","Returntype":"[]*Group","Args":""},{"Uniquefunname":"func (err *GroupNotFoundError) Error() string","Funname":"group.GroupNotFoundError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func groupC2Go(groupC *C.struct_group) *Group","Funname":"group.groupC2Go","Returntype":"*Group","Args":"groupC *C.struct_group"},{"Uniquefunname":"func stringArrayC2Go_2(strArrC **C.char) *[]string","Funname":"group.stringArrayC2Go_2","Returntype":"*[]string","Args":"strArrC **C.char"},{"Uniquefunname":"func groupC2Go(groupC *C.struct_group) *Group","Funname":"groupC2Go","Returntype":"*Group","Args":"groupC *C.struct_group"},{"Uniquefunname":"func stringArrayC2Go_2(strArrC **C.char) *[]string","Funname":"stringArrayC2Go_2","Returntype":"*[]string","Args":"strArrC **C.char"}],"Records":[{"Name":"struct:group.Group","Fields":["group.Group.Gid uint32","group.Group.Members *[]string","group.Group.Name string","group.Group.Passwd string"]},{"Name":"struct:group.GroupNotFoundError","Fields":["group.GroupNotFoundError.Gid uint32","group.GroupNotFoundError.Name string"]}]}
{"Filepath":"users/group/group_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestGetGroupByGid(c *C.C)","Funname":"TestGetGroupByGid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGroupByName(c *C.C)","Funname":"TestGetGroupByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGroupEntry(c *C.C)","Funname":"TestGetGroupEntry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"group.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"group.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestGetGroupByGid(c *C.C)","Funname":"group.testWrapper.TestGetGroupByGid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGroupByName(c *C.C)","Funname":"group.testWrapper.TestGetGroupByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetGroupEntry(c *C.C)","Funname":"group.testWrapper.TestGetGroupEntry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"users/passwd/passwd.go","Functions":[{"Uniquefunname":"func (err *UserNotFoundError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func GetPasswdByName(name string) (*Passwd, error)","Funname":"GetPasswdByName","Returntype":"(*Passwd, error)","Args":"name string"},{"Uniquefunname":"func GetPasswdByUid(uid uint32) (*Passwd, error)","Funname":"GetPasswdByUid","Returntype":"(*Passwd, error)","Args":"uid uint32"},{"Uniquefunname":"func GetPasswdEntry() []*Passwd","Funname":"GetPasswdEntry","Returntype":"[]*Passwd","Args":""},{"Uniquefunname":"func GetPasswdByName(name string) (*Passwd, error)","Funname":"passwd.GetPasswdByName","Returntype":"(*Passwd, error)","Args":"name string"},{"Uniquefunname":"func GetPasswdByUid(uid uint32) (*Passwd, error)","Funname":"passwd.GetPasswdByUid","Returntype":"(*Passwd, error)","Args":"uid uint32"},{"Uniquefunname":"func GetPasswdEntry() []*Passwd","Funname":"passwd.GetPasswdEntry","Returntype":"[]*Passwd","Args":""},{"Uniquefunname":"func (err *UserNotFoundError) Error() string","Funname":"passwd.UserNotFoundError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func passwdC2Go(passwdC *C.struct_passwd) *Passwd","Funname":"passwd.passwdC2Go","Returntype":"*Passwd","Args":"passwdC *C.struct_passwd"},{"Uniquefunname":"func passwdC2Go(passwdC *C.struct_passwd) *Passwd","Funname":"passwdC2Go","Returntype":"*Passwd","Args":"passwdC *C.struct_passwd"}],"Records":[{"Name":"struct:passwd.Passwd","Fields":["passwd.Passwd.Comment string","passwd.Passwd.Gid uint32","passwd.Passwd.Home string","passwd.Passwd.Name string","passwd.Passwd.Passwd string","passwd.Passwd.Shell string","passwd.Passwd.Uid uint32"]},{"Name":"struct:passwd.UserNotFoundError","Fields":["passwd.UserNotFoundError.Name string","passwd.UserNotFoundError.Uid uint32"]}]}
{"Filepath":"users/passwd/passwd_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestGetPasswdByName(c *C.C)","Funname":"TestGetPasswdByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPasswdByUid(c *C.C)","Funname":"TestGetPasswdByUid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPasswdEntry(c *C.C)","Funname":"TestGetPasswdEntry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"passwd.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"passwd.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestGetPasswdByName(c *C.C)","Funname":"passwd.testWrapper.TestGetPasswdByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPasswdByUid(c *C.C)","Funname":"passwd.testWrapper.TestGetPasswdByUid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetPasswdEntry(c *C.C)","Funname":"passwd.testWrapper.TestGetPasswdEntry","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"users/shadow/shadow.go","Functions":[{"Uniquefunname":"func (err *UserNotFoundError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func GetShadowByName(name string) (*Shadow, error)","Funname":"GetShadowByName","Returntype":"(*Shadow, error)","Args":"name string"},{"Uniquefunname":"func GetShadowEntry() []*Shadow","Funname":"GetShadowEntry","Returntype":"[]*Shadow","Args":""},{"Uniquefunname":"func GetShadowByName(name string) (*Shadow, error)","Funname":"shadow.GetShadowByName","Returntype":"(*Shadow, error)","Args":"name string"},{"Uniquefunname":"func GetShadowEntry() []*Shadow","Funname":"shadow.GetShadowEntry","Returntype":"[]*Shadow","Args":""},{"Uniquefunname":"func (err *UserNotFoundError) Error() string","Funname":"shadow.UserNotFoundError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func shadowC2Go(shadowC *C.struct_spwd) *Shadow","Funname":"shadow.shadowC2Go","Returntype":"*Shadow","Args":"shadowC *C.struct_spwd"},{"Uniquefunname":"func shadowC2Go(shadowC *C.struct_spwd) *Shadow","Funname":"shadowC2Go","Returntype":"*Shadow","Args":"shadowC *C.struct_spwd"}],"Records":[{"Name":"struct:shadow.Shadow","Fields":["shadow.Shadow.Expire int64","shadow.Shadow.Flag uint64","shadow.Shadow.Inactive int64","shadow.Shadow.LastChange int64","shadow.Shadow.MaxDays int64","shadow.Shadow.MinDays int64","shadow.Shadow.Name string","shadow.Shadow.Password string","shadow.Shadow.Warn int64"]},{"Name":"struct:shadow.UserNotFoundError","Fields":["shadow.UserNotFoundError.Name string","shadow.UserNotFoundError.Uid uint32"]}]}
{"Filepath":"users/shadow/shadow_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestGetShadowByName(c *C.C)","Funname":"TestGetShadowByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetShadowEntry(c *C.C)","Funname":"TestGetShadowEntry","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"shadow.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"shadow.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestGetShadowByName(c *C.C)","Funname":"shadow.testWrapper.TestGetShadowByName","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetShadowEntry(c *C.C)","Funname":"shadow.testWrapper.TestGetShadowEntry","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"utils/cache.go","Functions":[{"Uniquefunname":"func GenerateCacheFilePath(keyword string) (dstfile string)","Funname":"GenerateCacheFilePath","Returntype":"(dstfile string)","Args":"keyword string"},{"Uniquefunname":"func GenerateCacheFilePathWithPrefix(prefix, keyword string) (dstfile string)","Funname":"GenerateCacheFilePathWithPrefix","Returntype":"(dstfile string)","Args":"prefix, keyword string"},{"Uniquefunname":"func GenerateCacheFilePath(keyword string) (dstfile string)","Funname":"utils.GenerateCacheFilePath","Returntype":"(dstfile string)","Args":"keyword string"},{"Uniquefunname":"func GenerateCacheFilePathWithPrefix(prefix, keyword string) (dstfile string)","Funname":"utils.GenerateCacheFilePathWithPrefix","Returntype":"(dstfile string)","Args":"prefix, keyword string"}],"Records":[{"Name":"var:utils","Fields":["utils.DefaultCachePrefix"]}]}
{"Filepath":"utils/config.go","Functions":[{"Uniquefunname":"func (c *Config) GetConfigFile() string","Funname":"GetConfigFile","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Config) GetFileContentToSave(v interface","Funname":"GetFileContentToSave","Returntype":"(fileContent []byte, err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) IsConfigFileExists() bool","Funname":"IsConfigFileExists","Returntype":"bool","Args":""},{"Uniquefunname":"func (c *Config) Load(v interface","Funname":"Load","Returntype":"(err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) Lock()","Funname":"Lock","Returntype":"","Args":""},{"Uniquefunname":"func (c *Config) RemoveConfigFile() error","Funname":"RemoveConfigFile","Returntype":"error","Args":""},{"Uniquefunname":"func (c *Config) Save(v interface","Funname":"Save","Returntype":"(err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) SetConfigFile(file string)","Funname":"SetConfigFile","Returntype":"","Args":"file string"},{"Uniquefunname":"func (c *Config) SetConfigName(name string)","Funname":"SetConfigName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Config) SetSystemConfigName(name string)","Funname":"SetSystemConfigName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Config) Unlock()","Funname":"Unlock","Returntype":"","Args":""},{"Uniquefunname":"func (c *Config) GetConfigFile() string","Funname":"utils.Config.GetConfigFile","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Config) GetFileContentToSave(v interface","Funname":"utils.Config.GetFileContentToSave","Returntype":"(fileContent []byte, err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) IsConfigFileExists() bool","Funname":"utils.Config.IsConfigFileExists","Returntype":"bool","Args":""},{"Uniquefunname":"func (c *Config) Load(v interface","Funname":"utils.Config.Load","Returntype":"(err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) Lock()","Funname":"utils.Config.Lock","Returntype":"","Args":""},{"Uniquefunname":"func (c *Config) RemoveConfigFile() error","Funname":"utils.Config.RemoveConfigFile","Returntype":"error","Args":""},{"Uniquefunname":"func (c *Config) Save(v interface","Funname":"utils.Config.Save","Returntype":"(err error)","Args":"v interface{}"},{"Uniquefunname":"func (c *Config) SetConfigFile(file string)","Funname":"utils.Config.SetConfigFile","Returntype":"","Args":"file string"},{"Uniquefunname":"func (c *Config) SetConfigName(name string)","Funname":"utils.Config.SetConfigName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Config) SetSystemConfigName(name string)","Funname":"utils.Config.SetSystemConfigName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (c *Config) Unlock()","Funname":"utils.Config.Unlock","Returntype":"","Args":""}],"Records":[{"Name":"struct:utils.Config","Fields":["utils.Config.configFile string","utils.Config.lock sync.Mutex"]},{"Name":"var:utils","Fields":["utils.DefaultConfigExt","utils.DefaultHomeConfigPrefix","utils.DefaultSystemConfigPrefix"]}]}
{"Filepath":"utils/config_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestConfig(c *C.C)","Funname":"TestConfig","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (c *testConfig) load()","Funname":"load","Returntype":"","Args":""},{"Uniquefunname":"func newTestConfig() (c *testConfig)","Funname":"newTestConfig","Returntype":"(c *testConfig)","Args":""},{"Uniquefunname":"func (c *testConfig) save() error","Funname":"save","Returntype":"error","Args":""},{"Uniquefunname":"func newTestConfig() (c *testConfig)","Funname":"utils.newTestConfig","Returntype":"(c *testConfig)","Args":""},{"Uniquefunname":"func (c *testConfig) load()","Funname":"utils.testConfig.load","Returntype":"","Args":""},{"Uniquefunname":"func (c *testConfig) save() error","Funname":"utils.testConfig.save","Returntype":"error","Args":""},{"Uniquefunname":"func (*testWrapper) TestConfig(c *C.C)","Funname":"utils.testWrapper.TestConfig","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"struct:utils.testConfig","Fields":["utils.testConfig.Data string","utils.testConfig.core Config"]}]}
{"Filepath":"utils/file.go","Functions":[{"Uniquefunname":"func CopyDir(src, dest string) error","Funname":"CopyDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func CopyFile(src, dest string) (err error)","Funname":"CopyFile","Returntype":"(err error)","Args":"src, dest string"},{"Uniquefunname":"func CreateFile(filename string) error","Funname":"CreateFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func EnsureDirExist(path string) error","Funname":"EnsureDirExist","Returntype":"error","Args":"path string"},{"Uniquefunname":"func EnsureDirExistWithPerm(path string, perm os.FileMode) error","Funname":"EnsureDirExistWithPerm","Returntype":"error","Args":"path string, perm os.FileMode"},{"Uniquefunname":"func GetFilesInDir(dir string) ([]string, error)","Funname":"GetFilesInDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func IsDir(path string) bool","Funname":"IsDir","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func IsFileExist(path string) bool","Funname":"IsFileExist","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func IsSymlink(path string) bool","Funname":"IsSymlink","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func MoveDir(src, dest string) error","Funname":"MoveDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func MoveFile(src, dest string) error","Funname":"MoveFile","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func SymlinkFile(src, dest string) error","Funname":"SymlinkFile","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func iterCopyDir(src, dest string, mode os.FileMode) error","Funname":"iterCopyDir","Returntype":"error","Args":"src, dest string, mode os.FileMode"},{"Uniquefunname":"func symlinkIsDir(link string) bool","Funname":"symlinkIsDir","Returntype":"bool","Args":"link string"},{"Uniquefunname":"func CopyDir(src, dest string) error","Funname":"utils.CopyDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func CopyFile(src, dest string) (err error)","Funname":"utils.CopyFile","Returntype":"(err error)","Args":"src, dest string"},{"Uniquefunname":"func CreateFile(filename string) error","Funname":"utils.CreateFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func EnsureDirExist(path string) error","Funname":"utils.EnsureDirExist","Returntype":"error","Args":"path string"},{"Uniquefunname":"func EnsureDirExistWithPerm(path string, perm os.FileMode) error","Funname":"utils.EnsureDirExistWithPerm","Returntype":"error","Args":"path string, perm os.FileMode"},{"Uniquefunname":"func GetFilesInDir(dir string) ([]string, error)","Funname":"utils.GetFilesInDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func IsDir(path string) bool","Funname":"utils.IsDir","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func IsFileExist(path string) bool","Funname":"utils.IsFileExist","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func IsSymlink(path string) bool","Funname":"utils.IsSymlink","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func MoveDir(src, dest string) error","Funname":"utils.MoveDir","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func MoveFile(src, dest string) error","Funname":"utils.MoveFile","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func SymlinkFile(src, dest string) error","Funname":"utils.SymlinkFile","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func iterCopyDir(src, dest string, mode os.FileMode) error","Funname":"utils.iterCopyDir","Returntype":"error","Args":"src, dest string, mode os.FileMode"},{"Uniquefunname":"func symlinkIsDir(link string) bool","Funname":"utils.symlinkIsDir","Returntype":"bool","Args":"link string"}],"Records":null}
{"Filepath":"utils/file_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestCopyDir(c *C.C)","Funname":"TestCopyDir","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestCreateFile(c *C.C)","Funname":"TestCreateFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetFiles(c *C.C)","Funname":"TestGetFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestSymlinkFile(c *C.C)","Funname":"TestSymlinkFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestCopyDir(c *C.C)","Funname":"utils.testWrapper.TestCopyDir","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestCreateFile(c *C.C)","Funname":"utils.testWrapper.TestCreateFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetFiles(c *C.C)","Funname":"utils.testWrapper.TestGetFiles","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestSymlinkFile(c *C.C)","Funname":"utils.testWrapper.TestSymlinkFile","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"utils/filesystem.go","Functions":[{"Uniquefunname":"func QueryFilesytemInfo(path string) (*FilesystemInfo, error)","Funname":"QueryFilesytemInfo","Returntype":"(*FilesystemInfo, error)","Args":"path string"},{"Uniquefunname":"func QueryFilesytemInfo(path string) (*FilesystemInfo, error)","Funname":"utils.QueryFilesytemInfo","Returntype":"(*FilesystemInfo, error)","Args":"path string"}],"Records":[{"Name":"struct:utils.FilesystemInfo","Fields":["utils.FilesystemInfo.AvailSize uint64","utils.FilesystemInfo.FreeSize uint64","utils.FilesystemInfo.TotalSize uint64","utils.FilesystemInfo.UsedSize uint64"]}]}
{"Filepath":"utils/keyfile.go","Functions":[{"Uniquefunname":"func NewKeyFileFromFile(file string) (*glib.KeyFile, error)","Funname":"NewKeyFileFromFile","Returntype":"(*glib.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func ReadKeyFromKeyFile(filename, group, key string, t interface","Funname":"ReadKeyFromKeyFile","Returntype":"(interface{}, bool)","Args":"filename, group, key string, t interface{}"},{"Uniquefunname":"func WriteKeyToKeyFile(filename, group, key string, value interface","Funname":"WriteKeyToKeyFile","Returntype":"bool","Args":"filename, group, key string, value interface{}"},{"Uniquefunname":"func WriteStringToFile(filename, content string) error","Funname":"WriteStringToFile","Returntype":"error","Args":"filename, content string"},{"Uniquefunname":"func WriteStringToKeyFile(filename, content string) bool","Funname":"WriteStringToKeyFile","Returntype":"bool","Args":"filename, content string"},{"Uniquefunname":"func NewKeyFileFromFile(file string) (*glib.KeyFile, error)","Funname":"utils.NewKeyFileFromFile","Returntype":"(*glib.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func ReadKeyFromKeyFile(filename, group, key string, t interface","Funname":"utils.ReadKeyFromKeyFile","Returntype":"(interface{}, bool)","Args":"filename, group, key string, t interface{}"},{"Uniquefunname":"func WriteKeyToKeyFile(filename, group, key string, value interface","Funname":"utils.WriteKeyToKeyFile","Returntype":"bool","Args":"filename, group, key string, value interface{}"},{"Uniquefunname":"func WriteStringToFile(filename, content string) error","Funname":"utils.WriteStringToFile","Returntype":"error","Args":"filename, content string"},{"Uniquefunname":"func WriteStringToKeyFile(filename, content string) bool","Funname":"utils.WriteStringToKeyFile","Returntype":"bool","Args":"filename, content string"}],"Records":[{"Name":"var:utils","Fields":["utils.kfLocker"]}]}
{"Filepath":"utils/keyfile_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestKeyFile(c *C.C)","Funname":"TestKeyFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestKeyFile(c *C.C)","Funname":"utils.testWrapper.TestKeyFile","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"utils/md5.go","Functions":[{"Uniquefunname":"func SumFileMd5(filename string) (string, bool)","Funname":"SumFileMd5","Returntype":"(string, bool)","Args":"filename string"},{"Uniquefunname":"func SumStrMd5(str string) (string, bool)","Funname":"SumStrMd5","Returntype":"(string, bool)","Args":"str string"},{"Uniquefunname":"func SumFileMd5(filename string) (string, bool)","Funname":"utils.SumFileMd5","Returntype":"(string, bool)","Args":"filename string"},{"Uniquefunname":"func SumStrMd5(str string) (string, bool)","Funname":"utils.SumStrMd5","Returntype":"(string, bool)","Args":"str string"}],"Records":null}
{"Filepath":"utils/md5_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestMD5Sum(c *C.C)","Funname":"TestMD5Sum","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestMD5Sum(c *C.C)","Funname":"utils.testWrapper.TestMD5Sum","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"utils/os.go","Functions":[{"Uniquefunname":"func ExecAndWait(timeout int, name string, arg ...string) (stdout, stderr string, err error)","Funname":"ExecAndWait","Returntype":"(stdout, stderr string, err error)","Args":"timeout int, name string, arg ...string"},{"Uniquefunname":"func GetUserName() string","Funname":"GetUserName","Returntype":"string","Args":""},{"Uniquefunname":"func IsEnvExists(envName string) (ok bool)","Funname":"IsEnvExists","Returntype":"(ok bool)","Args":"envName string"},{"Uniquefunname":"func UnsetEnv(envName string) (err error)","Funname":"UnsetEnv","Returntype":"(err error)","Args":"envName string"},{"Uniquefunname":"func doUnsetEnvC(envName string)","Funname":"doUnsetEnvC","Returntype":"","Args":"envName string"},{"Uniquefunname":"func ExecAndWait(timeout int, name string, arg ...string) (stdout, stderr string, err error)","Funname":"utils.ExecAndWait","Returntype":"(stdout, stderr string, err error)","Args":"timeout int, name string, arg ...string"},{"Uniquefunname":"func GetUserName() string","Funname":"utils.GetUserName","Returntype":"string","Args":""},{"Uniquefunname":"func IsEnvExists(envName string) (ok bool)","Funname":"utils.IsEnvExists","Returntype":"(ok bool)","Args":"envName string"},{"Uniquefunname":"func UnsetEnv(envName string) (err error)","Funname":"utils.UnsetEnv","Returntype":"(err error)","Args":"envName string"},{"Uniquefunname":"func doUnsetEnvC(envName string)","Funname":"utils.doUnsetEnvC","Returntype":"","Args":"envName string"}],"Records":null}
{"Filepath":"utils/schemas.go","Functions":[{"Uniquefunname":"func CheckAndNewGSettings(schema string) (*gio.Settings, error)","Funname":"CheckAndNewGSettings","Returntype":"(*gio.Settings, error)","Args":"schema string"},{"Uniquefunname":"func IsGSchemaExist(schema string) bool","Funname":"IsGSchemaExist","Returntype":"bool","Args":"schema string"},{"Uniquefunname":"func isSchemaInList(schema string, list []string) bool","Funname":"isSchemaInList","Returntype":"bool","Args":"schema string, list []string"},{"Uniquefunname":"func CheckAndNewGSettings(schema string) (*gio.Settings, error)","Funname":"utils.CheckAndNewGSettings","Returntype":"(*gio.Settings, error)","Args":"schema string"},{"Uniquefunname":"func IsGSchemaExist(schema string) bool","Funname":"utils.IsGSchemaExist","Returntype":"bool","Args":"schema string"},{"Uniquefunname":"func isSchemaInList(schema string, list []string) bool","Funname":"utils.isSchemaInList","Returntype":"bool","Args":"schema string, list []string"}],"Records":null}
{"Filepath":"utils/schemas_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestGSchemaIsExist(c *C.C)","Funname":"TestGSchemaIsExist","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGSchemaIsExist(c *C.C)","Funname":"utils.testWrapper.TestGSchemaIsExist","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"struct:utils.schemaTest","Fields":["utils.schemaTest.exist bool","utils.schemaTest.schema string"]}]}
{"Filepath":"utils/uri.go","Functions":[{"Uniquefunname":"func DecodeURI(uri string) (content string)","Funname":"DecodeURI","Returntype":"(content string)","Args":"uri string"},{"Uniquefunname":"func EncodeURI(content, scheme string) (uri string)","Funname":"EncodeURI","Returntype":"(uri string)","Args":"content, scheme string"},{"Uniquefunname":"func GetURIContent(uri string) (content string)","Funname":"GetURIContent","Returntype":"(content string)","Args":"uri string"},{"Uniquefunname":"func GetURIScheme(uri string) (scheme string)","Funname":"GetURIScheme","Returntype":"(scheme string)","Args":"uri string"},{"Uniquefunname":"func IsURI(s string) (ok bool)","Funname":"IsURI","Returntype":"(ok bool)","Args":"s string"},{"Uniquefunname":"func PathToURI(filepath, scheme string) string","Funname":"PathToURI","Returntype":"string","Args":"filepath, scheme string"},{"Uniquefunname":"func URIToPath(uri string) string","Funname":"URIToPath","Returntype":"string","Args":"uri string"},{"Uniquefunname":"func deleteStartSpace(str string) string","Funname":"deleteStartSpace","Returntype":"string","Args":"str string"},{"Uniquefunname":"func isBeginWithStr(str, substr string) bool","Funname":"isBeginWithStr","Returntype":"bool","Args":"str, substr string"},{"Uniquefunname":"func pathToFileURI(filepath string) string","Funname":"pathToFileURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToFtpURI(filepath string) string","Funname":"pathToFtpURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToHttpURI(filepath string) string","Funname":"pathToHttpURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToHttpsURI(filepath string) string","Funname":"pathToHttpsURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToSmbURI(filepath string) string","Funname":"pathToSmbURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func DecodeURI(uri string) (content string)","Funname":"utils.DecodeURI","Returntype":"(content string)","Args":"uri string"},{"Uniquefunname":"func EncodeURI(content, scheme string) (uri string)","Funname":"utils.EncodeURI","Returntype":"(uri string)","Args":"content, scheme string"},{"Uniquefunname":"func GetURIContent(uri string) (content string)","Funname":"utils.GetURIContent","Returntype":"(content string)","Args":"uri string"},{"Uniquefunname":"func GetURIScheme(uri string) (scheme string)","Funname":"utils.GetURIScheme","Returntype":"(scheme string)","Args":"uri string"},{"Uniquefunname":"func IsURI(s string) (ok bool)","Funname":"utils.IsURI","Returntype":"(ok bool)","Args":"s string"},{"Uniquefunname":"func PathToURI(filepath, scheme string) string","Funname":"utils.PathToURI","Returntype":"string","Args":"filepath, scheme string"},{"Uniquefunname":"func URIToPath(uri string) string","Funname":"utils.URIToPath","Returntype":"string","Args":"uri string"},{"Uniquefunname":"func deleteStartSpace(str string) string","Funname":"utils.deleteStartSpace","Returntype":"string","Args":"str string"},{"Uniquefunname":"func isBeginWithStr(str, substr string) bool","Funname":"utils.isBeginWithStr","Returntype":"bool","Args":"str, substr string"},{"Uniquefunname":"func pathToFileURI(filepath string) string","Funname":"utils.pathToFileURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToFtpURI(filepath string) string","Funname":"utils.pathToFtpURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToHttpURI(filepath string) string","Funname":"utils.pathToHttpURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToHttpsURI(filepath string) string","Funname":"utils.pathToHttpsURI","Returntype":"string","Args":"filepath string"},{"Uniquefunname":"func pathToSmbURI(filepath string) string","Funname":"utils.pathToSmbURI","Returntype":"string","Args":"filepath string"}],"Records":[{"Name":"const:utils","Fields":["utils.SCHEME_FILE","utils.SCHEME_FTP","utils.SCHEME_HTTP","utils.SCHEME_HTTPS","utils.SCHEME_SMB"]}]}
{"Filepath":"utils/user_special_dir.go","Functions":[{"Uniquefunname":"func GetCacheDir() string","Funname":"GetCacheDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetConfigDir() string","Funname":"GetConfigDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetHomeDir() string","Funname":"GetHomeDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetCacheDir() string","Funname":"utils.GetCacheDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetConfigDir() string","Funname":"utils.GetConfigDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetHomeDir() string","Funname":"utils.GetHomeDir","Returntype":"string","Args":""}],"Records":null}
{"Filepath":"utils/utils.go","Functions":[{"Uniquefunname":"func GenUuid() string","Funname":"GenUuid","Returntype":"string","Args":""},{"Uniquefunname":"func IsElementEqual(e1, e2 interface","Funname":"IsElementEqual","Returntype":"bool","Args":"e1, e2 interface{}"},{"Uniquefunname":"func IsElementInList(e interface","Funname":"IsElementInList","Returntype":"bool","Args":"e interface{}, list interface{}"},{"Uniquefunname":"func IsInterfaceNil(v interface","Funname":"IsInterfaceNil","Returntype":"bool","Args":"v interface{}"},{"Uniquefunname":"func RandString(n int) string","Funname":"RandString","Returntype":"string","Args":"n int"},{"Uniquefunname":"func GenUuid() string","Funname":"utils.GenUuid","Returntype":"string","Args":""},{"Uniquefunname":"func IsElementEqual(e1, e2 interface","Funname":"utils.IsElementEqual","Returntype":"bool","Args":"e1, e2 interface{}"},{"Uniquefunname":"func IsElementInList(e interface","Funname":"utils.IsElementInList","Returntype":"bool","Args":"e interface{}, list interface{}"},{"Uniquefunname":"func IsInterfaceNil(v interface","Funname":"utils.IsInterfaceNil","Returntype":"bool","Args":"v interface{}"},{"Uniquefunname":"func RandString(n int) string","Funname":"utils.RandString","Returntype":"string","Args":"n int"}],"Records":null}
{"Filepath":"utils/utils_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestDecodeURI(c *C.C)","Funname":"TestDecodeURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestEncodeURI(c *C.C)","Funname":"TestEncodeURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGenUuid(c *C.C)","Funname":"TestGenUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetURIContent(c *C.C)","Funname":"TestGetURIContent","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetURIScheme(c *C.C)","Funname":"TestGetURIScheme","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsDir(c *C.C)","Funname":"TestIsDir","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsEnvExists(c *C.C)","Funname":"TestIsEnvExists","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsFileExist(c *C.C)","Funname":"TestIsFileExist","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsInterfaceNil(c *C.C)","Funname":"TestIsInterfaceNil","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsSymlink(c *C.C)","Funname":"TestIsSymlink","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsURI(c *C.C)","Funname":"TestIsURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestPathToURI(c *C.C)","Funname":"TestPathToURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRandString(c *C.C)","Funname":"TestRandString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestURIToPath(c *C.C)","Funname":"TestURIToPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestUnsetEnv(c *C.C)","Funname":"TestUnsetEnv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func utils.Test(t *testing.T)","Funname":"utils.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"utils.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestDecodeURI(c *C.C)","Funname":"utils.testWrapper.TestDecodeURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestEncodeURI(c *C.C)","Funname":"utils.testWrapper.TestEncodeURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGenUuid(c *C.C)","Funname":"utils.testWrapper.TestGenUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetURIContent(c *C.C)","Funname":"utils.testWrapper.TestGetURIContent","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetURIScheme(c *C.C)","Funname":"utils.testWrapper.TestGetURIScheme","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsDir(c *C.C)","Funname":"utils.testWrapper.TestIsDir","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsEnvExists(c *C.C)","Funname":"utils.testWrapper.TestIsEnvExists","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsFileExist(c *C.C)","Funname":"utils.testWrapper.TestIsFileExist","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsInterfaceNil(c *C.C)","Funname":"utils.testWrapper.TestIsInterfaceNil","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsSymlink(c *C.C)","Funname":"utils.testWrapper.TestIsSymlink","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsURI(c *C.C)","Funname":"utils.testWrapper.TestIsURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestPathToURI(c *C.C)","Funname":"utils.testWrapper.TestPathToURI","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestRandString(c *C.C)","Funname":"utils.testWrapper.TestRandString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestURIToPath(c *C.C)","Funname":"utils.testWrapper.TestURIToPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestUnsetEnv(c *C.C)","Funname":"utils.testWrapper.TestUnsetEnv","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"utils/watch_proxy.go","Functions":[{"Uniquefunname":"func (w *WatchProxy) EndWatch()","Funname":"EndWatch","Returntype":"","Args":""},{"Uniquefunname":"func NewWatchProxy() *WatchProxy","Funname":"NewWatchProxy","Returntype":"*WatchProxy","Args":""},{"Uniquefunname":"func (w *WatchProxy) ResetFileListWatch()","Funname":"ResetFileListWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) SetErrorHandler(f func(error))","Funname":"SetErrorHandler","Returntype":"","Args":"f func(error)"},{"Uniquefunname":"func (w *WatchProxy) SetEventHandler(f func(fsnotify.Event))","Funname":"SetEventHandler","Returntype":"","Args":"f func(fsnotify.Event)"},{"Uniquefunname":"func (w *WatchProxy) SetFileList(fileList []string)","Funname":"SetFileList","Returntype":"","Args":"fileList []string"},{"Uniquefunname":"func (w *WatchProxy) StartWatch()","Funname":"StartWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) removeFileListWatch()","Funname":"removeFileListWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) setEndFlag(value bool)","Funname":"setEndFlag","Returntype":"","Args":"value bool"},{"Uniquefunname":"func (w *WatchProxy) setFileListWatch()","Funname":"setFileListWatch","Returntype":"","Args":""},{"Uniquefunname":"func NewWatchProxy() *WatchProxy","Funname":"utils.NewWatchProxy","Returntype":"*WatchProxy","Args":""},{"Uniquefunname":"func (w *WatchProxy) EndWatch()","Funname":"utils.WatchProxy.EndWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) ResetFileListWatch()","Funname":"utils.WatchProxy.ResetFileListWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) SetErrorHandler(f func(error))","Funname":"utils.WatchProxy.SetErrorHandler","Returntype":"","Args":"f func(error)"},{"Uniquefunname":"func (w *WatchProxy) SetEventHandler(f func(fsnotify.Event))","Funname":"utils.WatchProxy.SetEventHandler","Returntype":"","Args":"f func(fsnotify.Event)"},{"Uniquefunname":"func (w *WatchProxy) SetFileList(fileList []string)","Funname":"utils.WatchProxy.SetFileList","Returntype":"","Args":"fileList []string"},{"Uniquefunname":"func (w *WatchProxy) StartWatch()","Funname":"utils.WatchProxy.StartWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) removeFileListWatch()","Funname":"utils.WatchProxy.removeFileListWatch","Returntype":"","Args":""},{"Uniquefunname":"func (w *WatchProxy) setEndFlag(value bool)","Funname":"utils.WatchProxy.setEndFlag","Returntype":"","Args":"value bool"},{"Uniquefunname":"func (w *WatchProxy) setFileListWatch()","Funname":"utils.WatchProxy.setFileListWatch","Returntype":"","Args":""}],"Records":[{"Name":"struct:utils.WatchProxy","Fields":["utils.WatchProxy.end chan bool","utils.WatchProxy.endFlag bool","utils.WatchProxy.errorHandler func(error)","utils.WatchProxy.eventHandler func(fsnotify.Event)","utils.WatchProxy.fileList []string","utils.WatchProxy.lock sync.Mutex","utils.WatchProxy.watcher *fsnotify.Watcher"]}]}
{"Filepath":"xdg/basedir/basedir.go","Functions":[{"Uniquefunname":"func GetSystemConfigDirs() []string","Funname":"GetSystemConfigDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetSystemDataDirs() []string","Funname":"GetSystemDataDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetUserCacheDir() string","Funname":"GetUserCacheDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserConfigDir() string","Funname":"GetUserConfigDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserDataDir() string","Funname":"GetUserDataDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserHomeDir() string","Funname":"GetUserHomeDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserRuntimeDir(strict bool) (string, error)","Funname":"GetUserRuntimeDir","Returntype":"(string, error)","Args":"strict bool"},{"Uniquefunname":"func GetSystemConfigDirs() []string","Funname":"basedir.GetSystemConfigDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetSystemDataDirs() []string","Funname":"basedir.GetSystemDataDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetUserCacheDir() string","Funname":"basedir.GetUserCacheDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserConfigDir() string","Funname":"basedir.GetUserConfigDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserDataDir() string","Funname":"basedir.GetUserDataDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserHomeDir() string","Funname":"basedir.GetUserHomeDir","Returntype":"string","Args":""},{"Uniquefunname":"func GetUserRuntimeDir(strict bool) (string, error)","Funname":"basedir.GetUserRuntimeDir","Returntype":"(string, error)","Args":"strict bool"},{"Uniquefunname":"func filterNotAbs(slice []string) []string","Funname":"basedir.filterNotAbs","Returntype":"[]string","Args":"slice []string"},{"Uniquefunname":"func getFileInfoUid(fi os.FileInfo) int","Funname":"basedir.getFileInfoUid","Returntype":"int","Args":"fi os.FileInfo"},{"Uniquefunname":"func getSystemDirs(envVarName string, defaultDirs []string) []string","Funname":"basedir.getSystemDirs","Returntype":"[]string","Args":"envVarName string, defaultDirs []string"},{"Uniquefunname":"func getUserDir(envVarName string, defaultDir string) string","Funname":"basedir.getUserDir","Returntype":"string","Args":"envVarName string, defaultDir string"},{"Uniquefunname":"func filterNotAbs(slice []string) []string","Funname":"filterNotAbs","Returntype":"[]string","Args":"slice []string"},{"Uniquefunname":"func getFileInfoUid(fi os.FileInfo) int","Funname":"getFileInfoUid","Returntype":"int","Args":"fi os.FileInfo"},{"Uniquefunname":"func getSystemDirs(envVarName string, defaultDirs []string) []string","Funname":"getSystemDirs","Returntype":"[]string","Args":"envVarName string, defaultDirs []string"},{"Uniquefunname":"func getUserDir(envVarName string, defaultDir string) string","Funname":"getUserDir","Returntype":"string","Args":"envVarName string, defaultDir string"}],"Records":null}
{"Filepath":"xdg/basedir/basedir_test.go","Functions":[{"Uniquefunname":"func TestFilterNotAbs(t *testing.T)","Funname":"TestFilterNotAbs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemConfigDirs(t *testing.T)","Funname":"TestGetSystemConfigDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemDataDirs(t *testing.T)","Funname":"TestGetSystemDataDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserCacheDir(t *testing.T)","Funname":"TestGetUserCacheDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserConfigDir(t *testing.T)","Funname":"TestGetUserConfigDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserDataDir(t *testing.T)","Funname":"TestGetUserDataDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserHomeDir(t *testing.T)","Funname":"TestGetUserHomeDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserRuntimeDir(t *testing.T)","Funname":"TestGetUserRuntimeDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterNotAbs(t *testing.T)","Funname":"basedir.TestFilterNotAbs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemConfigDirs(t *testing.T)","Funname":"basedir.TestGetSystemConfigDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemDataDirs(t *testing.T)","Funname":"basedir.TestGetSystemDataDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserCacheDir(t *testing.T)","Funname":"basedir.TestGetUserCacheDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserConfigDir(t *testing.T)","Funname":"basedir.TestGetUserConfigDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserDataDir(t *testing.T)","Funname":"basedir.TestGetUserDataDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserHomeDir(t *testing.T)","Funname":"basedir.TestGetUserHomeDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetUserRuntimeDir(t *testing.T)","Funname":"basedir.TestGetUserRuntimeDir","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"xdg/userdir/userdir.go","Functions":[{"Uniquefunname":"func Get(dir string) string","Funname":"Get","Returntype":"string","Args":"dir string"},{"Uniquefunname":"func ReloadCache() error","Funname":"ReloadCache","Returntype":"error","Args":""},{"Uniquefunname":"func getUserDirsConfigFile() string","Funname":"getUserDirsConfigFile","Returntype":"string","Args":""},{"Uniquefunname":"func parseUserDirsConfig(file string) (map[string]string, error)","Funname":"parseUserDirsConfig","Returntype":"(map[string]string, error)","Args":"file string"},{"Uniquefunname":"func parseValue(val []byte, homeDir string) (string, error)","Funname":"parseValue","Returntype":"(string, error)","Args":"val []byte, homeDir string"},{"Uniquefunname":"func Get(dir string) string","Funname":"userdir.Get","Returntype":"string","Args":"dir string"},{"Uniquefunname":"func ReloadCache() error","Funname":"userdir.ReloadCache","Returntype":"error","Args":""},{"Uniquefunname":"func getUserDirsConfigFile() string","Funname":"userdir.getUserDirsConfigFile","Returntype":"string","Args":""},{"Uniquefunname":"func parseUserDirsConfig(file string) (map[string]string, error)","Funname":"userdir.parseUserDirsConfig","Returntype":"(map[string]string, error)","Args":"file string"},{"Uniquefunname":"func parseValue(val []byte, homeDir string) (string, error)","Funname":"userdir.parseValue","Returntype":"(string, error)","Args":"val []byte, homeDir string"}],"Records":[{"Name":"const:userdir","Fields":["userdir.Desktop","userdir.Documents","userdir.Download","userdir.Music","userdir.Pictures","userdir.PublicShare","userdir.Templates","userdir.Videos"]},{"Name":"var:userdir","Fields":["userdir.errBadValueFormat","userdir.mutex","userdir.userDirsCache"]}]}
{"Filepath":"xdg/userdir/userdir_test.go","Functions":[{"Uniquefunname":"func TestGet(t *testing.T)","Funname":"TestGet","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseUserDirsConfig(t *testing.T)","Funname":"TestParseUserDirsConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseValue(t *testing.T)","Funname":"TestParseValue","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestReloadCache(t *testing.T)","Funname":"TestReloadCache","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGet(t *testing.T)","Funname":"userdir.TestGet","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseUserDirsConfig(t *testing.T)","Funname":"userdir.TestParseUserDirsConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseValue(t *testing.T)","Funname":"userdir.TestParseValue","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestReloadCache(t *testing.T)","Funname":"userdir.TestReloadCache","Returntype":"","Args":"t *testing.T"}],"Records":null}
